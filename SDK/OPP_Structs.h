#pragma once

/**
 * Name: TRIALS
 * Version: FINAL
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum OPP.EAIEvent
	 */
	enum class EAIEvent : uint8_t
	{
		Undefined                           = 0,
		ReactToSoundDisturbanceAware        = 1,
		ReactToSoundDisturbanceUnaware      = 2,
		ReactToVisualDisturbanceAware       = 3,
		ReactToVisualDisturbanceUnaware     = 4,
		ReactToMajorDisturbance             = 5,
		ReactToSensingDisturbance           = 6,
		InvestigateDisturbanceAware         = 7,
		InvestigateDisturbanceUnaware       = 8,
		InvestigatePoint                    = 9,
		ReachedInvestigationPoint           = 10,
		FinishedInvestigatingPoint          = 11,
		InvestigationGiveUp                 = 12,
		AlertedGiveUp                       = 13,
		SuspiciousGiveUp                    = 14,
		SawPlayerEnterHidingSpot            = 15,
		FoundHiddenPlayer                   = 16,
		SearchForOtherPlayersAfterKnockDown = 17,
		PullOutFromHidespot                 = 18,
		ReactToPlayerBeforeChase            = 19,
		ReactToMultiplePlayersBeforeChase   = 20,
		StartChaseAfterReaction             = 21,
		StartChaseNoReaction                = 22,
		StartMoveToIncapacitatedPlayer      = 23,
		ChaseReachedLeashLimit              = 24,
		ChaseStartGiveUp                    = 25,
		ChaseGiveUp                         = 26,
		ChaseStartYielding                  = 27,
		ChaseYield                          = 28,
		ChaseChangedTarget                  = 29,
		ChaseTaunt                          = 30,
		LostSightOfPlayer                   = 31,
		StartMoveToLostSight                = 32,
		ReachedLastKnownPosition            = 33,
		UnawarePlayerProximity              = 34,
		ChasePlayerProximity                = 35,
		ReachedPatrolWaypoint               = 36,
		PassUnderDynamicObstacle            = 37,
		EnterDarknessZone                   = 38,
		EnterLightZone                      = 39,
		AttackPlayer                        = 40,
		GuardingAttack                      = 41,
		PushPlayer                          = 42,
		ImposterCharge                      = 43,
		PusherAttack                        = 44,
		PairedAttackConnecting              = 45,
		KnockedDownPlayer                   = 46,
		StartFinishingIncapacitatedPlayer   = 47,
		FinishIncapacitatedPlayer           = 48,
		DealtDamage                         = 49,
		KilledPlayer                        = 50,
		AttackOtherNPC                      = 51,
		AttackedByOtherNPC                  = 52,
		ThrowProjectile                     = 53,
		ThrownProjectileHit                 = 54,
		ThrownProjectileMiss                = 55,
		TakeDamage                          = 56,
		HitByProjectile                     = 57,
		PairedAttackInterrupted             = 58,
		HitReaction_Low                     = 59,
		HitReaction_Med                     = 60,
		HitReaction_High                    = 61,
		DelayedHitReaction                  = 62,
		ShovedByPlayerAware                 = 63,
		ShovedByPlayerUnaware               = 64,
		ShovePunish                         = 65,
		KnockedOut                          = 66,
		GetUpFromKnockOut                   = 67,
		Killed                              = 68,
		ProvocationWarning                  = 69,
		ProvokedByPlayer                    = 70,
		ReactToImperativeDisturbance        = 71,
		TurnOffImperativeDisturbance        = 72,
		SignalTackle                        = 73,
		FailedTackle                        = 74,
		SuccessfulTackle                    = 75,
		FinishedGroundAndPound              = 76,
		PlayerAvoidanceStart                = 77,
		PlayerAvoidanceRepath               = 78,
		AcknowledgePlayer                   = 79,
		AcknowledgeOtherNPC                 = 80,
		ZoneDefenseBecomeAlert              = 81,
		ZoneDefenseBlown                    = 82,
		ReactToCloseGrenade                 = 83,
		AffectedByStunGrenade               = 84,
		RecoverFromStunGrenade              = 85,
		AffectedByBlindPaint                = 86,
		AffectedByHealSlowdown              = 87,
		SleeperDisturbed                    = 88,
		SleeperScream                       = 89,
		StartRetirement                     = 90,
		MAX                                 = 91
	};

	/**
	 * Enum OPP.EScheduledPropertyValueChangedType
	 */
	enum class EScheduledPropertyValueChangedType : uint8_t
	{
		LocallySet          = 0,
		DesiredTimeReached  = 1,
		FailsafeTimeReached = 2,
		OnRepExpired        = 3,
		MAX                 = 4
	};

	/**
	 * Enum OPP.ENPCWeapon
	 */
	enum class ENPCWeapon : uint8_t
	{
		None            = 0,
		Knife           = 1,
		Machete         = 2,
		Axe             = 3,
		Bottle          = 4,
		Shotgun         = 5,
		SledgeHammer    = 6,
		Pipe            = 7,
		WoodPlank       = 8,
		MolotovCocktail = 9,
		CattleProd      = 10,
		DoubleClaw      = 11,
		MAX             = 12
	};

	/**
	 * Enum OPP.EDamageSoundMaterial
	 */
	enum class EDamageSoundMaterial : uint8_t
	{
		None              = 0,
		Unarmed           = 1,
		Berzerker         = 2,
		Blade_Large       = 3,
		Blade_Small       = 4,
		Blunt_DenseMetal  = 5,
		Blunt_HollowMetal = 6,
		Blunt_Wood        = 7,
		Blunt_Electric    = 8,
		Electric          = 9,
		Fire              = 10,
		Brick             = 11,
		PsychosisEntity   = 12,
		Grinder           = 13,
		Glass             = 14,
		Acid              = 15,
		MAX               = 16
	};

	/**
	 * Enum OPP.EHurtVOType
	 */
	enum class EHurtVOType : uint8_t
	{
		None                 = 0,
		GenericLow           = 1,
		GenericMedium        = 2,
		GenericHigh          = 3,
		LandLow              = 4,
		LandHigh             = 5,
		Fire                 = 6,
		Electricity          = 7,
		Shock                = 8,
		HurtContinuousMedium = 9,
		Acid                 = 10,
		MAX                  = 11
	};

	/**
	 * Enum OPP.EDamageType
	 */
	enum class EDamageType : uint8_t
	{
		NoDamage                = 0,
		Generic                 = 1,
		GenericNonFatal         = 2,
		Temporary               = 3,
		UnarmedRightHandStrike  = 4,
		UnarmedLeftHandStrike   = 5,
		UnarmedHeadStrike       = 6,
		UnarmedLeftFootStrike   = 7,
		UnarmedRightFootStrike  = 8,
		UnarmedOtherStrike      = 9,
		WeaponStrike            = 10,
		Throwable               = 11,
		Animated                = 12,
		AnimatedDangerous       = 13,
		ForceKill               = 14,
		Electric                = 15,
		Fire                    = 16,
		MolotovFire             = 17,
		Falling                 = 18,
		Trap                    = 19,
		SpectreProximity        = 20,
		EndOfStage              = 21,
		HackPanelFail           = 22,
		CoopTrap                = 23,
		PlayerDamageLeash       = 24,
		RunningProhibitedDamage = 25,
		Grinder                 = 26,
		AcidBottleSpill         = 27,
		StepOnGlass             = 28,
		FailedPuzzleRoom        = 29,
		Custom                  = 30,
		MAX                     = 31
	};

	/**
	 * Enum OPP.EHallucinationType
	 */
	enum class EHallucinationType : uint8_t
	{
		None            = 0,
		AlteredControls = 1,
		JumpScare       = 2,
		RandomSound     = 3,
		LSDEffect       = 4,
		Dizzyness       = 5,
		Psychosis       = 6,
		MAX             = 7
	};

	/**
	 * Enum OPP.EDoorActionType
	 */
	enum class EDoorActionType : uint8_t
	{
		Open               = 0,
		QuickOpen          = 1,
		Close              = 2,
		Lock               = 3,
		Unlock             = 4,
		Unhinge            = 5,
		Unhinge_Done       = 6,
		AttachDoorRotation = 7,
		ReleaseDoor        = 8,
		MAX                = 9
	};

	/**
	 * Enum OPP.EArmWreslingPanelInputFailType
	 */
	enum class EArmWreslingPanelInputFailType : uint8_t
	{
		Failed  = 0,
		Success = 1,
		NoInput = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.EObjectiveCoordinatorState
	 */
	enum class EObjectiveCoordinatorState : uint8_t
	{
		Invalid         = 0,
		Disabled        = 1,
		WaitingForStart = 2,
		Started         = 3,
		Stopped         = 4,
		Failed          = 5,
		Completed       = 6,
		MAX             = 7
	};

	/**
	 * Enum OPP.EPlayerLeaveTarget
	 */
	enum class EPlayerLeaveTarget : uint8_t
	{
		None             = 0,
		MainMenu         = 1,
		Lobby            = 2,
		Party            = 3,
		Experiment       = 4,
		Desktop          = 5,
		Tutorial         = 6,
		PartyGameSession = 7,
		MAX              = 8
	};

	/**
	 * Enum OPP.ECurrencyType
	 */
	enum class ECurrencyType : uint8_t
	{
		None          = 0,
		MurkoffPoint  = 1,
		MurkoffDollar = 2,
		ReleaseToken  = 3,
		EventToken    = 4,
		Count         = 5,
		MAX           = 6
	};

	/**
	 * Enum OPP.EPlayerCustomizationSlot
	 */
	enum class EPlayerCustomizationSlot : uint8_t
	{
		NightVisionGoggles = 0,
		Hair               = 1,
		Head               = 2,
		Watch              = 3,
		UpperBody          = 4,
		Toaster            = 5,
		LowerBody          = 6,
		Glove              = 7,
		ESOPStraps         = 8,
		None               = 9,
		MAX                = 10
	};

	/**
	 * Enum OPP.EProfilePlatform
	 */
	enum class EProfilePlatform : uint8_t
	{
		Unknown = 0,
		Test    = 1,
		Steam   = 2,
		EOS     = 3,
		Xbox    = 4,
		Psn     = 5,
		MAX     = 6
	};

	/**
	 * Enum OPP.EActiveSkillType
	 */
	enum class EActiveSkillType : uint8_t
	{
		None   = 0,
		Amp    = 1,
		Chem   = 2,
		Pharma = 3,
		Spec   = 4,
		Max    = 5
	};

	/**
	 * Enum OPP.ESkinColorType
	 */
	enum class ESkinColorType : uint8_t
	{
		Light = 0,
		Dark  = 1,
		MAX   = 2
	};

	/**
	 * Enum OPP.EPlayerEvent
	 */
	enum class EPlayerEvent : uint8_t
	{
		None                                          = 0,
		CoopMove                                      = 1,
		HelpedUpByTeammate                            = 2,
		HelpedUpTeammate                              = 3,
		PlayerTookDamage                              = 4,
		PlayerKnockedDown                             = 5,
		PlayerDied                                    = 6,
		PlayerLostChance                              = 7,
		SanityLost                                    = 8,
		RevivedDeadPlayer                             = 9,
		SuccessfullyUsedDynamicObstacle               = 10,
		BodyHitEnemy                                  = 11,
		HeadShotHitEnemy                              = 12,
		DistractEnemyWithBrick                        = 13,
		DistractEnemyWithBottle                       = 14,
		ShovedEnemy                                   = 15,
		SavedYourselfFromGroundAndPound               = 16,
		SavedPlayerFromGroundAndPound                 = 17,
		SavedPlayerFromExecution                      = 18,
		SavedPlayerFromElectricTrap                   = 19,
		SavedYourselfFromElectricTrap                 = 20,
		SavedByPlayerFromElectricTrap                 = 21,
		TriggeredSoundTrap                            = 22,
		CaughtByDoorTrap                              = 23,
		DamagedByExplosiveTrap                        = 24,
		DamagedByElectricFloorTrap                    = 25,
		UsedActiveSkill                               = 26,
		Skill_Spec_SpottedEnemy                       = 27,
		Skill_Pharma_AffectedPlayer                   = 28,
		Skill_Amp_AffectedEnemy                       = 29,
		Skill_Chem_AffectedEnemy                      = 30,
		Unlocked_Door_Lockpick                        = 31,
		Unlocked_Container_Lockpick                   = 32,
		Unlocked_Door_MasterKey                       = 33,
		Unlocked_Container_MasterKey                  = 34,
		SurvivedPsychosis                             = 35,
		PickedUp_MurkoffPoint                         = 36,
		PickedUp_MurkoffDollar                        = 37,
		PickedUp_CollectibleDocument                  = 38,
		PickedUp_EquippableItem                       = 39,
		UsedItem_Health                               = 40,
		UsedItem_ReviveSyringe                        = 41,
		UsedItem_Stamina                              = 42,
		UsedItem_Battery                              = 43,
		UsedItem_SkillCharge                          = 44,
		UsedItem_Antidote                             = 45,
		UsedItem_Throwable                            = 46,
		UsedItem_RespawnPill                          = 47,
		DisarmedWireTriggerTrap                       = 48,
		BashOpenLockedDoor                            = 49,
		EnteredHidingSpot                             = 50,
		PropagandaPosterCollected                     = 51,
		StageTimeElapsed                              = 52,
		CompletedStage                                = 53,
		CompletedStageAlive                           = 54,
		CompletedStageDead                            = 55,
		LeftTeammateBehind                            = 56,
		StageEndPercentageHealthLost                  = 57,
		CompletedMainObjective                        = 58,
		CompletedSecondaryObjective                   = 59,
		CompletedMainObjectiveStep                    = 60,
		CompletedSecondaryObjectiveStep               = 61,
		CompletedMainObjectiveStepPlayerSpecific      = 62,
		CompletedSecondaryObjectiveStepPlayerSpecific = 63,
		CompletedExperiment                           = 64,
		ScriptedPoints                                = 65,
		Max                                           = 66
	};

	/**
	 * Enum OPP.EPlayerIndicatorType
	 */
	enum class EPlayerIndicatorType : uint8_t
	{
		Default                      = 0,
		Knockdown                    = 1,
		Objective_Default            = 2,
		Objective_Cart               = 3,
		Objective_Exit               = 4,
		Objective_HotPotato          = 5,
		Objective_QuestInventoryItem = 6,
		Objective_Stalker            = 7,
		Objective_ZoneDefense        = 8,
		Objective_LargePickup        = 9,
		KnockdownBeingTargetted      = 10,
		AboutToDie                   = 11,
		CoopTrap                     = 12,
		CoopMove                     = 13,
		HelpUp                       = 14,
		Revive                       = 15,
		Dead                         = 16,
		CanBeRevived                 = 17,
		WantsToTrade                 = 18,
		PlayerInvestigating          = 19,
		ItemHoldingAction            = 20,
		MAX                          = 21
	};

	/**
	 * Enum OPP.EGameplayAttributeModifierType
	 */
	enum class EGameplayAttributeModifierType : uint8_t
	{
		Addition          = 0,
		Multiplication    = 1,
		AddBaseValueRatio = 2,
		MAX               = 3
	};

	/**
	 * Enum OPP.EGameplayAttributeType
	 */
	enum class EGameplayAttributeType : uint8_t
	{
		Invalid                            = 0,
		MaxHealth                          = 1,
		MaxNVBatteries                     = 2,
		MaxStamina                         = 3,
		HealthRegenDelay                   = 4,
		HealthOnHelpedUp                   = 5,
		HealthOnRevived                    = 6,
		HealthAfterRespawn                 = 7,
		PsychosisDecaySpeed                = 8,
		PsychosisContinuousGainDelay       = 9,
		PsychosisGainMultiplier            = 10,
		PsychosisDurationMultiplier        = 11,
		ExtraPsychosisGain                 = 12,
		NVBatteryConsumption               = 13,
		NVBatteryRechargeRate              = 14,
		StaminaMovementCostMultiplier      = 15,
		StaminaExhaustionDuration          = 16,
		StaminaRecoveryRateMultiplier      = 17,
		StaminaShoveCostMultiplier         = 18,
		StaminaCoopCostMultiplier          = 19,
		StaminaBashCostMultiplier          = 20,
		StaminaTraversalCostMultiplier     = 21,
		HidingSpotMaxStaminaModifier       = 22,
		ActiveSkillCooldown                = 23,
		ActiveSkillActivationRadius        = 24,
		ActiveSkillEffectRadius            = 25,
		ActiveSkillEffectDuration          = 26,
		ActiveSkillEffect2Duration         = 27,
		ActiveSkillPharmaEffectMultiplier  = 28,
		ActiveSkillSpecTagDuration         = 29,
		StartItemsBrick                    = 30,
		StartItemsLockpick                 = 31,
		StartItemsHealthGain               = 32,
		BatteryItemUseMultiplier           = 33,
		HealthItemUseMultiplier            = 34,
		TempHealthItemUseMultiplier        = 35,
		TempHealthDecayRate                = 36,
		TempHealthConversionRate           = 37,
		StaminaItemUseMultiplier           = 38,
		AntidoteItemUseMultiplier          = 39,
		MoneyPickupMultiplier              = 40,
		SkillChargeItemPickupMultiplier    = 41,
		ChanceOfKeepingSyringeAfterUse     = 42,
		ChanceOfKeepingLockpickAfterUse    = 43,
		ChanceOfKeepingMasterKeyAfterUse   = 44,
		MeleeDamageReceivedMultiplier      = 45,
		ProjectileDamageReceivedMultiplier = 46,
		SpectreDamageReceivedMultiplier    = 47,
		TrapDamageReceivedMultiplier       = 48,
		FallDamageMultiplier               = 49,
		ChanceOfPlayerBreakingIn1Hit       = 50,
		PlayerBashDamage                   = 51,
		PlayerShovePushDistance            = 52,
		PerkSlotCount                      = 53,
		InventorySlotCount                 = 54,
		NoiseTrapNoiseMultiplier           = 55,
		ThrowableNoiseMultiplier           = 56,
		ThrowableStunDurationMultiplier    = 57,
		NoiseWhenCrouching                 = 58,
		NoiseWhenRunning                   = 59,
		NoiseWhenWalking                   = 60,
		NoiseWhenOpeningDoorsMultiplier    = 61,
		PerceivedVisibilityMultiplier      = 62,
		MinigameSpeedMultiplier            = 63,
		MinigameZoneSizeModifier           = 64,
		HoldDurationMultiplier             = 65,
		GarageDoorProgressMultiplier       = 66,
		RemoveTrapMultiplier               = 67,
		GroundAndPoundMashMultiplier       = 68,
		PushCartMultiplier                 = 69,
		DisarmTrapMultiplier               = 70,
		HelpUpMultiplier                   = 71,
		HelpUpDamageSlowDownMultiplier     = 72,
		ReviveVictimMultiplier             = 73,
		ReviveHelperMultiplier             = 74,
		ReviveDamageSlowDownMultiplier     = 75,
		CrouchSpeedMultiplier              = 76,
		WalkingSpeedMultiplier             = 77,
		RunningSpeedMultiplier             = 78,
		LargeObjectCarrySpeedMultiplier    = 79,
		AimAssistRadiusMultiplier          = 80,
		MAX                                = 81
	};

	/**
	 * Enum OPP.ECustomizationMenuCategory
	 */
	enum class ECustomizationMenuCategory : uint8_t
	{
		DNA              = 0,
		Voice            = 1,
		Outfits          = 2,
		NightVision      = 3,
		UpperBody        = 4,
		LowerBody        = 5,
		Watch            = 6,
		Haircut          = 7,
		Glove            = 8,
		Rigs             = 9,
		Toaster          = 10,
		Trinkets         = 11,
		PlayerIcon       = 12,
		Cell_Bundle      = 13,
		Cell_MediumProp1 = 14,
		Cell_MediumProp2 = 15,
		Cell_SmallProp1  = 16,
		Cell_SmallProp2  = 17,
		Cell_Poster1     = 18,
		Cell_Poster2     = 19,
		Cell_Poster3     = 20,
		Cell_Poster4     = 21,
		Cell_WallPaper   = 22,
		Cell_Carpet      = 23,
		Cell_Bed         = 24,
		Cell_Sink        = 25,
		Cell_Ceramic     = 26,
		Cell_Trim        = 27,
		None             = 28,
		MAX              = 29
	};

	/**
	 * Enum OPP.EGameDifficulty
	 */
	enum class EGameDifficulty : uint8_t
	{
		Undefined = 0,
		Easy      = 1,
		Normal    = 2,
		Hard      = 3,
		Insane    = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.EPlayerCustomizationRarity
	 */
	enum class EPlayerCustomizationRarity : uint8_t
	{
		Invalid   = 0,
		Common    = 1,
		Rare      = 2,
		Epic      = 3,
		Legendary = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.ERewardType
	 */
	enum class ERewardType : uint8_t
	{
		None                = 0,
		PlayerXp            = 1,
		Customization       = 2,
		PerkSlot            = 3,
		Currency            = 4,
		RandomCustomization = 5,
		MAX                 = 6
	};

	/**
	 * Enum OPP.EXPGainType
	 */
	enum class EXPGainType : uint8_t
	{
		None                   = 0,
		TrialInitialCompletion = 1,
		TrialPerfectScore      = 2,
		TrialRepeatable        = 3,
		TrialScore             = 4,
		Badges                 = 5,
		MAX                    = 6
	};

	/**
	 * Enum OPP.EChessGameState
	 */
	enum class EChessGameState : uint8_t
	{
		None              = 0,
		WaitingForPlayers = 1,
		Intro             = 2,
		GameInProgress    = 3,
		Outtro            = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.EChessTeam
	 */
	enum class EChessTeam : uint8_t
	{
		None  = 0,
		White = 1,
		Black = 2,
		MAX   = 3
	};

	/**
	 * Enum OPP.EChessGameEndReason
	 */
	enum class EChessGameEndReason : uint8_t
	{
		None          = 0,
		Mate          = 1,
		Timeout       = 2,
		Resign        = 3,
		DrawStalemate = 4,
		DrawThreefold = 5,
		DrawFiftyRule = 6,
		DrawMaterial  = 7,
		MAX           = 8
	};

	/**
	 * Enum OPP.EChessGameTurnType
	 */
	enum class EChessGameTurnType : uint8_t
	{
		None      = 0,
		Play      = 1,
		Promoting = 2,
		Checked   = 3,
		MAX       = 4
	};

	/**
	 * Enum OPP.EChessPieceType
	 */
	enum class EChessPieceType : uint8_t
	{
		None   = 0,
		Pawn   = 1,
		Rook   = 2,
		Knight = 3,
		Bishop = 4,
		Queen  = 5,
		King   = 6,
		MAX    = 7
	};

	/**
	 * Enum OPP.EPlayerStat
	 */
	enum class EPlayerStat : uint8_t
	{
		None                              = 0,
		ItemsPickedUp                     = 1,
		ItemsPickedUp_SmallMedicine       = 2,
		ItemsPickedUp_LargeMedicine       = 3,
		ItemsPickedUp_HealthBooster       = 4,
		ItemsPickedUp_ReviveSyringe       = 5,
		ItemsPickedUp_Adrenaline          = 6,
		ItemsPickedUp_StaminaBooster      = 7,
		ItemsPickedUp_SmallBattery        = 8,
		ItemsPickedUp_LargeBattery        = 9,
		ItemsPickedUp_BatteryBooster      = 10,
		ItemsPickedUp_LockPick            = 11,
		ItemsPickedUp_MasterKey           = 12,
		ItemsPickedUp_RigRecharger        = 13,
		ItemsPickedUp_Bottle              = 14,
		ItemsPickedUp_Antidote            = 15,
		ItemsPickedUp_Brick               = 16,
		ItemsPickedUp_CollectibleDocument = 17,
		ItemsUsed                         = 18,
		ItemsUsed_Health                  = 19,
		ItemsUsed_Throwable               = 20,
		ItemsUsed_SmallMedicine           = 21,
		ItemsUsed_LargeMedicine           = 22,
		ItemsUsed_HealthBooster           = 23,
		ItemsUsed_ReviveSyringe           = 24,
		ItemsUsed_Adrenaline              = 25,
		ItemsUsed_StaminaBooster          = 26,
		ItemsUsed_SmallBattery            = 27,
		ItemsUsed_LargeBattery            = 28,
		ItemsUsed_BatteryBooster          = 29,
		ItemsUsed_LockPick                = 30,
		ItemsUsed_MasterKey               = 31,
		ItemsUsed_RigRecharger            = 32,
		ItemsUsed_Bottle                  = 33,
		ItemsUsed_Antidote                = 34,
		ItemsUsed_Brick                   = 35,
		ItemsDropped                      = 36,
		ItemsDropped_SmallMedicine        = 37,
		ItemsDropped_LargeMedicine        = 38,
		ItemsDropped_HealthBooster        = 39,
		ItemsDropped_ReviveSyringe        = 40,
		ItemsDropped_Adrenaline           = 41,
		ItemsDropped_StaminaBooster       = 42,
		ItemsDropped_SmallBattery         = 43,
		ItemsDropped_LargeBattery         = 44,
		ItemsDropped_BatteryBooster       = 45,
		ItemsDropped_LockPick             = 46,
		ItemsDropped_MasterKey            = 47,
		ItemsDropped_RigRecharger         = 48,
		ItemsDropped_Bottle               = 49,
		ItemsDropped_Antidote             = 50,
		ItemsDropped_Brick                = 51,
		UnlockedContainers                = 52,
		ItemsTraded                       = 53,
		ItemsTraded_SmallMedicine         = 54,
		ItemsTraded_LargeMedicine         = 55,
		ItemsTraded_HealthBooster         = 56,
		ItemsTraded_ReviveSyringe         = 57,
		ItemsTraded_Adrenaline            = 58,
		ItemsTraded_StaminaBooster        = 59,
		ItemsTraded_SmallBattery          = 60,
		ItemsTraded_LargeBattery          = 61,
		ItemsTraded_BatteryBooster        = 62,
		ItemsTraded_LockPick              = 63,
		ItemsTraded_MasterKey             = 64,
		ItemsTraded_RigRecharger          = 65,
		ItemsTraded_Bottle                = 66,
		ItemsTraded_Antidote              = 67,
		ItemsTraded_Brick                 = 68,
		TimesCurrencyPickedUp             = 69,
		CurrencyPickedUp_MurkoffPoint     = 70,
		CurrencyPickedUp_MurkoffDollar    = 71,
		TimesUsedActiveSkill              = 72,
		TotalDamageTaken                  = 73,
		TimesIncapacitated                = 74,
		SecondsSpentIncapacitated         = 75,
		TimesKilled                       = 76,
		ChancesLost                       = 77,
		SecondsSpentDead                  = 78,
		TimesRevived                      = 79,
		TimesRespawned                    = 80,
		TimesHelpedUpTeammate             = 81,
		TimesRevivedDeadPlayer            = 82,
		TimesUsedHidingSpot               = 83,
		SecondsSpentInHidingSpot          = 84,
		TimesUsedNightVision              = 85,
		SecondsSpentInNightVision         = 86,
		TimesUsedDynamicObstable          = 87,
		TimesHitNpcWithDynamicObstable    = 88,
		TimesTriggeredExplosiveTrap       = 89,
		TimesDamagedByExplosiveTrap       = 90,
		TotalDamageByExplosiveTraps       = 91,
		DoorTrapsDisarmed                 = 92,
		DoorTrapsTriggered                = 93,
		DoorTrapsAvoided                  = 94,
		DoorTrapsCaught                   = 95,
		BashOpenLockedDoor                = 96,
		LockedContainersDisarmAttempts    = 97,
		LockedContainersDisarmSuccess     = 98,
		LockedContainersDisarmFailure     = 99,
		TimesDamagedByElectricFloorTrap   = 100,
		TotalDamageByElectricFloorTraps   = 101,
		JumpScaresTriggered               = 102,
		Shove                             = 103,
		BodyHitEnemy                      = 104,
		HeadShotHitEnemy                  = 105,
		DistractEnemyWithThrowable        = 106,
		Spotted                           = 107,
		SecondsSpentCrouched              = 108,
		SecondsSpentRunning               = 109,
		SecondsSpentSliding               = 110,
		Chases                            = 111,
		ChasesEscaped                     = 112,
		ChasesDamaged                     = 113,
		ChasesIncapacitated               = 114,
		ChasesEscapedWithHidingSpot       = 115,
		SecondsSpentChased                = 116,
		TimesInPsychosis                  = 117,
		SecondsSpentInPsychosis           = 118,
		PuzzleRoomsCompleted              = 119,
		RewardRoomsUnlocked               = 120,
		DistanceTraveled                  = 121,
		HealthRecovered                   = 122,
		BatteryRecovered                  = 123,
		StaminaRecovered                  = 124,
		SanityRecovered                   = 125,
		CoopMovesPerformed                = 126,
		Badge_BigSaver                    = 127,
		Badge_SleighOfHand                = 128,
		Badge_Mechanophiliac              = 129,
		Badge_TogetherWeAreStong          = 130,
		Badge_CrowdControl                = 131,
		Badge_Hypochondriac               = 132,
		Badge_NotYourTimeYet              = 133,
		Badge_GottaGoFast                 = 134,
		Badge_BreatheIn                   = 135,
		Badge_PowerSurge                  = 136,
		Badge_Bulleye                     = 137,
		Badge_MajorLeaguePlayer           = 138,
		Badge_Distraction                 = 139,
		Badge_Coward                      = 140,
		Badge_TriggerHappy                = 141,
		Badge_AngerIssues                 = 142,
		Badge_TappingOut                  = 143,
		Badge_BoostMeUp                   = 144,
		Badge_ClearVision                 = 145,
		Badge_HighAsAKite                 = 146,
		Badge_StepOnMeDaddy               = 147,
		Badge_Hemophiliac                 = 148,
		Badge_Hoarder                     = 149,
		Badge_DriftKing                   = 150,
		Badge_Marathonian                 = 151,
		Badge_Hunchback                   = 152,
		Badge_CantTouchThis               = 153,
		Badge_AverageJoe                  = 154,
		Badge_CompletedProgram1           = 155,
		Badge_CompletedProgram2           = 156,
		Badge_CompletedProgram3           = 157,
		Badge_CompletedProgram4           = 158,
		Badge_CompletedProgramX           = 159,
		CharactersReleased_Volundary      = 160,
		BestTrialCompletionTimeSeconds    = 161,
		BestTrialGroupTQ                  = 162,
		BestTrialPersonalTQ               = 163,
		MaxCharacterLevelReached          = 164,
		TotalTrialTimePlayedSeconds       = 165,
		TrialsCompleted                   = 166,
		TrialsCompletedNoDamage           = 167,
		TrialsFailed                      = 168,
		ArmWrestlingMatchesWon            = 169,
		ArmWrestlingMatchesLost           = 170,
		ChessMatchesWon                   = 171,
		ChessMatchesLost                  = 172,
		TalkWheel                         = 173,
		TalkWheel_Help                    = 174,
		TalkWheel_Acknowledge             = 175,
		TalkWheel_Regroup                 = 176,
		TalkWheel_Wait                    = 177,
		TalkWheel_Danger                  = 178,
		TalkWheel_Thanks                  = 179,
		TalkWheel_OnMyWay                 = 180,
		TalkWheel_Hello                   = 181,
		TalkWheel_Ping                    = 182,
		Max                               = 183
	};

	/**
	 * Enum OPP.EGamepadType
	 */
	enum class EGamepadType : uint8_t
	{
		XboxOne    = 0,
		Xbox360    = 1,
		DualSense  = 2,
		Dualshock4 = 3,
		Dualshock3 = 4,
		None       = 5,
		MAX        = 6
	};

	/**
	 * Enum OPP.EExitStageObjectiveState
	 */
	enum class EExitStageObjectiveState : uint8_t
	{
		WaitingForButton = 0,
		WaitingForDoors  = 1,
		CanAccessSAS     = 2,
		MAX              = 3
	};

	/**
	 * Enum OPP.ELoadoutElementType
	 */
	enum class ELoadoutElementType : uint8_t
	{
		None               = 0,
		ActiveSkill        = 1,
		ActiveSkillUpgrade = 2,
		Perk               = 3,
		ProfileUpgrade     = 4,
		MAX                = 5
	};

	/**
	 * Enum OPP.EMainMenuState
	 */
	enum class EMainMenuState : uint8_t
	{
		None                       = 0,
		WaitingForPlayerController = 1,
		WaitingForInput            = 2,
		Disclaimer                 = 3,
		Connecting                 = 4,
		ProcessingBootInvite       = 5,
		Connected                  = 6,
		MainMenu                   = 7,
		EnteringLobby              = 8,
		TransitionToTutorialMap    = 9,
		EnteringTutorialMap        = 10,
		MAX                        = 11
	};

	/**
	 * Enum OPP.EGamePhase
	 */
	enum class EGamePhase : uint8_t
	{
		None                     = 0,
		WaitingForPlayers        = 1,
		WaitingForPlayersSitting = 2,
		LoadingStage             = 3,
		Populating               = 4,
		WaitingForStageReady     = 5,
		StageReady               = 6,
		StageStarted             = 7,
		StageEnding              = 8,
		StageFailed              = 9,
		StageReset               = 10,
		StageSuccess             = 11,
		ReturnToLobby            = 12,
		PostGameExitTimeout      = 13,
		MAX                      = 14
	};

	/**
	 * Enum OPP.ESASVariatorType
	 */
	enum class ESASVariatorType : uint8_t
	{
		None          = 0,
		SplitEntrance = 1,
		SplitExit     = 2,
		Max           = 3
	};

	/**
	 * Enum OPP.EObstacleVariatorType
	 */
	enum class EObstacleVariatorType : uint8_t
	{
		None           = 0,
		SoundTraps     = 1,
		ExplosiveTraps = 2,
		ElectricFloors = 3,
		PsychosisMine  = 4,
		Max            = 5
	};

	/**
	 * Enum OPP.ESecondaryObjectiveVariatorType
	 */
	enum class ESecondaryObjectiveVariatorType : uint8_t
	{
		None         = 0,
		Posters      = 1,
		SmashScreens = 2,
		Max          = 3
	};

	/**
	 * Enum OPP.EGameSessionType
	 */
	enum class EGameSessionType : uint8_t
	{
		Unknown     = 0,
		Placement   = 1,
		Matchmaking = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ESASState
	 */
	enum class ESASState : uint8_t
	{
		Invalid          = 0,
		NextExitUnlocked = 1,
		InTransition     = 2,
		RestartingLevel  = 3,
		NextExitLocked   = 4,
		Begin            = 5,
		ReturnToLobby    = 6,
		MAX              = 7
	};

	/**
	 * Enum OPP.EHotPotatoState
	 */
	enum class EHotPotatoState : uint8_t
	{
		Disabled  = 0,
		Idle      = 1,
		Dropped   = 2,
		Carried   = 3,
		Completed = 4,
		Expired   = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EWorldIconType
	 */
	enum class EWorldIconType : uint8_t
	{
		Unspecified        = 0,
		PlayerIndicator    = 1,
		CoopNotification   = 2,
		ObjectiveDefault   = 3,
		ObjectivePsychosis = 4,
		PlayerPing         = 5,
		NPCDebugIcon       = 6,
		FriendlyDevice     = 7,
		DeadBodySolo       = 8,
		TutorialZone       = 9,
		MAX                = 10
	};

	/**
	 * Enum OPP.EGameObjectiveType
	 */
	enum class EGameObjectiveType : uint8_t
	{
		Default          = 0,
		HotPotato        = 1,
		Stalker          = 2,
		PushCart         = 3,
		SimpleInteract   = 4,
		LargeInteract    = 5,
		Exit             = 6,
		EscapePuzzleRoom = 7,
		ShootNPC         = 8,
		MAX              = 9
	};

	/**
	 * Enum OPP.EGameMessageCategory
	 */
	enum class EGameMessageCategory : uint8_t
	{
		Normal             = 0,
		Error              = 1,
		ObjectiveStarted   = 2,
		ObjectiveCompleted = 3,
		MAX                = 4
	};

	/**
	 * Enum OPP.InventoryWheelMode
	 */
	enum class EInventoryWheelMode : uint8_t
	{
		InventoryWheelMode_Hold                   = 0,
		InventoryWheelMode_Scroll                 = 1,
		InventoryWheelMode_None                   = 2,
		InventoryWheelMode_InventoryWheelMode_MAX = 3
	};

	/**
	 * Enum OPP.PlayerActionStatus
	 */
	enum class EPlayerActionStatus : uint8_t
	{
		PlayerActionStatus_None                   = 0,
		PlayerActionStatus_HelpUp                 = 1,
		PlayerActionStatus_Revive                 = 2,
		PlayerActionStatus_InTrap                 = 3,
		PlayerActionStatus_GettingPounced         = 4,
		PlayerActionStatus_Investigating          = 5,
		PlayerActionStatus_ItemHoldingAction      = 6,
		PlayerActionStatus_PlayerActionStatus_MAX = 7
	};

	/**
	 * Enum OPP.ERBSocialMenuEntryAction
	 */
	enum class ERBSocialMenuEntryAction : uint8_t
	{
		ShowPlatformProfileUi      = 0,
		ChangeActiveSkill          = 1,
		SendFriendInvite           = 2,
		CancelFriendInvite         = 3,
		AcceptFriendInvite         = 4,
		RefuseFriendInvite         = 5,
		RemoveFriend               = 6,
		ShowAddFriendUi            = 7,
		SendPlatformFriendInvite   = 8,
		AcceptPlatformFriendInvite = 9,
		RefusePlatformFriendInvite = 10,
		JoinParty                  = 11,
		LeaveParty                 = 12,
		InviteToParty              = 13,
		RemoveFromParty            = 14,
		RefusePartyInvite          = 15,
		PromotePartyMember         = 16,
		TogglePartyInviteWidget    = 17,
		Block                      = 18,
		UnBlock                    = 19,
		PlatformBlock              = 20,
		Report                     = 21,
		InvitePlayer               = 22,
		UpdatePartySettings        = 23,
		MAX                        = 24
	};

	/**
	 * Enum OPP.ERBSocialMenuEntryFilter
	 */
	enum class ERBSocialMenuEntryFilter : uint8_t
	{
		None         = 0,
		SamePlatform = 1,
		MAX          = 2
	};

	/**
	 * Enum OPP.EFindPartyTicketState
	 */
	enum class EFindPartyTicketState : uint8_t
	{
		Searching          = 0,
		PendingAcceptance  = 1,
		AcceptanceProvided = 2,
		Completed          = 3,
		MAX                = 4
	};

	/**
	 * Enum OPP.EInventoryUpdateEventType
	 */
	enum class EInventoryUpdateEventType : uint8_t
	{
		EquippedItemChanged      = 0,
		InventoryChanged         = 1,
		ItemPickup               = 2,
		ActiveSkillChargeChanged = 3,
		ForceTemporaryFadeIn     = 4,
		MAX                      = 5
	};

	/**
	 * Enum OPP.ELocomotionMode
	 */
	enum class ELocomotionMode : uint8_t
	{
		Normal                   = 0,
		SpecialMove              = 1,
		Cinematic                = 2,
		KnockedDown              = 3,
		KnockedDownSliding       = 4,
		Dead                     = 5,
		Falling                  = 6,
		Ghost                    = 7,
		Operating                = 8,
		SoftOperating            = 9,
		DoorLiftHold             = 10,
		Pushing                  = 11,
		Hidden                   = 12,
		FreeSlide                = 13,
		SlideOver                = 14,
		SlideUnder               = 15,
		SlideDown                = 16,
		GroundAndPound           = 17,
		ScriptedIdle             = 18,
		NPCAnimating             = 19,
		Knockout                 = 20,
		MovingLargePickup        = 21,
		WakeUp                   = 22,
		OperatingDoor            = 23,
		CoopTrapped_Victim       = 24,
		CoopTrapped_Helper       = 25,
		Coop_WaitingForBash      = 26,
		Coop_HelpUp              = 27,
		Coop_Revive              = 28,
		Coop_WaitingForTraversal = 29,
		Tutorial                 = 30,
		MAX                      = 31
	};

	/**
	 * Enum OPP.ESpecialMove
	 */
	enum class ESpecialMove : uint8_t
	{
		None                                 = 0,
		EnterCinematicModeSmooth             = 1,
		EnterCinematicModeTeleport           = 2,
		ScriptedAnimation                    = 3,
		CustomInteractable                   = 4,
		AdjustPosition                       = 5,
		Jumping                              = 6,
		Landing                              = 7,
		NPC_Landing                          = 8,
		JumpOver                             = 9,
		SlideOver                            = 10,
		JumpThroughWindow                    = 11,
		ClimbOnto                            = 12,
		ClimbDown                            = 13,
		Interaction                          = 14,
		InteractionPhysWalking               = 15,
		UsingLargeObject                     = 16,
		StartOperating                       = 17,
		FinishOperating                      = 18,
		InterruptOperating                   = 19,
		StartSoftOperating                   = 20,
		FinishSoftOperating                  = 21,
		InterruptSoftOperating               = 22,
		PickUp                               = 23,
		ContainerPickUp                      = 24,
		GiveItem                             = 25,
		ContainerOpen                        = 26,
		DropItem                             = 27,
		PlayerShove                          = 28,
		PushOtherPawn                        = 29,
		HitReaction                          = 30,
		StunnedByScreamer                    = 31,
		CoopLongJumpJumper                   = 32,
		CoopLongJumpTossed                   = 33,
		CoopLongJumpTossedToCatcher          = 34,
		CoopLongJumpTosser                   = 35,
		CoopLongJumpCatcher                  = 36,
		CoopHighJumpJumper                   = 37,
		CoopHighJumpTossed                   = 38,
		CoopHighJumpTossedToCatcher          = 39,
		CoopHighJumpTosser                   = 40,
		CoopHighJumpCatcher                  = 41,
		CoopClimbOverTossed                  = 42,
		ThrowSmallWeapon                     = 43,
		EnterReadyCoopBash                   = 44,
		BashDoor                             = 45,
		BashBreakableObject                  = 46,
		LiftGarageDoor                       = 47,
		LetGoOfGarageDoor                    = 48,
		StartPushing                         = 49,
		StopPushing                          = 50,
		StartKnockdownSliding                = 51,
		StopKnockdownSliding                 = 52,
		SelfRevive                           = 53,
		EnterCoopTrapped_Victim              = 54,
		ExitCoopTrapped_Victim               = 55,
		FailCoopTrapped_VictimKnockdown      = 56,
		FailCoopTrapped_VictimDead           = 57,
		EnterCoopTrapped_Helper              = 58,
		ExitCoopTrapped_Helper               = 59,
		Enter_CoopWaitingForTraversal        = 60,
		Exit_CoopWaitingForTraversal         = 61,
		PairedPulloutFromHidingSpotLeader    = 62,
		PairedPulloutFromHidingSpotFollower  = 63,
		LandOntoLedge                        = 64,
		ConsumeItem                          = 65,
		PushFromLedge                        = 66,
		HelpUpEntryLeader                    = 67,
		HelpUpEntryFollower                  = 68,
		HelpUpLeaveLeader                    = 69,
		HelpUpSuccessLeader                  = 70,
		HelpUpSuccessFollower                = 71,
		HelpUpFailFollower                   = 72,
		ReviveEntryLeader                    = 73,
		ReviveEntryFollower                  = 74,
		ReviveLeaveLeader                    = 75,
		ReviveSuccessLeader                  = 76,
		ReviveSuccessFollower                = 77,
		Wait                                 = 78,
		TraversalSlide                       = 79,
		PickupLargeObject                    = 80,
		PutDownLargeObject                   = 81,
		EnterWakeUpSequence                  = 82,
		ExitWakeUpSequence                   = 83,
		DoorInteraction                      = 84,
		ActivateDynamicObstacle              = 85,
		StartOperatingDoor                   = 86,
		StopOperatingDoor                    = 87,
		InterruptedOperatingDoor             = 88,
		NearDeathToKnockdown                 = 89,
		KnockDownSelfHelpSAS                 = 90,
		Emote                                = 91,
		EnterHidespot                        = 92,
		ExitHidespot                         = 93,
		KnockdownInHidespot                  = 94,
		Align                                = 95,
		SignalTackle                         = 96,
		TackleFail                           = 97,
		EnterGroundAndPoundAttacker          = 98,
		EnterGroundAndPoundVictim            = 99,
		GroundAndPoundFinishAttacker         = 100,
		GroundAndPoundFinishVictim           = 101,
		GroundAndPoundGiveUpAttacker         = 102,
		GroundAndPoundGiveUpVictim           = 103,
		GroundAndPoundEscapePlayer           = 104,
		GroundAndPoundEscapePouncer          = 105,
		GroundAndPoundInterruptPouncer       = 106,
		GroundAndPoundInterruptPinnedPlayer  = 107,
		PusherAttackAttacker                 = 108,
		PusherAttackVictim                   = 109,
		PusherAttackGroup                    = 110,
		PairedAttackAttacker                 = 111,
		PairedAttackVictim                   = 112,
		StandardFatalityAttacker             = 113,
		StandardFatalityVictim               = 114,
		KnockdownToDeath                     = 115,
		GrabAndThrowAttacker                 = 116,
		GrabAndThrowVictim                   = 117,
		NPC_AnimatedStart                    = 118,
		NPC_AnimatedStop                     = 119,
		NPC_SingleShotAnim                   = 120,
		NPC_FixedPoseAnim                    = 121,
		NPC_Startled                         = 122,
		NPC_QuickAttack                      = 123,
		NPC_Attack                           = 124,
		NPC_Investigate                      = 125,
		NPC_InvestigationBreaker             = 126,
		NPC_GiveUpInvestigation              = 127,
		NPC_GiveUpAlerted                    = 128,
		NPC_GiveUpSuspicious                 = 129,
		NPC_PlayerTaunt                      = 130,
		NPC_InvestigateHidespot              = 131,
		NPC_UnhingeDoor                      = 132,
		NPC_DoorInvestigation                = 133,
		NPC_BashDynamicObstacle              = 134,
		NPC_EnterAmbientIdle                 = 135,
		NPC_LeaveAmbientIdle                 = 136,
		NPC_PeekFromHidespot                 = 137,
		NPC_Sabotage                         = 138,
		NPC_BerserkerIdleBreaker             = 139,
		NPC_Spectre_Intro                    = 140,
		NPC_Spectre_Outro                    = 141,
		NPC_JumpOver                         = 142,
		NPC_ClimbOnto                        = 143,
		NPC_ClimbDownLedge                   = 144,
		NPC_CrouchUnder                      = 145,
		NPC_GhostThroughObstacle             = 146,
		NPC_DoorPassthrough                  = 147,
		NPC_TrapReaction                     = 148,
		NPC_TurnOnSpot                       = 149,
		NPC_HitReaction                      = 150,
		NPC_DelayedFlinchReaction            = 151,
		NPC_CheckSurroundings                = 152,
		NPC_Knockout                         = 153,
		NPC_GetUpFromKnockout                = 154,
		NPC_GoryDeath                        = 155,
		NPC_WaypointAnim                     = 156,
		NPC_ShotgunAttack                    = 157,
		NPC_ShotgunReload                    = 158,
		NPC_ShakePushable                    = 159,
		NPC_HaarpReaction                    = 160,
		NPC_BreakDistrator                   = 161,
		NPC_ReactToGrenade                   = 162,
		NPC_ReactToGrenadeStun               = 163,
		NPC_GrenadeStun                      = 164,
		NPC_RecoverFromGrenadeStun           = 165,
		NPC_ReactToBlindPaint                = 166,
		NPC_ReactToHealSlowdown              = 167,
		NPC_ChaseBreaker                     = 168,
		NPC_SleeperDisturbed                 = 169,
		NPC_SleeperWakeUp                    = 170,
		NPC_StalkerTargetBulbExplodeReaction = 171,
		Pitcher_ThrowMolotov                 = 172,
		Pitcher_EquipMolotov                 = 173,
		Pitcher_UnequipMolotov               = 174,
		MAX                                  = 175
	};

	/**
	 * Enum OPP.ESpecialMoveNotifyType
	 */
	enum class ESpecialMoveNotifyType : uint8_t
	{
		DoAction              = 0,
		DoSecondaryAction     = 1,
		SpecialMoveCompleted  = 2,
		DisablePawnCollisions = 3,
		AllowMovement         = 4,
		EnableGravity         = 5,
		MAX                   = 6
	};

	/**
	 * Enum OPP.EFootStepModifierType
	 */
	enum class EFootStepModifierType : uint8_t
	{
		None    = 0,
		Rubbish = 1,
		Bloody  = 2,
		Wet     = 3,
		MAX     = 4
	};

	/**
	 * Enum OPP.EProceduralAnimInterpType
	 */
	enum class EProceduralAnimInterpType : uint8_t
	{
		Smooth   = 0,
		Linear   = 1,
		Decel    = 2,
		Accel    = 3,
		ExpDecel = 4,
		ExpAccel = 5,
		EaseOut  = 6,
		MAX      = 7
	};

	/**
	 * Enum OPP.EGhostFinishReason
	 */
	enum class EGhostFinishReason : uint8_t
	{
		NoneGiven   = 0,
		Leaving     = 1,
		Interrupted = 2,
		Custom      = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.EBashDoorType
	 */
	enum class EBashDoorType : uint8_t
	{
		KickTry      = 0,
		KickOpen     = 1,
		ShoulderTry  = 2,
		ShoulderOpen = 3,
		Unhinge      = 4,
		CoopBash     = 5,
		MAX          = 6
	};

	/**
	 * Enum OPP.EDoorInteractionType
	 */
	enum class EDoorInteractionType : uint8_t
	{
		None                     = 0,
		Open                     = 1,
		OpenFail                 = 2,
		CloseInsideLeft          = 3,
		CloseInsideRight         = 4,
		CloseOutsideLeft         = 5,
		CloseOutsideRight        = 6,
		CloseInsideLeftQuick     = 7,
		CloseInsideRightQuick    = 8,
		CloseOutsideLeftQuick    = 9,
		CloseOutsideRightQuick   = 10,
		CloseInsideLeftRunning   = 11,
		CloseInsideRightRunning  = 12,
		CloseOutsideLeftRunning  = 13,
		CloseOutsideRightRunning = 14,
		SlowOpenStart            = 15,
		MAX                      = 16
	};

	/**
	 * Enum OPP.EBasicDirection
	 */
	enum class EBasicDirection : uint8_t
	{
		None     = 0,
		Forward  = 1,
		Backward = 2,
		Left     = 3,
		Right    = 4,
		MAX      = 5
	};

	/**
	 * Enum OPP.EPawnRepulsionType
	 */
	enum class EPawnRepulsionType : uint8_t
	{
		None                   = 0,
		AllDirection           = 1,
		AllDirectionExceptBack = 2,
		ForwardOnly            = 3,
		SideOnly               = 4,
		MAX                    = 5
	};

	/**
	 * Enum OPP.EItemType
	 */
	enum class EItemType : uint8_t
	{
		Nothing               = 0,
		Fists                 = 1,
		HealthGain            = 2,
		HealthBoost           = 3,
		TempHealthGain        = 4,
		ReviveSyringe         = 5,
		RespawnConsumable     = 6,
		StaminaRegen          = 7,
		MaxStaminaBoost       = 8,
		SmallBattery          = 9,
		Battery               = 10,
		SuperBattery          = 11,
		LockPick              = 12,
		MasterKey             = 13,
		SkillCharge           = 14,
		Bottle                = 15,
		PsychosisAntidote     = 16,
		MurkoffPoint          = 17,
		MurkoffDollar         = 18,
		Brick                 = 19,
		ProximityDetector     = 20,
		CollectibleDocument   = 21,
		Quest                 = 22,
		ActiveSkillController = 23,
		ActiveSkillThrowable  = 24,
		ActiveSkillDeployable = 25,
		ObjectiveThrowable    = 26,
		GoreThrowable         = 27,
		Axe                   = 28,
		BaseballBat           = 29,
		Knife                 = 30,
		Machete               = 31,
		Pipe                  = 32,
		CattleProd            = 33,
		DoubleClaw            = 34,
		SledgeHammer          = 35,
		SpikedMace            = 36,
		WoodPlank             = 37,
		Shotgun               = 38,
		MolotovCocktail       = 39,
		MAX                   = 40
	};

	/**
	 * Enum OPP.EItemCategory
	 */
	enum class EItemCategory : uint8_t
	{
		Fist        = 0,
		Throwable   = 1,
		Health      = 2,
		Utility     = 3,
		ActiveSkill = 4,
		Currency    = 5,
		Collectible = 6,
		QuestItem   = 7,
		None        = 8,
		MAX         = 9
	};

	/**
	 * Enum OPP.EDamageVolumeType
	 */
	enum class EDamageVolumeType : uint8_t
	{
		RightHand = 0,
		LeftHand  = 1,
		Head      = 2,
		LeftFoot  = 3,
		RightFoot = 4,
		Other     = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EKnockbackValue
	 */
	enum class EKnockbackValue : uint8_t
	{
		None     = 0,
		VeryLow  = 1,
		Low      = 2,
		Medium   = 3,
		High     = 4,
		VeryHigh = 5,
		MAX      = 6
	};

	/**
	 * Enum OPP.EDamageValue
	 */
	enum class EDamageValue : uint8_t
	{
		None     = 0,
		VeryLow  = 1,
		Low      = 2,
		Medium   = 3,
		High     = 4,
		VeryHigh = 5,
		MAX      = 6
	};

	/**
	 * Enum OPP.EConfigValueType
	 */
	enum class EConfigValueType : uint8_t
	{
		None              = 0,
		Int               = 1,
		Float             = 2,
		Bool              = 3,
		IntByDifficulty   = 4,
		FloatByDifficulty = 5,
		BoolByDifficulty  = 6,
		MAX               = 7
	};

	/**
	 * Enum OPP.EPlayerHitReactionType
	 */
	enum class EPlayerHitReactionType : uint8_t
	{
		None        = 0,
		Flinch      = 1,
		Light       = 2,
		Medium      = 3,
		Heavy       = 4,
		KnockedDown = 5,
		Dead        = 6,
		MAX         = 7
	};

	/**
	 * Enum OPP.EMessagePriority
	 */
	enum class EMessagePriority : uint8_t
	{
		NoPriority                = 0,
		Generic_SuperLowPriority  = 1,
		Gameplay_VeryLowPriority  = 2,
		Gameplay_LowPriority      = 3,
		Tutorial_LowPriority      = 4,
		Gameplay_MediumPriority   = 5,
		Tutorial_MediumPriority   = 6,
		Gameplay_HighPriority     = 7,
		Tutorial_HighPriority     = 8,
		Gameplay_VeryHighPriority = 9,
		Generic_SuperHighPriority = 10,
		MAX                       = 11
	};

	/**
	 * Enum OPP.ENightVisionAnimNotifyType
	 */
	enum class ENightVisionAnimNotifyType : uint8_t
	{
		ShowMesh              = 0,
		HUD                   = 1,
		EnterFX               = 2,
		ExitFX                = 3,
		TurnOn                = 4,
		TurnOff               = 5,
		RestrictNVOn          = 6,
		RestrictNVOff         = 7,
		RemoveAllRestrictions = 8,
		MAX                   = 9
	};

	/**
	 * Enum OPP.EDamageResultType
	 */
	enum class EDamageResultType : uint8_t
	{
		None        = 0,
		Normal      = 1,
		KnockedDown = 2,
		Dead        = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.ELargeObjectPickupSubtype
	 */
	enum class ELargeObjectPickupSubtype : uint8_t
	{
		AsIs           = 0,
		ForcedCrouched = 1,
		ForcedStanding = 2,
		MAX            = 3
	};

	/**
	 * Enum OPP.EAttackType
	 */
	enum class EAttackType : uint8_t
	{
		None           = 0,
		Quick          = 1,
		QuickLow       = 2,
		PairedAnim     = 3,
		Gun            = 4,
		BlockingAttack = 5,
		Push           = 6,
		Opener         = 7,
		Heavy          = 8,
		Punish         = 9,
		Grab           = 10,
		SpecificAnim   = 11,
		Lunge          = 12,
		FixedLocation  = 13,
		ImposterCharge = 14,
		MAX            = 15
	};

	/**
	 * Enum OPP.EPlayerPingType
	 */
	enum class EPlayerPingType : uint8_t
	{
		None            = 0,
		NPC             = 1,
		PointOfInterest = 2,
		MAX             = 3
	};

	/**
	 * Enum OPP.ECoopMoveOfferState
	 */
	enum class ECoopMoveOfferState : uint8_t
	{
		None            = 0,
		HailingGeneric  = 1,
		HailingSpecific = 2,
		Nearby          = 3,
		MAX             = 4
	};

	/**
	 * Enum OPP.ECoopMoveType
	 */
	enum class ECoopMoveType : uint8_t
	{
		None              = 0,
		HighJumpCatch     = 1,
		HighJumpToss      = 2,
		LongJump          = 3,
		CoopClimbOverToss = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.EClimbOntoAnimType
	 */
	enum class EClimbOntoAnimType : uint8_t
	{
		None    = 0,
		Running = 1,
		Walking = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.EJumpOverAnimType
	 */
	enum class EJumpOverAnimType : uint8_t
	{
		None                       = 0,
		Running                    = 1,
		Walking                    = 2,
		NoContact                  = 3,
		ClimbOver                  = 4,
		ClimberJumpOver            = 5,
		BigGruntJumpOverLowCeiling = 6,
		MAX                        = 7
	};

	/**
	 * Enum OPP.HallucinationFadeOutType
	 */
	enum class EHallucinationFadeOutType : uint8_t
	{
		HallucinationFadeOutType_Immediate                    = 0,
		HallucinationFadeOutType_Normal                       = 1,
		HallucinationFadeOutType_Fast                         = 2,
		HallucinationFadeOutType_HallucinationFadeOutType_MAX = 3
	};

	/**
	 * Enum OPP.ETalkWheelAction
	 */
	enum class ETalkWheelAction : uint8_t
	{
		None        = 0,
		Help        = 1,
		Acknowledge = 2,
		Regroup     = 3,
		Wait        = 4,
		Danger      = 5,
		Thanks      = 6,
		OnMyWay     = 7,
		Hello       = 8,
		Ping        = 9,
		MAX         = 10
	};

	/**
	 * Enum OPP.EUINoiseMeterStrength
	 */
	enum class EUINoiseMeterStrength : uint8_t
	{
		None   = 0,
		Low    = 1,
		Medium = 2,
		High   = 3,
		MAX    = 4
	};

	/**
	 * Enum OPP.EPawnCustomizationRequestType
	 */
	enum class EPawnCustomizationRequestType : uint8_t
	{
		None        = 0,
		PlayerCusto = 1,
		NPCCusto    = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.EPlayerComponentDetectionState
	 */
	enum class EPlayerComponentDetectionState : uint8_t
	{
		Idle       = 0,
		Suspicious = 1,
		Alerted    = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.EPlayerSoundDetectionState
	 */
	enum class EPlayerSoundDetectionState : uint8_t
	{
		Idle       = 0,
		Suspicious = 1,
		Alerted    = 2,
		Resetting  = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.ERegroupObjectiveState
	 */
	enum class ERegroupObjectiveState : uint8_t
	{
		Invalid           = 0,
		WaitingForPlayers = 1,
		WaitingForNPCs    = 2,
		WaitingForBP      = 3,
		Ready             = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.ETimingInputResultType
	 */
	enum class ETimingInputResultType : uint8_t
	{
		Failure        = 0,
		PartialSuccess = 1,
		Success        = 2,
		MAX            = 3
	};

	/**
	 * Enum OPP.EIKFootRootLocalAxis
	 */
	enum class EIKFootRootLocalAxis : uint8_t
	{
		NONE = 0,
		X    = 1,
		Y    = 2,
		Z    = 3,
		MAX  = 4
	};

	/**
	 * Enum OPP.EAuthErrorCodes
	 */
	enum class EAuthErrorCodes : uint8_t
	{
		MissingBaseServiceUrl            = 0,
		InvalidSessionResponseFormat     = 1,
		InvalidProfileListResponseFormat = 2,
		InvalidProfileResponseFormat     = 3,
		UnsupportedPlatform              = 4,
		MissingCredentials               = 5,
		AuthTokenRequestFailed           = 6,
		AuthTokenRequestTimeout          = 7,
		FailedToRequestSteamAuthTicket   = 8,
		InvalidAuthCode                  = 9,
		MissingRole                      = 10,
		ProfileNotFound                  = 11,
		ProfileIdMismatch                = 12,
		ProfileVersionCheckFailed        = 13,
		AuthenticationFailed             = 14,
		InvalidRefreshToken              = 15,
		InvalidClientApiKey              = 16,
		InvalidServerApiKey              = 17,
		SessionGroupNotFound             = 18,
		PolicyDocumentNotFound           = 19,
		MAX                              = 20
	};

	/**
	 * Enum OPP.EProfilePrivilegeRevocationReason
	 */
	enum class EProfilePrivilegeRevocationReason : uint8_t
	{
		Unknown                 = 0,
		TermsOfServiceViolation = 1,
		MAX                     = 2
	};

	/**
	 * Enum OPP.EProfilePrivilege
	 */
	enum class EProfilePrivilege : uint8_t
	{
		Invalid   = 0,
		Play      = 1,
		VoiceChat = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.ECoreAnalyticsErrorCodes
	 */
	enum class ECoreAnalyticsErrorCodes : uint8_t
	{
		MissingBaseServiceUrl = 0,
		MAX                   = 1
	};

	/**
	 * Enum OPP.EConfigurationErrorCodes
	 */
	enum class EConfigurationErrorCodes : uint8_t
	{
		InvalidConfigurationResponseFormat = 0,
		MissingCredentials                 = 1,
		InvalidScope                       = 2,
		InvalidEnvironment                 = 3,
		ConfigurationNotFound              = 4,
		InvalidApplication                 = 5,
		MAX                                = 6
	};

	/**
	 * Enum OPP.ECoreMatchmakingErrorCodes
	 */
	enum class ECoreMatchmakingErrorCodes : uint8_t
	{
		MissingBaseServiceUrl                = 0,
		InvalidTicketFormat                  = 1,
		MatchmakingConfigurationNotFound     = 2,
		TicketNotFound                       = 3,
		TicketCannotBeCanceled               = 4,
		GameSessionNotFound                  = 5,
		GameSessionFull                      = 6,
		InvalidGameSessionStatus             = 7,
		GameSessionPlacementCannotBeCanceled = 8,
		FailedCannotPlayOnlinePrivilegeCheck = 9,
		MAX                                  = 10
	};

	/**
	 * Enum OPP.ECorePartyErrorCodes
	 */
	enum class ECorePartyErrorCodes : uint8_t
	{
		MissingBaseServiceUrl      = 0,
		UnexpectedResponseFormat   = 1,
		TooManyParties             = 2,
		PartyNotFound              = 3,
		UnauthorizedPartyOperation = 4,
		InvalidPartyOperation      = 5,
		CannotPromoteNonMember     = 6,
		CannotPromoteSelf          = 7,
		InviteRequired             = 8,
		InviteNotValid             = 9,
		NotInParty                 = 10,
		PartyFull                  = 11,
		InvalidPartyData           = 12,
		PartyNotJoinable           = 13,
		INVALID                    = 14,
		MAX                        = 15
	};

	/**
	 * Enum OPP.EPartyPrivacy
	 */
	enum class EPartyPrivacy : uint8_t
	{
		Public    = 0,
		Friends   = 1,
		Private   = 2,
		AllowList = 3,
		Unknown   = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.ECorePresenceErrorCodes
	 */
	enum class ECorePresenceErrorCodes : uint8_t
	{
		MissingBaseServiceUrl = 0,
		MAX                   = 1
	};

	/**
	 * Enum OPP.ECoreStatsErrorCodes
	 */
	enum class ECoreStatsErrorCodes : uint8_t
	{
		MissingBaseServiceUrl         = 0,
		StatConfigNotFound            = 1,
		StatContextNotFound           = 2,
		StatConfigVersionCheckFailed  = 3,
		StatContextVersionCheckFailed = 4,
		StatsUpdateTooLarge           = 5,
		MAX                           = 6
	};

	/**
	 * Enum OPP.EEntityErrorCodes
	 */
	enum class EEntityErrorCodes : uint8_t
	{
		MissingBaseServiceUrl            = 0,
		InvalidEntityResponseFormat      = 1,
		InvalidEntityListResponseFormat  = 2,
		EntityCategoryNotFound           = 3,
		EntityNotFound                   = 4,
		EntityNotVisible                 = 5,
		InvalidApplication               = 6,
		InvalidEntityData                = 7,
		InvalidEntityId                  = 8,
		UnauthorizedAdminOperation       = 9,
		UnauthorizedApplication          = 10,
		UnauthorizedEntityUpdate         = 11,
		EntityCategoryVersionCheckFailed = 12,
		EntityVersionCheckFailed         = 13,
		MAX                              = 14
	};

	/**
	 * Enum OPP.EGameServerErrorCodes
	 */
	enum class EGameServerErrorCodes : uint8_t
	{
		Disabled = 0,
		MAX      = 1
	};

	/**
	 * Enum OPP.EInventoryErrorCodes
	 */
	enum class EInventoryErrorCodes : uint8_t
	{
		MissingBaseServiceUrl              = 0,
		InventoryConditionFailed           = 1,
		OfferNotFound                      = 2,
		ItemNotFound                       = 3,
		DefaultInventoryNotFound           = 4,
		ItemVersionCheckFailed             = 5,
		OfferVersionCheckFailed            = 6,
		DefaultInventoryVersionCheckFailed = 7,
		ProductNotFound                    = 8,
		ProductSkuNotFound                 = 9,
		ProductLocalizationDataNotFound    = 10,
		ProfilePlatformNotSupported        = 11,
		OrderNotFound                      = 12,
		InvalidOrderStatus                 = 13,
		MAX                                = 14
	};

	/**
	 * Enum OPP.EMatchmakingErrorCodes
	 */
	enum class EMatchmakingErrorCodes : uint8_t
	{
		FailedToPingDataCenters             = 0,
		NoMatchmakingConfigurationAvailable = 1,
		NoGameSessionQueueAvailable         = 2,
		FindMatchCanceled                   = 3,
		FindMatchFailed                     = 4,
		FindMatchTimedOut                   = 5,
		WaitForTicketTimedOut               = 6,
		GameSessionPlacementFailed          = 7,
		UnexpectedPlayerSessionState        = 8,
		WaitForPlacementTimedOut            = 9,
		NoAvailableRegion                   = 10,
		NoValidRegion                       = 11,
		NoSharedValidRegion                 = 12,
		MatchRefused                        = 13,
		MAX                                 = 14
	};

	/**
	 * Enum OPP.ENewsItemCTAMenuType
	 */
	enum class ENewsItemCTAMenuType : uint8_t
	{
		None          = 0,
		CurrencyPacks = 1,
		MAX           = 2
	};

	/**
	 * Enum OPP.ENewsItemCTAType
	 */
	enum class ENewsItemCTAType : uint8_t
	{
		None     = 0,
		External = 1,
		Menu     = 2,
		Product  = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.ENewsItemLocation
	 */
	enum class ENewsItemLocation : uint8_t
	{
		Unknown   = 0,
		MainMenu1 = 1,
		MainMenu2 = 2,
		MainMenu3 = 3,
		MainMenu4 = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.EOnlineCoreErrorCode
	 */
	enum class EOnlineCoreErrorCode : uint8_t
	{
		Canceled                           = 0,
		Unexpected                         = 1,
		OnlineSubsystemError               = 2,
		DependenciesNotSatisfied           = 3,
		NotConnected                       = 4,
		HttpRequestFailed                  = 5,
		HttpRequestUnexpectedStatusCode    = 6,
		HttpRequestInvalidResponseBody     = 7,
		HttpRequestUnexpectedError         = 8,
		HttpRequestUnmappedErrorCode       = 9,
		HttpRequestForbidden               = 10,
		Shutdown                           = 11,
		FeatureDisabled                    = 12,
		Throttled                          = 13,
		InvalidAuthenticationToken         = 14,
		AuthenticationTokenExpired         = 15,
		UnauthorizedSource                 = 16,
		UnauthorizedApplication            = 17,
		UnauthorizedProfile                = 18,
		NotAuthorized                      = 19,
		MissingPrivilege                   = 20,
		ParameterMissing                   = 21,
		InvalidParameterValue              = 22,
		InvalidParameterType               = 23,
		UnexpectedParameterValidationError = 24,
		MAX                                = 25
	};

	/**
	 * Enum OPP.EOnlineCoreErrorFacility
	 */
	enum class EOnlineCoreErrorFacility : uint8_t
	{
		Core          = 0,
		Platform      = 1,
		Configuration = 2,
		Auth          = 3,
		Entity        = 4,
		Messaging     = 5,
		Matchmaking   = 6,
		GameServer    = 7,
		Analytics     = 8,
		Inventory     = 9,
		RTA           = 10,
		Relationship  = 11,
		Party         = 12,
		Presence      = 13,
		CommunitySift = 14,
		Stats         = 15,
		MAX           = 16
	};

	/**
	 * Enum OPP.EOnlineErrorFacility
	 */
	enum class EOnlineErrorFacility : uint8_t
	{
		Configuration     = 0,
		Matchmaking       = 1,
		PlayerProfile     = 2,
		PlayerProgression = 3,
		Stats             = 4,
		Store             = 5,
		Party             = 6,
		PlayerStats       = 7,
		Achievements      = 8,
		Ratings           = 9,
		MAX               = 10
	};

	/**
	 * Enum OPP.EPartyErrorCodes
	 */
	enum class EPartyErrorCodes : uint8_t
	{
		FailedToJoinParty_TimedOutWaitingForInvite  = 0,
		FailedToJoinParty_CrossplayRequired         = 1,
		FailedToJoinParty_CrossplayNotAllowed       = 2,
		FailedToJoinParty_PartyNotFound             = 3,
		FailedToJoinParty_InviteRequired            = 4,
		FailedToJoinParty_InviteNotValid            = 5,
		FailedToJoinParty_PartyFull                 = 6,
		FailedToJoinParty_PartyNotJoinable          = 7,
		FailedToJoinParty_FirstPartySessionNotFound = 8,
		FailedToJoinParty_Unknown                   = 9,
		FailedToCreateFirstPartySession             = 10,
		FailedToUpdateFirstPartySession             = 11,
		FailedToDestroyFirstPartySession            = 12,
		FailedToJoinFirstPartySession               = 13,
		FailedToSendFirstPartySessionInvite         = 14,
		MAX                                         = 15
	};

	/**
	 * Enum OPP.EPartyGameSessionState
	 */
	enum class EPartyGameSessionState : uint8_t
	{
		FindingLobby = 0,
		InLobby      = 1,
		InMatch      = 2,
		Unknown      = 3,
		MAX          = 4
	};

	/**
	 * Enum OPP.EPlatformErrorCodes
	 */
	enum class EPlatformErrorCodes : uint8_t
	{
		NoUniqueNetId         = 0,
		PlatformLoginFailed   = 1,
		PlatformLoginUiFailed = 2,
		UserSignedOut         = 3,
		UserLogout            = 4,
		LoginDisabled         = 5,
		Unknown               = 6,
		MAX                   = 7
	};

	/**
	 * Enum OPP.EPlayerProgressionErrorCodes
	 */
	enum class EPlayerProgressionErrorCodes : uint8_t
	{
		NoOfferFoundForPurchase = 0,
		NoOfferFoundForLevelUp  = 1,
		MAX                     = 2
	};

	/**
	 * Enum OPP.EPlayerReportReason
	 */
	enum class EPlayerReportReason : uint8_t
	{
		AbusiveVoiceChat = 0,
		Griefing         = 1,
		NonParticipation = 2,
		Cheating         = 3,
		Spam             = 4,
		Other            = 5,
		MAX              = 6
	};

	/**
	 * Enum OPP.EPresenceState
	 */
	enum class EPresenceState : uint8_t
	{
		InMainMenu       = 0,
		InTutorial       = 1,
		InLobby          = 2,
		PreparingTrial   = 3,
		InTrial          = 4,
		ReturningToLobby = 5,
		FindingParty     = 6,
		Unknown          = 7,
		MAX              = 8
	};

	/**
	 * Enum OPP.EIntelType
	 */
	enum class EIntelType : uint8_t
	{
		None      = 0,
		Objective = 1,
		Ressource = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EAmbientAwarenessPhase
	 */
	enum class EAmbientAwarenessPhase : uint8_t
	{
		InStation         = 0,
		WaitingForStartle = 1,
		WaitingForIdle    = 2,
		WaitingForStation = 3,
		MAX               = 4
	};

	/**
	 * Enum OPP.EAIBoolCommandResult
	 */
	enum class EAIBoolCommandResult : uint8_t
	{
		Passed = 0,
		Failed = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.EAICommandResult
	 */
	enum class EAICommandResult : uint8_t
	{
		Started     = 0,
		Success     = 1,
		Failed      = 2,
		Interrupted = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.EPressureConsumptionType
	 */
	enum class EPressureConsumptionType : uint8_t
	{
		SpawnedBot         = 0,
		ObjectiveCompleted = 1,
		MAX                = 2
	};

	/**
	 * Enum OPP.EPressureEventType
	 */
	enum class EPressureEventType : uint8_t
	{
		Adversity          = 0,
		PressureBeat       = 1,
		ObjectiveCompleted = 2,
		MAX                = 3
	};

	/**
	 * Enum OPP.EBotCollisionType
	 */
	enum class EBotCollisionType : uint8_t
	{
		None          = 0,
		HeadToHead    = 1,
		SideCollision = 2,
		TakeOver      = 3,
		Merge         = 4,
		MAX           = 5
	};

	/**
	 * Enum OPP.EAssistType
	 */
	enum class EAssistType : uint8_t
	{
		LocationAndVelocityPrediction        = 0,
		OnlyLocation                         = 1,
		OnlyVelocityPrediction               = 2,
		AverageLocationAndVelocityPrediction = 3,
		LocationToVelocityPredictionRange    = 4,
		MAX                                  = 5
	};

	/**
	 * Enum OPP.EPlayerVisibilityState
	 */
	enum class EPlayerVisibilityState : uint8_t
	{
		None    = 0,
		Partial = 1,
		Full    = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.EPlayerAwarenessState
	 */
	enum class EPlayerAwarenessState : uint8_t
	{
		Unaware       = 0,
		ForcedUnaware = 1,
		Aware         = 2,
		ForcedAware   = 3,
		MAX           = 4
	};

	/**
	 * Enum OPP.EPlayerVisibilityType
	 */
	enum class EPlayerVisibilityType : uint8_t
	{
		NotVisible        = 0,
		CloseFull         = 1,
		ClosePartial      = 2,
		FullVisionCone    = 3,
		PartialVisionCone = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.ERBAISpawnerVersion
	 */
	enum class ERBAISpawnerVersion : uint8_t
	{
		Initial           = 0,
		WithSpawnType     = 1,
		SoftMonsterCloset = 2,
		SoftLeashPtr      = 3,
		Current           = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.EAISpawnControlType
	 */
	enum class EAISpawnControlType : uint8_t
	{
		AIDirector    = 0,
		Always        = 1,
		RandomManager = 2,
		Manual        = 3,
		Objective     = 4,
		MAX           = 5
	};

	/**
	 * Enum OPP.EAISpawnerState
	 */
	enum class EAISpawnerState : uint8_t
	{
		Inactive = 0,
		Spawned  = 1,
		Limbo    = 2,
		MAX      = 3
	};

	/**
	 * Enum OPP.EBackgroundCharacterLocomotionState
	 */
	enum class EBackgroundCharacterLocomotionState : uint8_t
	{
		Idle     = 0,
		Starting = 1,
		Moving   = 2,
		Stopping = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.EAnimLogCategory
	 */
	enum class EAnimLogCategory : uint8_t
	{
		AnimatedStart    = 0,
		AnimatedStop     = 1,
		Startled         = 2,
		StartledReaction = 3,
		Attack           = 4,
		ActiveSkills     = 5,
		Investigate      = 6,
		SpecialMove      = 7,
		Other            = 8,
		MAX              = 9
	};

	/**
	 * Enum OPP.EInterruptibilityState
	 */
	enum class EInterruptibilityState : uint8_t
	{
		EnableInterruption  = 0,
		DisableInterruption = 1,
		Custom              = 2,
		MAX                 = 3
	};

	/**
	 * Enum OPP.EPlayerCameraTargetBehavior
	 */
	enum class EPlayerCameraTargetBehavior : uint8_t
	{
		Animation = 0,
		Manual    = 1,
		Gameplay  = 2,
		LookAt    = 3,
		None      = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.EPlayerDamageSetting
	 */
	enum class EPlayerDamageSetting : uint8_t
	{
		None                  = 0,
		PulledOutOfHidingSpot = 1,
		ThrownPlayer          = 2,
		InitialCoopTrap       = 3,
		MAX                   = 4
	};

	/**
	 * Enum OPP.ESpecialMoveNotifyTriggerType
	 */
	enum class ESpecialMoveNotifyTriggerType : uint8_t
	{
		All        = 0,
		PlayerOnly = 1,
		NPCOnly    = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.ENPCHidespotPeekDistance
	 */
	enum class ENPCHidespotPeekDistance : uint8_t
	{
		Close  = 0,
		Medium = 1,
		Far    = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.EItemConsumeAnimType
	 */
	enum class EItemConsumeAnimType : uint8_t
	{
		Standing = 0,
		Crouched = 1,
		Hidespot = 2,
		MAX      = 3
	};

	/**
	 * Enum OPP.EArmWreslingTableState
	 */
	enum class EArmWreslingTableState : uint8_t
	{
		WaitingForPlayers = 0,
		MatchIntro        = 1,
		MatchInProgress   = 2,
		MatchOutro        = 3,
		MAX               = 4
	};

	/**
	 * Enum OPP.EMusicEventType
	 */
	enum class EMusicEventType : uint8_t
	{
		MusicCommand         = 0,
		PostPlayEvent        = 1,
		PostStopEvent        = 2,
		SingleShotTrackEnded = 3,
		MAX                  = 4
	};

	/**
	 * Enum OPP.EAudioEventSource
	 */
	enum class EAudioEventSource : uint8_t
	{
		None               = 0,
		Generic            = 1,
		OldBlueprintNotify = 2,
		AnimNotify         = 3,
		VONotify           = 4,
		MAX                = 5
	};

	/**
	 * Enum OPP.EEmitterUpdateDetail
	 */
	enum class EEmitterUpdateDetail : uint8_t
	{
		Irrelevant = 0,
		VeryLow    = 1,
		Low        = 2,
		Normal     = 3,
		High       = 4,
		MAX        = 5
	};

	/**
	 * Enum OPP.EGameModeTestAction
	 */
	enum class EGameModeTestAction : uint8_t
	{
		None                = 0,
		SitInChair          = 1,
		StageReady          = 2,
		TeleportToSASExit   = 3,
		CheatCompleteStage  = 4,
		TeleportToStageExit = 5,
		CompleteStage       = 6,
		ReturnToLobby       = 7,
		MAX                 = 8
	};

	/**
	 * Enum OPP.EUIAvailableTaskState
	 */
	enum class EUIAvailableTaskState : uint8_t
	{
		Started   = 0,
		Completed = 1,
		MAX       = 2
	};

	/**
	 * Enum OPP.EBackgroundDoorState
	 */
	enum class EBackgroundDoorState : uint8_t
	{
		Closed = 0,
		Open   = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.EMinorObjectiveEffetOnMajor
	 */
	enum class EMinorObjectiveEffetOnMajor : uint8_t
	{
		None                                    = 0,
		CloseMajorPrimaryActorRoom              = 1,
		DelayMajorReadyFeedbackOnMinorCompleted = 2,
		DelayMajorEndingOnMinorCompleted        = 3,
		MAX                                     = 4
	};

	/**
	 * Enum OPP.EObjectiveCoordinatorPopulatePriority
	 */
	enum class EObjectiveCoordinatorPopulatePriority : uint8_t
	{
		Rails                = 0,
		PreDoorRandomization = 1,
		Highest              = 2,
		VeryHigh             = 3,
		High                 = 4,
		Normal               = 5,
		Low                  = 6,
		VeryLow              = 7,
		Lowest               = 8,
		MAX                  = 9
	};

	/**
	 * Enum OPP.EBlockableState
	 */
	enum class EBlockableState : uint8_t
	{
		Unknown            = 0,
		Opened             = 1,
		PermanentlyBlocked = 2,
		TemporaryBlocked   = 3,
		MAX                = 4
	};

	/**
	 * Enum OPP.EBlockableLinkType
	 */
	enum class EBlockableLinkType : uint8_t
	{
		MaximumBlockedCount   = 0,
		MinimunUnblockedCount = 1,
		AlsoBlock             = 2,
		MAX                   = 3
	};

	/**
	 * Enum OPP.EPlayerCollisionType
	 */
	enum class EPlayerCollisionType : uint8_t
	{
		Normal      = 0,
		FallingOnly = 1,
		MAX         = 2
	};

	/**
	 * Enum OPP.EBoolCommandResult
	 */
	enum class EBoolCommandResult : uint8_t
	{
		Passed = 0,
		Failed = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.ERandomSwitch10
	 */
	enum class ERandomSwitch10 : uint8_t
	{
		Option1  = 0,
		Option2  = 1,
		Option3  = 2,
		Option4  = 3,
		Option5  = 4,
		Option6  = 5,
		Option7  = 6,
		Option8  = 7,
		Option9  = 8,
		Option10 = 9,
		MAX      = 10
	};

	/**
	 * Enum OPP.ERandomSwitch5
	 */
	enum class ERandomSwitch5 : uint8_t
	{
		Option1 = 0,
		Option2 = 1,
		Option3 = 2,
		Option4 = 3,
		Option5 = 4,
		MAX     = 5
	};

	/**
	 * Enum OPP.ERandomSwitch4
	 */
	enum class ERandomSwitch4 : uint8_t
	{
		Option1 = 0,
		Option2 = 1,
		Option3 = 2,
		Option4 = 3,
		MAX     = 4
	};

	/**
	 * Enum OPP.ERandomSwitch3
	 */
	enum class ERandomSwitch3 : uint8_t
	{
		Option1 = 0,
		Option2 = 1,
		Option3 = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.ERandomSwitch2
	 */
	enum class ERandomSwitch2 : uint8_t
	{
		Option1 = 0,
		Option2 = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.EAISpawnSource
	 */
	enum class EAISpawnSource : uint8_t
	{
		InitialDirectorSpawn = 0,
		SpawnWave            = 1,
		SummonedByAIDirector = 2,
		AlwaysSpawn          = 3,
		RandomManager        = 4,
		External             = 5,
		FromLimbo            = 6,
		MAX                  = 7
	};

	/**
	 * Enum OPP.EAIDebugErrorFlags
	 */
	enum class EAIDebugErrorFlags : uint8_t
	{
		TargetPlayerUnreacheable = 0,
		DestUnreacheable         = 1,
		DestNotOnNavmesh         = 2,
		NotOnNavmesh             = 3,
		MAX                      = 4
	};

	/**
	 * Enum OPP.EAIDebugConfigFlags
	 */
	enum class EAIDebugConfigFlags : uint8_t
	{
		IgnoringPlayers = 0,
		Neutral         = 1,
		AlwaysChase     = 2,
		CanChase        = 3,
		CanSeePlayers   = 4,
		CanHearPlayers  = 5,
		CanInvestigate  = 6,
		CanBeDisturbed  = 7,
		CanAttack       = 8,
		MAX             = 9
	};

	/**
	 * Enum OPP.ERotationMode
	 */
	enum class ERotationMode : uint8_t
	{
		FaceVelocity = 0,
		FaceTarget   = 1,
		Explicit     = 2,
		MAX          = 3
	};

	/**
	 * Enum OPP.EMoveFailedReason
	 */
	enum class EMoveFailedReason : uint8_t
	{
		Unknown            = 0,
		AINotOnNavMesh     = 1,
		TargetNotOnNavMesh = 2,
		NoPathToTarget     = 3,
		Aborted            = 4,
		MAX                = 5
	};

	/**
	 * Enum OPP.EMoveType
	 */
	enum class EMoveType : uint8_t
	{
		None  = 0,
		Point = 1,
		Actor = 2,
		MAX   = 3
	};

	/**
	 * Enum OPP.EMoveResult
	 */
	enum class EMoveResult : uint8_t
	{
		None        = 0,
		Success     = 1,
		Failed      = 2,
		Interrupted = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.EMoveStatus
	 */
	enum class EMoveStatus : uint8_t
	{
		Idle    = 0,
		Waiting = 1,
		Paused  = 2,
		Moving  = 3,
		MAX     = 4
	};

	/**
	 * Enum OPP.EAIScriptedState
	 */
	enum class EAIScriptedState : uint8_t
	{
		None                = 0,
		MovingToAnchor      = 1,
		LoopingIdle         = 2,
		SingleShotAnim      = 3,
		ScriptedAnimStation = 4,
		ScriptedAttack      = 5,
		ScriptedStartled    = 6,
		MAX                 = 7
	};

	/**
	 * Enum OPP.ENPCMonsterClosetInteractionState
	 */
	enum class ENPCMonsterClosetInteractionState : uint8_t
	{
		None                     = 0,
		SpawnWarning             = 1,
		DoorOpeningRequested     = 2,
		NPCInMovement            = 3,
		UnspawnWaitingForNav     = 4,
		UnspawnWaitingForDestroy = 5,
		MAX                      = 6
	};

	/**
	 * Enum OPP.ESneakState
	 */
	enum class ESneakState : uint8_t
	{
		GotoLocation = 0,
		LookAround   = 1,
		MAX          = 2
	};

	/**
	 * Enum OPP.EPlayerAvoidanceState
	 */
	enum class EPlayerAvoidanceState : uint8_t
	{
		Avoidance         = 0,
		LastSegment       = 1,
		CheckSurroundings = 2,
		MAX               = 3
	};

	/**
	 * Enum OPP.EPlayerAvoidanceType
	 */
	enum class EPlayerAvoidanceType : uint8_t
	{
		RoomPathing    = 0,
		NavDestination = 1,
		MAX            = 2
	};

	/**
	 * Enum OPP.EImperativeActionType
	 */
	enum class EImperativeActionType : uint8_t
	{
		None      = 0,
		Radio     = 1,
		Generator = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EWaypointValidityStatus
	 */
	enum class EWaypointValidityStatus : uint8_t
	{
		Valid        = 0,
		Disabled     = 1,
		CurrentPoint = 2,
		Unavailable  = 3,
		FilteredOut  = 4,
		Unreacheable = 5,
		MAX          = 6
	};

	/**
	 * Enum OPP.EPatrolType
	 */
	enum class EPatrolType : uint8_t
	{
		None            = 0,
		Route           = 1,
		Point           = 2,
		SingleWaypoint  = 3,
		AmbientActivity = 4,
		MAX             = 5
	};

	/**
	 * Enum OPP.EBreakableObstacleAnimStyle
	 */
	enum class EBreakableObstacleAnimStyle : uint8_t
	{
		WoodPlanks = 0,
		Window     = 1,
		MAX        = 2
	};

	/**
	 * Enum OPP.EBreakableLedgeMarkerBehavior
	 */
	enum class EBreakableLedgeMarkerBehavior : uint8_t
	{
		None           = 0,
		EnableOnBreak  = 1,
		DisableOnBreak = 2,
		MAX            = 3
	};

	/**
	 * Enum OPP.EWindowJumpOverType
	 */
	enum class EWindowJumpOverType : uint8_t
	{
		None       = 0,
		WalkToLand = 1,
		RunToLand  = 2,
		RunToFall  = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.ECustomizationInteractionType
	 */
	enum class ECustomizationInteractionType : uint8_t
	{
		ShopNone                   = 0,
		ShopBuy                    = 1,
		ShopNoneCantAfford         = 2,
		LockerEquip                = 3,
		LockerNoneForSale          = 4,
		LockerNoneCantAfford       = 5,
		NoneLocked                 = 6,
		LockerEquipAcquiredOptions = 7,
		ShopBuyMissingOptions      = 8,
		LockerNone                 = 9,
		ViewDLCContentPack         = 10,
		MAX                        = 11
	};

	/**
	 * Enum OPP.EDebugWorldOctreeObjectType
	 */
	enum class EDebugWorldOctreeObjectType : uint8_t
	{
		LedgeMarker              = 0,
		InteractionZoneComponent = 1,
		Triggerable              = 2,
		MAX                      = 3
	};

	/**
	 * Enum OPP.EDisplayDebugModifier
	 */
	enum class EDisplayDebugModifier : uint8_t
	{
		None             = 0,
		AnimInstance     = 1,
		AIConfig         = 2,
		AIPointSelection = 3,
		VO               = 4,
		MAX              = 5
	};

	/**
	 * Enum OPP.EFullScreenDebugInfoType
	 */
	enum class EFullScreenDebugInfoType : uint8_t
	{
		None                     = 0,
		Player                   = 1,
		AI                       = 2,
		PlayerAndAI              = 3,
		Physics                  = 4,
		TQ                       = 5,
		ActorInView              = 6,
		VO                       = 7,
		SoundEnvironment         = 8,
		AudioEvents              = 9,
		Music                    = 10,
		RTPC                     = 11,
		Streaming                = 12,
		Online                   = 13,
		Overseer                 = 14,
		WhoWasWhere              = 15,
		Objectives               = 16,
		GameplayAttributes       = 17,
		PlayerCustomization      = 18,
		ItemSpawning             = 19,
		Variators                = 20,
		AnimUsage                = 21,
		NPCRandomization         = 22,
		MovementNetwork          = 23,
		BackgroundCharacters     = 24,
		Rooms                    = 25,
		DoorRandomization        = 26,
		BlockableRandomization   = 27,
		HidespotRandomization    = 28,
		SpecialRooms             = 29,
		DarknessDetection        = 30,
		VoiceChat                = 31,
		PlayerStats              = 32,
		GameplayRandomization    = 33,
		SwitchMatchRandomization = 34,
		QuickGraphs              = 35,
		ChunkInstall             = 36,
		ModifiedOptions          = 37,
		UI                       = 38,
		SafeZone                 = 39,
		LobbyGameChess           = 40,
		MAX                      = 41
	};

	/**
	 * Enum OPP.ECollisionDebugViewType
	 */
	enum class ECollisionDebugViewType : uint8_t
	{
		None            = 0,
		SimpleLineDraw  = 1,
		SimpleMeshDraw  = 2,
		ComplexMeshDraw = 3,
		MAX             = 4
	};

	/**
	 * Enum OPP.EChessGamePlayerAnimState
	 */
	enum class EChessGamePlayerAnimState : uint8_t
	{
		WaitForOpponent  = 0,
		WaitForTurn      = 1,
		PlayTurn         = 2,
		RevertMove       = 3,
		MovePiece        = 4,
		TapChessClock    = 5,
		EndRoundReaction = 6,
		MAX              = 7
	};

	/**
	 * Enum OPP.EChessActionType
	 */
	enum class EChessActionType : uint8_t
	{
		Invalid     = 0,
		Move        = 1,
		Take        = 2,
		EnPassant   = 3,
		SmallCastle = 4,
		LongCastle  = 5,
		MAX         = 6
	};

	/**
	 * Enum OPP.ERBChunkRuleMode
	 */
	enum class ERBChunkRuleMode : uint8_t
	{
		Include = 0,
		Exclude = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.ECollectibleType
	 */
	enum class ECollectibleType : uint8_t
	{
		Document = 0,
		Photo    = 1,
		MAX      = 2
	};

	/**
	 * Enum OPP.EContainerPopulatedState
	 */
	enum class EContainerPopulatedState : uint8_t
	{
		Unpopulated = 0,
		Used        = 1,
		Empty       = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.EContainerSpawningType
	 */
	enum class EContainerSpawningType : uint8_t
	{
		StageOnly      = 0,
		RewardOnly     = 1,
		StageAndReward = 2,
		PuzzleRoom     = 3,
		ReviveStation  = 4,
		MAX            = 5
	};

	/**
	 * Enum OPP.EContainerSpawnLocationPriority
	 */
	enum class EContainerSpawnLocationPriority : uint8_t
	{
		Low    = 0,
		Normal = 1,
		High   = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.EPlayerBreathType
	 */
	enum class EPlayerBreathType : uint8_t
	{
		Run       = 0,
		Exhausted = 1,
		Pain      = 2,
		Crawl     = 3,
		MAX       = 4
	};

	/**
	 * Enum OPP.ESpectatorMode
	 */
	enum class ESpectatorMode : uint8_t
	{
		RequestedByPlayer  = 0,
		PlayingUnavailable = 1,
		PlayerDead         = 2,
		Cheat              = 3,
		Replay             = 4,
		MAX                = 5
	};

	/**
	 * Enum OPP.EDeadRepulsionType
	 */
	enum class EDeadRepulsionType : uint8_t
	{
		Box    = 0,
		Spline = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.EDestructibleActionType
	 */
	enum class EDestructibleActionType : uint8_t
	{
		AddDisplacement = 0,
		BreakInSphere   = 1,
		MAX             = 2
	};

	/**
	 * Enum OPP.EDisplayMessageViewMode
	 */
	enum class EDisplayMessageViewMode : uint8_t
	{
		WithOrWithoutNV = 0,
		OnlyNV          = 1,
		OnlyWithoutNV   = 2,
		MAX             = 3
	};

	/**
	 * Enum OPP.EDisplayMessagePriority
	 */
	enum class EDisplayMessagePriority : uint8_t
	{
		None        = 0,
		Low         = 1,
		BelowNormal = 2,
		Normal      = 3,
		AboveNormal = 4,
		High        = 5,
		MAX         = 6
	};

	/**
	 * Enum OPP.EDoorCollisionType
	 */
	enum class EDoorCollisionType : uint8_t
	{
		Full       = 0,
		Window     = 1,
		SeeThrough = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.EAudioDoorType
	 */
	enum class EAudioDoorType : uint8_t
	{
		SW_Door_Wood        = 0,
		SW_Door_Wood_Window = 1,
		SW_Door_MetalSolid  = 2,
		SW_Door_MetalGate   = 3,
		SW_Door_Type_Planks = 4,
		SW_Door_MAX         = 5
	};

	/**
	 * Enum OPP.EDoorRandomization
	 */
	enum class EDoorRandomization : uint8_t
	{
		Blockable        = 0,
		ReplaceableFront = 1,
		ReplaceableBack  = 2,
		TrappableFront   = 3,
		TrappableBack    = 4,
		Lockable         = 5,
		OpenCloseFront   = 6,
		OpenCloseBack    = 7,
		RewardRoomDoor   = 8,
		MAX              = 9
	};

	/**
	 * Enum OPP.EDoorLockerRandomAction
	 */
	enum class EDoorLockerRandomAction : uint8_t
	{
		UnlockDoor  = 0,
		LockDoor    = 1,
		UnblockDoor = 2,
		BlockDoor   = 3,
		RemoveLock  = 4,
		MAX         = 5
	};

	/**
	 * Enum OPP.EMapCheckType
	 */
	enum class EMapCheckType : uint8_t
	{
		EditorRoaming         = 0,
		EditorSelected        = 1,
		EditorErrored         = 2,
		EditorErroredSelected = 3,
		BuildMapCheck         = 4,
		MAX                   = 5
	};

	/**
	 * Enum OPP.EElectricFloorTrapState
	 */
	enum class EElectricFloorTrapState : uint8_t
	{
		Hidden               = 0,
		ActiveInitialization = 1,
		ActiveOff            = 2,
		ActiveWarning        = 3,
		ActiveOn             = 4,
		ActiveTriggered      = 5,
		Inactive             = 6,
		Broken               = 7,
		MAX                  = 8
	};

	/**
	 * Enum OPP.EElectrocutionSwitchState
	 */
	enum class EElectrocutionSwitchState : uint8_t
	{
		Idle              = 0,
		Intro             = 1,
		Starting          = 2,
		Active            = 3,
		ActiveOverloading = 4,
		Overloaded        = 5,
		MAX               = 6
	};

	/**
	 * Enum OPP.ENPCSpecificGesture
	 */
	enum class ENPCSpecificGesture : uint8_t
	{
		Neutral     = 0,
		Angry       = 1,
		Sad         = 2,
		Pain        = 3,
		PainIntense = 4,
		Struggle    = 5,
		Happy       = 6,
		Surprised   = 7,
		Tired       = 8,
		MAX         = 9
	};

	/**
	 * Enum OPP.ENPCBaseEmotion
	 */
	enum class ENPCBaseEmotion : uint8_t
	{
		Relaxed    = 0,
		Suspicious = 1,
		Alerted    = 2,
		Chase      = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.EPlayerInjuryLevel
	 */
	enum class EPlayerInjuryLevel : uint8_t
	{
		NotInjured        = 0,
		SlightlyInjured   = 1,
		ModeratelyInjured = 2,
		HighlyInjured     = 3,
		MAX               = 4
	};

	/**
	 * Enum OPP.EPlayerSpecificGesture
	 */
	enum class EPlayerSpecificGesture : uint8_t
	{
		Default     = 0,
		Neutral     = 1,
		Content     = 2,
		Angry       = 3,
		Sad         = 4,
		Pain        = 5,
		PainIntense = 6,
		Tired       = 7,
		Struggle    = 8,
		Smile       = 9,
		Surprised   = 10,
		Bored       = 11,
		MAX         = 12
	};

	/**
	 * Enum OPP.EGridType
	 */
	enum class EGridType : uint8_t
	{
		Relative = 0,
		World    = 1,
		MAX      = 2
	};

	/**
	 * Enum OPP.EGlobalAIEvaluationType
	 */
	enum class EGlobalAIEvaluationType : uint8_t
	{
		SingleBot = 0,
		AnyBot    = 1,
		MAX       = 2
	};

	/**
	 * Enum OPP.EMainMenuButton
	 */
	enum class EMainMenuButton : uint8_t
	{
		EnterLobby     = 0,
		ReplayTutorial = 1,
		Options        = 2,
		Credits        = 3,
		Quit           = 4,
		MAX            = 5
	};

	/**
	 * Enum OPP.EGameplayTriggerType
	 */
	enum class EGameplayTriggerType : uint8_t
	{
		Pushable = 0,
		NPC      = 1,
		MAX      = 2
	};

	/**
	 * Enum OPP.ETriggerType
	 */
	enum class ETriggerType : uint8_t
	{
		Trigger   = 0,
		Untrigger = 1,
		MAX       = 2
	};

	/**
	 * Enum OPP.EOptionsErrorCode
	 */
	enum class EOptionsErrorCode : uint8_t
	{
		Default          = 0,
		NvidiaCard       = 1,
		RaytracingReboot = 2,
		MainMenuOnly     = 3,
		None             = 4,
		MAX              = 5
	};

	/**
	 * Enum OPP.EOptionsMenuOption
	 */
	enum class EOptionsMenuOption : uint8_t
	{
		None                             = 0,
		WindowMode                       = 1,
		Resolution                       = 2,
		ResolutionScale                  = 3,
		VSync                            = 4,
		RefreshRate                      = 5,
		DisplayDevice                    = 6,
		FrameLimit                       = 7,
		CalibrationScreen                = 8,
		Brightness                       = 9,
		HDREnabled                       = 10,
		HDRPeakBrightness                = 11,
		HDRPaperwhite                    = 12,
		HDRUserInterfaceBrightness       = 13,
		QualityPreset                    = 14,
		ViewDistance                     = 15,
		Shadows                          = 16,
		AntiAliasing                     = 17,
		Texture                          = 18,
		Effects                          = 19,
		Reflections                      = 20,
		Volumetrics                      = 21,
		AutoDetectQuality                = 22,
		Direct3DVersion                  = 23,
		MotionBlur                       = 24,
		DLSS                             = 25,
		FSR2                             = 26,
		EnableRT                         = 27,
		RTShadows                        = 28,
		RTReflections                    = 29,
		MasterVolume                     = 30,
		MusicVolume                      = 31,
		EffectsVolume                    = 32,
		EnableVoiceChat                  = 33,
		VoiceChatPartyOnly               = 34,
		VoiceChatInputDevice             = 35,
		VoiceChatVolume                  = 36,
		MicrophoneVolume                 = 37,
		PushToTalk                       = 38,
		VoiceActivityDetectorAuto        = 39,
		VoiceActivityDetectorHangover    = 40,
		VoiceActivityDetectorSensitivity = 41,
		VoiceActivityDetectorNoiseFloor  = 42,
		MicTest                          = 43,
		LookSensitivityMouse             = 44,
		LookSensitivityControllerYaw     = 45,
		LookSensitivityControllerPitch   = 46,
		ToggleRun                        = 47,
		AutoHideItemInHand               = 48,
		InputBindings                    = 49,
		InvertXAxis                      = 50,
		InvertYAxis                      = 51,
		GamepadControlScheme             = 52,
		ResetMenuTutorials               = 53,
		ResetNonMenuTutorials            = 54,
		Crossplay                        = 55,
		Region                           = 56,
		InterfacePreset                  = 57,
		HealthDisplay                    = 58,
		StaminaDisplay                   = 59,
		SanityDisplay                    = 60,
		NoiseDisplay                     = 61,
		DarknessDisplay                  = 62,
		InventoryDisplay                 = 63,
		ObjectiveDisplay                 = 64,
		CrosshairDisplay                 = 65,
		TeammateStatusHUDDisplay         = 66,
		TeammateStatusInWorldDisplay     = 67,
		TeammateStatusOutsideViewDisplay = 68,
		FriendsOnlineStatusNotifications = 69,
		AllowFriendRequestNotifications  = 70,
		AllowPartyInviteNotifications    = 71,
		AudioLanguage                    = 72,
		TextLanguage                     = 73,
		SubtitlesEnabled                 = 74,
		SubtitlesLanguage                = 75,
		SubtitlesFontSize                = 76,
		SubtitlesBackground              = 77,
		HeadBobbingEnabled               = 78,
		TinnitusFilter                   = 79,
		Max                              = 80
	};

	/**
	 * Enum OPP.EPlayerBarState
	 */
	enum class EPlayerBarState : uint8_t
	{
		Default = 0,
		Base    = 1,
		Upper   = 2,
		Boost   = 3,
		Temp    = 4,
		Damage  = 5,
		MAX     = 6
	};

	/**
	 * Enum OPP.ECustomGhostFinishState
	 */
	enum class ECustomGhostFinishState : uint8_t
	{
		Success = 0,
		Failed  = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.EHackQuadrantState
	 */
	enum class EHackQuadrantState : uint8_t
	{
		Failure = 0,
		Neutral = 1,
		Success = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.EHidespotVerticalDirection
	 */
	enum class EHidespotVerticalDirection : uint8_t
	{
		Forward       = 0,
		ForwardRight  = 1,
		Right         = 2,
		BackwardRight = 3,
		Backward      = 4,
		BackwardLeft  = 5,
		Left          = 6,
		ForwardLeft   = 7,
		MAX           = 8
	};

	/**
	 * Enum OPP.EAdjustmentType
	 */
	enum class EAdjustmentType : uint8_t
	{
		None                = 0,
		LocationAndRotation = 1,
		LocationOnly        = 2,
		RotationOnly        = 3,
		LookAtWithDistance  = 4,
		LookAtOnPlace       = 5,
		MAX                 = 6
	};

	/**
	 * Enum OPP.EInteractionPriority
	 */
	enum class EInteractionPriority : uint8_t
	{
		None        = 0,
		Low         = 1,
		BelowNormal = 2,
		Normal      = 3,
		AboveNormal = 4,
		High        = 5,
		MAX         = 6
	};

	/**
	 * Enum OPP.EInvestigationRotationAlignBehavior
	 */
	enum class EInvestigationRotationAlignBehavior : uint8_t
	{
		None                      = 0,
		LookAtThisPoint           = 1,
		LookAtTarget              = 2,
		LookInDirection           = 3,
		LookInAxisEitherDirection = 4,
		LookInPlayerDirection     = 5,
		MAX                       = 6
	};

	/**
	 * Enum OPP.EItemProgressionCategory
	 */
	enum class EItemProgressionCategory : uint8_t
	{
		None                = 0,
		ActiveSkill         = 1,
		ActiveSkillUpgrade  = 2,
		Perk                = 3,
		CharacterUpgrade    = 4,
		CustomizationOption = 5,
		CellItem            = 6,
		Count               = 7,
		MAX                 = 8
	};

	/**
	 * Enum OPP.EItemSpawningManagerState
	 */
	enum class EItemSpawningManagerState : uint8_t
	{
		Unpopulated                           = 0,
		RemoveContainersOutsideTrial          = 1,
		GatherItemRemovingActors              = 2,
		SetupReviveContainers                 = 3,
		PopulatingReviveContainers            = 4,
		RemoveContainersCloseToObjectives     = 5,
		RemoveContainersCloseToRandomHelpers  = 6,
		RemoveContainersBlockedByHidespot     = 7,
		SortActors                            = 8,
		SetupRewardRooms                      = 9,
		PopulatingRewardRoomsFirstCurrency    = 10,
		PopulatingRewardRooms                 = 11,
		SetupStageContainers                  = 12,
		SetupContainerLocks                   = 13,
		PopulatingMandatoryLockedPrimaryItems = 14,
		PopulatingLockedPrimaryItems          = 15,
		PopulatingLockedSecondaryItems        = 16,
		PopulatingStageContainers             = 17,
		SetupContainerTraps                   = 18,
		PopulatingContainerTraps              = 19,
		Populated                             = 20,
		MAX                                   = 21
	};

	/**
	 * Enum OPP.EItemLockType
	 */
	enum class EItemLockType : uint8_t
	{
		AllowedSecondaryItem    = 0,
		CannotBeLocked          = 1,
		PrimaryAndSecondaryItem = 2,
		PrimaryItemOnly         = 3,
		MandatoryPrimaryItem    = 4,
		MAX                     = 5
	};

	/**
	 * Enum OPP.EJumpScareFlags
	 */
	enum class EJumpScareFlags : uint8_t
	{
		InvalidIfRunning         = 0,
		InvalidIfWalking         = 1,
		InvalidIfCrouched        = 2,
		InvalidIfChased          = 3,
		InvalidIfKnockedDown     = 4,
		InvalidIfInDifferentRoom = 5,
		TriggerOnLineOfSight     = 6,
		UseRoomVolume            = 7,
		MAX                      = 8
	};

	/**
	 * Enum OPP.ELeashType
	 */
	enum class ELeashType : uint8_t
	{
		CantLeave = 0,
		CantEnter = 1,
		MAX       = 2
	};

	/**
	 * Enum OPP.ELedgeCoopMoveType
	 */
	enum class ELedgeCoopMoveType : uint8_t
	{
		None           = 0,
		CoopWall       = 1,
		CoopThrowCatch = 2,
		CoopClimbOver  = 3,
		MAX            = 4
	};

	/**
	 * Enum OPP.EHybridLightChannel
	 */
	enum class EHybridLightChannel : uint8_t
	{
		None  = 0,
		Red   = 1,
		Blue  = 2,
		Green = 3,
		MAX   = 4
	};

	/**
	 * Enum OPP.EMuffleLevel
	 */
	enum class EMuffleLevel : uint8_t
	{
		Off  = 0,
		Low  = 1,
		High = 2,
		MAX  = 3
	};

	/**
	 * Enum OPP.ERBMicrophoneTestState
	 */
	enum class ERBMicrophoneTestState : uint8_t
	{
		Disabled   = 0,
		Connecting = 1,
		Connected  = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.EMinigameState
	 */
	enum class EMinigameState : uint8_t
	{
		Deactivated             = 0,
		ActivatedNotStarted     = 1,
		ActivatedNotCompleted   = 2,
		ActivatedPrizeAvailable = 3,
		Completed               = 4,
		MAX                     = 5
	};

	/**
	 * Enum OPP.EMonsterClosetState
	 */
	enum class EMonsterClosetState : uint8_t
	{
		Closed = 0,
		Open   = 1,
		Moving = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ERBSpecialMoveDesyncType
	 */
	enum class ERBSpecialMoveDesyncType : uint8_t
	{
		None               = 0,
		Timestamp          = 1,
		SpecialMoveIndex   = 2,
		SpecialMoveType    = 3,
		LocomotionMoveType = 4,
		Interactible       = 5,
		Stamina            = 6,
		Direction          = 7,
		Location           = 8,
		Prediction         = 9,
		MAX                = 10
	};

	/**
	 * Enum OPP.ENetworkSyncType
	 */
	enum class ENetworkSyncType : uint8_t
	{
		ForwardOnce  = 0,
		BackwardOnce = 1,
		PingPong     = 2,
		PingPongSine = 3,
		ForwardLoop  = 4,
		BackwardLoop = 5,
		Noise        = 6,
		MAX          = 7
	};

	/**
	 * Enum OPP.ENPCInterruptActionType
	 */
	enum class ENPCInterruptActionType : uint8_t
	{
		None                  = 0,
		LightBulbExplodeReact = 1,
		ThrowableBody         = 2,
		ThrowableHead         = 3,
		Shove                 = 4,
		HealSlowdown          = 5,
		BlindMine             = 6,
		AmpHit                = 7,
		Amp                   = 8,
		MAX                   = 9
	};

	/**
	 * Enum OPP.ENPCAnimSetStyle
	 */
	enum class ENPCAnimSetStyle : uint8_t
	{
		HH  = 0,
		H1  = 1,
		H2  = 2,
		MAX = 3
	};

	/**
	 * Enum OPP.ENPCCustomizationSlot
	 */
	enum class ENPCCustomizationSlot : uint8_t
	{
		Hair      = 0,
		Head      = 1,
		Watch     = 2,
		UpperBody = 3,
		LowerBody = 4,
		None      = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.ESeparatorTubeState
	 */
	enum class ESeparatorTubeState : uint8_t
	{
		AllClosed   = 0,
		OpenOutside = 1,
		OpenInside  = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ENVState
	 */
	enum class ENVState : uint8_t
	{
		Off         = 0,
		OnPowered   = 1,
		OnUnPowered = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ENVSoundType
	 */
	enum class ENVSoundType : uint8_t
	{
		TurnOn           = 0,
		TurnOnLowBattery = 1,
		OutOfBattery     = 2,
		Repowered        = 3,
		TurnOff          = 4,
		MAX              = 5
	};

	/**
	 * Enum OPP.EObjectiveGroupCompletionLogic
	 */
	enum class EObjectiveGroupCompletionLogic : uint8_t
	{
		AllObjectivesCompleted      = 0,
		AnyObjectiveCompleted       = 1,
		SpecificObjectivesCompleted = 2,
		MAX                         = 3
	};

	/**
	 * Enum OPP.EOptionsMenuValueType
	 */
	enum class EOptionsMenuValueType : uint8_t
	{
		None     = 0,
		Bool     = 1,
		Int      = 2,
		Float    = 3,
		IntPoint = 4,
		String   = 5,
		MAX      = 6
	};

	/**
	 * Enum OPP.EControlSchemeActionType
	 */
	enum class EControlSchemeActionType : uint8_t
	{
		None                = 0,
		Aim                 = 1,
		UseItem_Throw       = 2,
		PeekLeft            = 3,
		PeekRight           = 4,
		Run                 = 5,
		Move                = 6,
		Camera              = 7,
		Ping_TalkWheel      = 8,
		InventoryScrollUp   = 9,
		InventoryScrollDown = 10,
		Trade_Drop          = 11,
		Trade               = 12,
		Drop                = 13,
		NightVision         = 14,
		Interact            = 15,
		Crouch_Toggle       = 16,
		Jump                = 17,
		Menu                = 18,
		Objective           = 19,
		MAX                 = 20
	};

	/**
	 * Enum OPP.EOptionsTabType
	 */
	enum class EOptionsTabType : uint8_t
	{
		None     = 0,
		General  = 1,
		Controls = 2,
		Graphics = 3,
		Audio    = 4,
		Network  = 5,
		MAX      = 6
	};

	/**
	 * Enum OPP.EPawnSearchFlags
	 */
	enum class EPawnSearchFlags : uint8_t
	{
		None              = 0,
		IgnoreBots        = 1,
		IgnorePlayers     = 2,
		FavorBots         = 3,
		FavorPlayers      = 4,
		PrioritizeBots    = 5,
		PrioritizePlayers = 6,
		IgnoreSpectre     = 7,
		MAX               = 8
	};

	/**
	 * Enum OPP.ETraversalLedgeAngleType
	 */
	enum class ETraversalLedgeAngleType : uint8_t
	{
		Flat          = 0,
		Angled45Right = 1,
		Angled45Left  = 2,
		MAX           = 3
	};

	/**
	 * Enum OPP.EDizzinessType
	 */
	enum class EDizzinessType : uint8_t
	{
		Unspecified = 0,
		Psychosis   = 1,
		Screamer    = 2,
		Scripted    = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.ELandOntoLedgeType
	 */
	enum class ELandOntoLedgeType : uint8_t
	{
		Land25    = 0,
		RunJump25 = 1,
		Land50    = 2,
		Land100   = 3,
		MAX       = 4
	};

	/**
	 * Enum OPP.ECantShoveReason
	 */
	enum class ECantShoveReason : uint8_t
	{
		Cooldown = 0,
		MAX      = 1
	};

	/**
	 * Enum OPP.EShowItemCategory
	 */
	enum class EShowItemCategory : uint8_t
	{
		Fist        = 0,
		SmallWeapon = 1,
		HealthItem  = 2,
		Utility     = 3,
		All         = 4,
		MAX         = 5
	};

	/**
	 * Enum OPP.ECameraShakeType
	 */
	enum class ECameraShakeType : uint8_t
	{
		Gameplay            = 0,
		Scripted            = 1,
		Psychosis           = 2,
		Pushable            = 3,
		Sliding             = 4,
		GruntFootstep       = 5,
		StumblingDownStairs = 6,
		Screamer            = 7,
		MAX                 = 8
	};

	/**
	 * Enum OPP.EPlayerCustomizationSexQueryType
	 */
	enum class EPlayerCustomizationSexQueryType : uint8_t
	{
		All    = 0,
		Male   = 1,
		Female = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ECustomizationItemAvailability
	 */
	enum class ECustomizationItemAvailability : uint8_t
	{
		None                = 0,
		ForSale             = 1,
		Locked              = 2,
		LockedRequiresDLC   = 3,
		Acquired            = 4,
		CantAfford          = 5,
		SomeOptionsAcquired = 6,
		MAX                 = 7
	};

	/**
	 * Enum OPP.EPlayerGameSessionTransitionType
	 */
	enum class EPlayerGameSessionTransitionType : uint8_t
	{
		None                    = 0,
		JoiningParty            = 1,
		JoiningPartyGameSession = 2,
		FindingNewLobbyForParty = 3,
		WaitingForNewLobby      = 4,
		ReturningToLobby        = 5,
		MAX                     = 6
	};

	/**
	 * Enum OPP.EMenuUpgradeItemState
	 */
	enum class EMenuUpgradeItemState : uint8_t
	{
		Locked                  = 0,
		Available               = 1,
		AvailableNoRessources   = 2,
		Acquired                = 3,
		LockedGeneric           = 4,
		LockedNeedPlayerLevelUp = 5,
		LockedNeedItem          = 6,
		LockedNeedUnlock        = 7,
		MAX                     = 8
	};

	/**
	 * Enum OPP.ERespawnerState
	 */
	enum class ERespawnerState : uint8_t
	{
		Available               = 0,
		WaitingForPlayerToSpawn = 1,
		OpeningDoors            = 2,
		WaitingForPlayerToExit  = 3,
		ClosingDoors            = 4,
		MAX                     = 5
	};

	/**
	 * Enum OPP.EPlayerStatContextType
	 */
	enum class EPlayerStatContextType : uint8_t
	{
		Global    = 0,
		Character = 1,
		Trial     = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EPlayerTrialRating
	 */
	enum class EPlayerTrialRating : uint8_t
	{
		F       = 0,
		D       = 1,
		DPlus   = 2,
		CMinus  = 3,
		C       = 4,
		CPlus   = 5,
		BMinus  = 6,
		B       = 7,
		BPlus   = 8,
		AMinus  = 9,
		A       = 10,
		APlus   = 11,
		Invalid = 12,
		MAX     = 13
	};

	/**
	 * Enum OPP.EPlayerBadgeThresholdOperator
	 */
	enum class EPlayerBadgeThresholdOperator : uint8_t
	{
		Greater      = 0,
		GreaterEqual = 1,
		Lower        = 2,
		LowerEqual   = 3,
		Equal        = 4,
		MAX          = 5
	};

	/**
	 * Enum OPP.EPlayerStatAggregationType
	 */
	enum class EPlayerStatAggregationType : uint8_t
	{
		Increment = 0,
		Minimum   = 1,
		Maximum   = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EPlayerTriggerType
	 */
	enum class EPlayerTriggerType : uint8_t
	{
		SelectCondition        = 0,
		AllPlayer              = 1,
		HalfOfAllPlayer        = 2,
		SpecificNumberOfPlayer = 3,
		MAX                    = 4
	};

	/**
	 * Enum OPP.EPressureValveType
	 */
	enum class EPressureValveType : uint8_t
	{
		Unspecified          = 0,
		ActiveConnected      = 1,
		ActiveDisconnected   = 2,
		InactiveConnected    = 3,
		InactiveDisconnected = 4,
		MAX                  = 5
	};

	/**
	 * Enum OPP.EProximityDetectorDeviceType
	 */
	enum class EProximityDetectorDeviceType : uint8_t
	{
		TriggerOnly        = 0,
		DetectorOnly       = 1,
		DetectorAndTrigger = 2,
		MAX                = 3
	};

	/**
	 * Enum OPP.EProximityDetectorZLevelState
	 */
	enum class EProximityDetectorZLevelState : uint8_t
	{
		None         = 0,
		TargeLeveled = 1,
		TargetAbove  = 2,
		TargetBelow  = 3,
		MAX          = 4
	};

	/**
	 * Enum OPP.EProximityDetectorDeviceState
	 */
	enum class EProximityDetectorDeviceState : uint8_t
	{
		Off         = 0,
		DetectedOff = 1,
		Charging    = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.EPsychosisMineState
	 */
	enum class EPsychosisMineState : uint8_t
	{
		None      = 0,
		Deployed  = 1,
		Activated = 2,
		Broken    = 3,
		Expired   = 4,
		Finished  = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EPushableDirection
	 */
	enum class EPushableDirection : uint8_t
	{
		Forward  = 0,
		Backward = 1,
		Right    = 2,
		Left     = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.ERandomAmbientSoundType
	 */
	enum class ERandomAmbientSoundType : uint8_t
	{
		Small  = 0,
		Medium = 1,
		Large  = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ERandomGroupIgnoreRule
	 */
	enum class ERandomGroupIgnoreRule : uint8_t
	{
		RandomGroup    = 0,
		AnyRandomActor = 1,
		AllRandomActor = 2,
		MAX            = 3
	};

	/**
	 * Enum OPP.ERandomState
	 */
	enum class ERandomState : uint8_t
	{
		None   = 0,
		StateA = 1,
		StateB = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ELedgeMarkerSetup
	 */
	enum class ELedgeMarkerSetup : uint8_t
	{
		EnabledWhenHidden  = 0,
		EnabledWhenVisible = 1,
		MAX                = 2
	};

	/**
	 * Enum OPP.ESoundConnectorSetup
	 */
	enum class ESoundConnectorSetup : uint8_t
	{
		ActiveOpen   = 0,
		ActiveClosed = 1,
		Inactive     = 2,
		MAX          = 3
	};

	/**
	 * Enum OPP.ERandomManagerUpdatingPriority
	 */
	enum class ERandomManagerUpdatingPriority : uint8_t
	{
		High   = 0,
		Normal = 1,
		Low    = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ERandomManagerPopulatingOrder
	 */
	enum class ERandomManagerPopulatingOrder : uint8_t
	{
		Gates = 0,
		Traps = 1,
		MAX   = 2
	};

	/**
	 * Enum OPP.ERandomManagerExecutionOrder
	 */
	enum class ERandomManagerExecutionOrder : uint8_t
	{
		First                     = 0,
		Rails                     = 1,
		Gates                     = 2,
		Earlier                   = 3,
		SomewhatEarlier           = 4,
		Normal                    = 5,
		SomewhatLater             = 6,
		Later                     = 7,
		Last                      = 8,
		UsePopulatingOrderInstead = 9,
		MAX                       = 10
	};

	/**
	 * Enum OPP.ERepulsionReactionFilter
	 */
	enum class ERepulsionReactionFilter : uint8_t
	{
		All         = 0,
		OnlyPlayers = 1,
		OnlyNPCs    = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ERepulsionReactionType
	 */
	enum class ERepulsionReactionType : uint8_t
	{
		None  = 0,
		Light = 1,
		Heavy = 2,
		MAX   = 3
	};

	/**
	 * Enum OPP.ERepulsionRuleType
	 */
	enum class ERepulsionRuleType : uint8_t
	{
		All            = 0,
		SpecificActors = 1,
		Others         = 2,
		AllPlayers     = 3,
		AllNPCs        = 4,
		Except         = 5,
		None           = 6,
		MAX            = 7
	};

	/**
	 * Enum OPP.ERepulsionShape
	 */
	enum class ERepulsionShape : uint8_t
	{
		Box      = 0,
		Cylinder = 1,
		MAX      = 2
	};

	/**
	 * Enum OPP.ERepulsionDirectionFlags
	 */
	enum class ERepulsionDirectionFlags : uint8_t
	{
		Forward  = 0,
		Backward = 1,
		Right    = 2,
		Left     = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.ERoomSize
	 */
	enum class ERoomSize : uint8_t
	{
		VerySmall = 0,
		Small     = 1,
		Medium    = 2,
		Large     = 3,
		MAX       = 4
	};

	/**
	 * Enum OPP.ERoomType
	 */
	enum class ERoomType : uint8_t
	{
		Normal   = 0,
		CoopOnly = 1,
		MAX      = 2
	};

	/**
	 * Enum OPP.ERoomConnectionType
	 */
	enum class ERoomConnectionType : uint8_t
	{
		Normal      = 0,
		Coop        = 1,
		CrouchUnder = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ERoomConnectionState
	 */
	enum class ERoomConnectionState : uint8_t
	{
		Open              = 0,
		Closed            = 1,
		ClosedTemporarily = 2,
		ClosedForQuery    = 3,
		MAX               = 4
	};

	/**
	 * Enum OPP.ESASTransitionDirection
	 */
	enum class ESASTransitionDirection : uint8_t
	{
		Invalid     = 0,
		MapEntrance = 1,
		MapExit     = 2,
		Random      = 3,
		Deprecated  = 4,
		MAX         = 5
	};

	/**
	 * Enum OPP.AutoDoorState
	 */
	enum class EAutoDoorState : uint8_t
	{
		AutoDoorState_Closed                = 0,
		AutoDoorState_Open                  = 1,
		AutoDoorState_WaitingForPlayerEnter = 2,
		AutoDoorState_WaitingForPlayerExit  = 3,
		AutoDoorState_AutoDoorState_MAX     = 4
	};

	/**
	 * Enum OPP.EScriptedAnimSlotType
	 */
	enum class EScriptedAnimSlotType : uint8_t
	{
		Disabled     = 0,
		NPC          = 1,
		AnimatedMesh = 2,
		MAX          = 3
	};

	/**
	 * Enum OPP.ESimpleObjectiveType
	 */
	enum class ESimpleObjectiveType : uint8_t
	{
		Custom            = 0,
		GotoTriggerVolume = 1,
		Interact          = 2,
		Operate           = 3,
		Trigger           = 4,
		MoveObjectTo      = 5,
		UseOnObject       = 6,
		MAX               = 7
	};

	/**
	 * Enum OPP.EDoorLockType
	 */
	enum class EDoorLockType : uint8_t
	{
		SlidingLock      = 0,
		DoubleDoorPlanks = 1,
		MetalBar         = 2,
		MAX              = 3
	};

	/**
	 * Enum OPP.ESocialMenuSceneActorType
	 */
	enum class ESocialMenuSceneActorType : uint8_t
	{
		Invalid     = 0,
		SocialMenu  = 1,
		PhotoFinish = 2,
		MAX         = 3
	};

	/**
	 * Enum OPP.ESocialMenuSceneActorSlot
	 */
	enum class ESocialMenuSceneActorSlot : uint8_t
	{
		Single = 0,
		Party1 = 1,
		Party2 = 2,
		Party3 = 3,
		Party4 = 4,
		MAX    = 5
	};

	/**
	 * Enum OPP.ERBSocialMenuEntryFlag
	 */
	enum class ERBSocialMenuEntryFlag : uint8_t
	{
		IsSelf                           = 0,
		InCurrentGame                    = 1,
		PartyOwner                       = 2,
		PartyMember                      = 3,
		PendingPartyInvite               = 4,
		Friend                           = 5,
		PlatformFriend                   = 6,
		PendingFriendRequest             = 7,
		PendingSentFriendRequest         = 8,
		PlatformPendingFriendRequest     = 9,
		PlatformPendingSentFriendRequest = 10,
		PlatformBlocked                  = 11,
		MAX                              = 12
	};

	/**
	 * Enum OPP.ERBSocialMenuEntryListType
	 */
	enum class ERBSocialMenuEntryListType : uint8_t
	{
		Unknown           = 0,
		Party             = 1,
		Friends           = 2,
		RecentExperiments = 3,
		Lobby             = 4,
		Blocked           = 5,
		PartyInvite       = 6,
		MAX               = 7
	};

	/**
	 * Enum OPP.ESoundTrapActivator
	 */
	enum class ESoundTrapActivator : uint8_t
	{
		NPC        = 0,
		Player     = 1,
		Projectile = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.ESoundVolumeType
	 */
	enum class ESoundVolumeType : uint8_t
	{
		ST_Volume_Interior = 0,
		ST_Volume_Exterior = 1,
		ST_Volume_MAX      = 2
	};

	/**
	 * Enum OPP.EAreaExitPointType
	 */
	enum class EAreaExitPointType : uint8_t
	{
		None  = 0,
		Point = 1,
		Line  = 2,
		Door  = 3,
		MAX   = 4
	};

	/**
	 * Enum OPP.EStalkingObjectiveType
	 */
	enum class EStalkingObjectiveType : uint8_t
	{
		StealthStalk = 0,
		PackHunt     = 1,
		MAX          = 2
	};

	/**
	 * Enum OPP.EStreamingCommandType
	 */
	enum class EStreamingCommandType : uint8_t
	{
		PrepareMapChange       = 0,
		CancelPendingMapChange = 1,
		UnloadLevels           = 2,
		CommitMapChange        = 3,
		MAX                    = 4
	};

	/**
	 * Enum OPP.EFlipSwitchState
	 */
	enum class EFlipSwitchState : uint8_t
	{
		None    = 0,
		Removed = 1,
		On      = 2,
		Off     = 3,
		Hidden  = 4,
		MAX     = 5
	};

	/**
	 * Enum OPP.ESwitchPanelPartType
	 */
	enum class ESwitchPanelPartType : uint8_t
	{
		Toggle        = 0,
		LookAt        = 1,
		InputRotation = 2,
		MAX           = 3
	};

	/**
	 * Enum OPP.ETaskState
	 */
	enum class ETaskState : uint8_t
	{
		Pending    = 0,
		InProgress = 1,
		Completed  = 2,
		MAX        = 3
	};

	/**
	 * Enum OPP.ETaskProgressionDisplayType
	 */
	enum class ETaskProgressionDisplayType : uint8_t
	{
		None    = 0,
		Counter = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.ETaskType
	 */
	enum class ETaskType : uint8_t
	{
		Daily  = 0,
		Weekly = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.ERBTextChatType
	 */
	enum class ERBTextChatType : uint8_t
	{
		Notification       = 0,
		PartyNotification  = 1,
		FriendNotification = 2,
		TalkWheel          = 3,
		MAX                = 4
	};

	/**
	 * Enum OPP.ETrapScenarioState
	 */
	enum class ETrapScenarioState : uint8_t
	{
		Removed = 0,
		Added   = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.ELinkedMarkersActivationLogic
	 */
	enum class ELinkedMarkersActivationLogic : uint8_t
	{
		ActivateOnTriggered     = 0,
		DeactivateOnTriggered   = 1,
		ActivateOnUntriggered   = 2,
		DeactivateOnUntriggered = 3,
		MAX                     = 4
	};

	/**
	 * Enum OPP.EOverrideOperatorAction
	 */
	enum class EOverrideOperatorAction : uint8_t
	{
		DoNothing              = 0,
		OverrideOnActivation   = 1,
		OverrideOnDeactivation = 2,
		MAX                    = 3
	};

	/**
	 * Enum OPP.ENPCBlendOutCondition
	 */
	enum class ENPCBlendOutCondition : uint8_t
	{
		None     = 0,
		Chase    = 1,
		Running  = 2,
		Retiring = 3,
		Always   = 4,
		MAX      = 5
	};

	/**
	 * Enum OPP.ESubtitlePriority
	 */
	enum class ESubtitlePriority : uint8_t
	{
		Low         = 0,
		BelowNormal = 1,
		Normal      = 2,
		AboveNormal = 3,
		High        = 4,
		MAX         = 5
	};

	/**
	 * Enum OPP.ELandingType
	 */
	enum class ELandingType : uint8_t
	{
		Hard      = 0,
		Medium    = 1,
		Normal    = 2,
		Knockdown = 3,
		Dead      = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.EHitReactionState
	 */
	enum class EHitReactionState : uint8_t
	{
		DisableHitReaction = 0,
		EnableHitReaction  = 1,
		CustomHitReaction  = 2,
		MAX                = 3
	};

	/**
	 * Enum OPP.EThrowableWeaponGameplayFlag
	 */
	enum class EThrowableWeaponGameplayFlag : uint8_t
	{
		None                       = 0,
		CanCauseKnockdownReaction  = 1,
		CanInteruptActions         = 2,
		CanInterruptGroundAndPound = 3,
		CanBreakWindows            = 4,
		CanBreakTraps              = 5,
		All                        = 6,
		MAX                        = 7
	};

	/**
	 * Enum OPP.EStaminaCostType
	 */
	enum class EStaminaCostType : uint8_t
	{
		None     = 0,
		Minimum  = 1,
		Small    = 2,
		Medium   = 3,
		High     = 4,
		VeryHigh = 5,
		Maximum  = 6,
		MAX      = 7
	};

	/**
	 * Enum OPP.EPickupType
	 */
	enum class EPickupType : uint8_t
	{
		Normal       = 0,
		Consume      = 1,
		TradeNormal  = 2,
		TradeConsume = 3,
		MAX          = 4
	};

	/**
	 * Enum OPP.EJumpType
	 */
	enum class EJumpType : uint8_t
	{
		Standing = 0,
		Walking  = 1,
		Backward = 2,
		Running  = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.EGraphicsRHI
	 */
	enum class EGraphicsRHI : uint8_t
	{
		DefaultGraphicsRHI_Default = 0,
		DefaultGraphicsRHI_DX11    = 1,
		DefaultGraphicsRHI_DX12    = 2,
		DefaultGraphicsRHI_Vulkan  = 3,
		DefaultGraphicsRHI_MAX     = 4
	};

	/**
	 * Enum OPP.ENarrativeScreenDataTableLogic
	 */
	enum class ENarrativeScreenDataTableLogic : uint8_t
	{
		PlaySingleRow             = 0,
		PlaySingleRandomRow       = 1,
		PlayAllRowsInOrder        = 2,
		PlayAllRowsInOrderAndLoop = 3,
		PlayAllRowsRandom         = 4,
		MAX                       = 5
	};

	/**
	 * Enum OPP.EClientTravelSource
	 */
	enum class EClientTravelSource : uint8_t
	{
		Unknown        = 0,
		MainMenu       = 1,
		Tutorial       = 2,
		Lobby          = 3,
		Experiment     = 4,
		ExperimentFail = 5,
		Release        = 6,
		ReleaseFail    = 7,
		MAX            = 8
	};

	/**
	 * Enum OPP.EUIFontSize
	 */
	enum class EUIFontSize : uint8_t
	{
		Small  = 0,
		Medium = 1,
		Large  = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ELoadoutCantEquipReason
	 */
	enum class ELoadoutCantEquipReason : uint8_t
	{
		None       = 0,
		NoFreeSlot = 1,
		MAX        = 2
	};

	/**
	 * Enum OPP.EHoldDurationType
	 */
	enum class EHoldDurationType : uint8_t
	{
		None     = 0,
		Short    = 1,
		Long     = 2,
		Progress = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.EGhostAnimEvent
	 */
	enum class EGhostAnimEvent : uint8_t
	{
		Attach = 0,
		Detach = 1,
		Action = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.ECategoryButtonState
	 */
	enum class ECategoryButtonState : uint8_t
	{
		Locked    = 0,
		Available = 1,
		Acquired  = 2,
		Empty     = 3,
		Invalid   = 4,
		MAX       = 5
	};

	/**
	 * Enum OPP.EPawnAnimQuality
	 */
	enum class EPawnAnimQuality : uint8_t
	{
		VeryHigh = 0,
		High     = 1,
		Med      = 2,
		Low      = 3,
		VeryLow  = 4,
		MAX      = 5
	};

	/**
	 * Enum OPP.EDoorInvestigationType
	 */
	enum class EDoorInvestigationType : uint8_t
	{
		None                  = 0,
		OpenInvestigateSide   = 1,
		OpenInvestigateWide   = 2,
		ClosedInvestigatePeek = 3,
		ClosedInvestigateSide = 4,
		ClosedInvestigateWide = 5,
		LockedInvestigate     = 6,
		MAX                   = 7
	};

	/**
	 * Enum OPP.EVOBehavior
	 */
	enum class EVOBehavior : uint8_t
	{
		Queue           = 0,
		InterruptIfBusy = 1,
		SkipIfBusy      = 2,
		MAX             = 3
	};

	/**
	 * Enum OPP.EVOPriority
	 */
	enum class EVOPriority : uint8_t
	{
		VeryLow  = 0,
		Low      = 1,
		Normal   = 2,
		High     = 3,
		VeryHigh = 4,
		MAX      = 5
	};

	/**
	 * Enum OPP.EFullTurnDirection
	 */
	enum class EFullTurnDirection : uint8_t
	{
		Forward = 0,
		Right   = 1,
		Right01 = 2,
		Right02 = 3,
		Right03 = 4,
		Left    = 5,
		Left01  = 6,
		Left02  = 7,
		Left03  = 8,
		MAX     = 9
	};

	/**
	 * Enum OPP.ELocomotionTurnDirection
	 */
	enum class ELocomotionTurnDirection : uint8_t
	{
		Forward = 0,
		Right   = 1,
		Right01 = 2,
		Left    = 3,
		Left01  = 4,
		MAX     = 5
	};

	/**
	 * Enum OPP.ELocomotionMovementSpeed
	 */
	enum class ELocomotionMovementSpeed : uint8_t
	{
		Stopped = 0,
		Walk    = 1,
		Stride  = 2,
		Jog     = 3,
		Run     = 4,
		Combat  = 5,
		MAX     = 6
	};

	/**
	 * Enum OPP.ETriggerableActionBehavior
	 */
	enum class ETriggerableActionBehavior : uint8_t
	{
		ActivateAndDeactivate = 0,
		OnlyActivate          = 1,
		OnlyDeactivate        = 2,
		MAX                   = 3
	};

	/**
	 * Enum OPP.EMatchCancelationReason
	 */
	enum class EMatchCancelationReason : uint8_t
	{
		Manual             = 0,
		PartyChanged       = 1,
		WaitForMatchFailed = 2,
		WaitForPartyFailed = 3,
		Error              = 4,
		MAX                = 5
	};

	/**
	 * Enum OPP.EPlayerSpawnType
	 */
	enum class EPlayerSpawnType : uint8_t
	{
		NewPlayer    = 0,
		StageReset   = 1,
		EndOfStage   = 2,
		StageRespawn = 3,
		Rejoined     = 4,
		Cheat        = 5,
		MAX          = 6
	};

	/**
	 * Enum OPP.EHudMode
	 */
	enum class EHudMode : uint8_t
	{
		NoHUD            = 0,
		DebugDisplay     = 1,
		InGameExperiment = 2,
		Spectator        = 3,
		Menu             = 4,
		Loading          = 5,
		Cinematic        = 6,
		InGameLobby      = 7,
		SAS              = 8,
		StageIntro       = 9,
		Invalid          = 10,
		MAX              = 11
	};

	/**
	 * Enum OPP.EPlayerTargetPriority
	 */
	enum class EPlayerTargetPriority : uint8_t
	{
		Normal = 0,
		High   = 1,
		MAX    = 2
	};

	/**
	 * Enum OPP.EUniqueVariatorType
	 */
	enum class EUniqueVariatorType : uint8_t
	{
		Invalid                              = 0,
		NPCBashDamageMultiplier              = 1,
		OnlyBigGrunts                        = 2,
		ForcedStartingHealth                 = 3,
		NoRigs                               = 4,
		ForcedExtraLivesCount                = 5,
		EnemiesPsychosisAura                 = 6,
		EnemiesStaminaDrainAura              = 7,
		NoRunning                            = 8,
		PlayerDamageLeash                    = 9,
		NoRadioVoiceChat                     = 10,
		Hardcore                             = 11,
		PeriodicGas                          = 12,
		NPCPopulation_Low                    = 13,
		NPCPopulation_High                   = 14,
		NPCPopulation_VeryHigh               = 15,
		ObjectiveDiscoveryDistanceMultiplier = 16,
		TrapReactionDelayMultiplier          = 17,
		NumberOfLockedContainersMultiplier   = 18,
		ExtraPsychosisOnDamage               = 19,
		NoDeaths                             = 20,
		ExitRush                             = 21,
		BadTrip                              = 22,
		HideOverheadInfo                     = 23,
		LimitPlayerUpgrades                  = 24,
		LimitRigUpgrades                     = 25,
		LimitPerks                           = 26,
		GlassDamage                          = 27,
		RunningProhibited                    = 28,
		NoRevive                             = 29,
		VoiceDisturbance                     = 30,
		NPCChaseRedEyes                      = 31,
		NPCHeightenedStimuli                 = 32,
		MAX                                  = 33
	};

	/**
	 * Enum OPP.ETriggerComponentNetType
	 */
	enum class ETriggerComponentNetType : uint8_t
	{
		ServerOnly       = 0,
		ClientOnly       = 1,
		ServerAndClients = 2,
		MAX              = 3
	};

	/**
	 * Enum OPP.EActiveSkillState
	 */
	enum class EActiveSkillState : uint8_t
	{
		None      = 0,
		Placed    = 1,
		Deployed  = 2,
		Activated = 3,
		Expired   = 4,
		Finished  = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EQuestGiverMenuCategory
	 */
	enum class EQuestGiverMenuCategory : uint8_t
	{
		Tasks   = 0,
		Upgrade = 1,
		Shop    = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.EMetaNPCType
	 */
	enum class EMetaNPCType : uint8_t
	{
		Engineer    = 0,
		Pharmacist  = 1,
		ShadowyDame = 2,
		Director    = 3,
		Count       = 4,
		None        = 5,
		MAX         = 6
	};

	/**
	 * Enum OPP.EProfileUpgradeCategory
	 */
	enum class EProfileUpgradeCategory : uint8_t
	{
		Core     = 0,
		PerkSlot = 1,
		Count    = 2,
		None     = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.ERadialWheelType
	 */
	enum class ERadialWheelType : uint8_t
	{
		None      = 0,
		Talk      = 1,
		Inventory = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EMainObjectiveType
	 */
	enum class EMainObjectiveType : uint8_t
	{
		Main     = 0,
		Prologue = 1,
		Epilogue = 2,
		MAX      = 3
	};

	/**
	 * Enum OPP.EGameEventImportanceLevel
	 */
	enum class EGameEventImportanceLevel : uint8_t
	{
		Low    = 0,
		Normal = 1,
		High   = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.EGameEvent
	 */
	enum class EGameEvent : uint8_t
	{
		None                           = 0,
		StageStarted                   = 1,
		EndOfStageReached              = 2,
		EndOfStageStats                = 3,
		CompletedObjectiveCoordinator  = 4,
		CompletedSingleObjective       = 5,
		PlayerIncapacitated            = 6,
		PlayerRevived                  = 7,
		PlayerKilled                   = 8,
		PlayerLeftGame                 = 9,
		PlayerRespawned                = 10,
		PlayerDruggedByPusher          = 11,
		PlayerEnteredSAS               = 12,
		PlayerExitedSAS                = 13,
		GaveItem                       = 14,
		UsedItem                       = 15,
		PickupItem                     = 16,
		BotKnockedOut                  = 17,
		BotKnockedOutByDynamicObstacle = 18,
		BotKilled                      = 19,
		CoopDoorBash                   = 20,
		CoopLedgeCatch                 = 21,
		CoopLegUp                      = 22,
		CoopLedgePull                  = 23,
		PouncersSpawned                = 24,
		SpecialBotSpawned              = 25,
		SpawnWave                      = 26,
		AIDirector                     = 27,
		MAX                            = 28
	};

	/**
	 * Enum OPP.EDoorPassType
	 */
	enum class EDoorPassType : uint8_t
	{
		None           = 0,
		Walkthrough    = 1,
		OpenToClosed   = 2,
		OpenToLocked   = 3,
		ClosedToOpen   = 4,
		ClosedToClosed = 5,
		ClosedToLocked = 6,
		LockedToOpen   = 7,
		LockedToClosed = 8,
		MAX            = 9
	};

	/**
	 * Enum OPP.EAIMusicState
	 */
	enum class EAIMusicState : uint8_t
	{
		Unset          = 0,
		None           = 1,
		Unaware        = 2,
		Suspicious     = 3,
		Alerted        = 4,
		Chase          = 5,
		ChaseProximity = 6,
		MAX            = 7
	};

	/**
	 * Enum OPP.ETutorialType
	 */
	enum class ETutorialType : uint8_t
	{
		Custom       = 0,
		Interaction  = 1,
		EquippedItem = 2,
		Objective    = 3,
		Inventory    = 4,
		MAX          = 5
	};

	/**
	 * Enum OPP.ELargeObjectType
	 */
	enum class ELargeObjectType : uint8_t
	{
		None           = 0,
		Default        = 1,
		LargeBox30     = 2,
		LargeBox60     = 3,
		Diaporama      = 4,
		Bucket         = 5,
		TeddyBear      = 6,
		ChildMannequin = 7,
		HotPotato      = 8,
		CocainePackage = 9,
		AcidBottle     = 10,
		Bomb           = 11,
		GasCanister    = 12,
		FileBox        = 13,
		SeveredHead    = 14,
		MAX            = 15
	};

	/**
	 * Enum OPP.EHidespotCategory
	 */
	enum class EHidespotCategory : uint8_t
	{
		StandingLeft     = 0,
		StandingRight    = 1,
		LyingDownLeft    = 2,
		LyingDownRight   = 3,
		Crouched         = 4,
		InsideHorizontal = 5,
		InsideVertical   = 6,
		CarTrunk         = 7,
		MAX              = 8
	};

	/**
	 * Enum OPP.EPlayerMessageType
	 */
	enum class EPlayerMessageType : uint8_t
	{
		None                           = 0,
		Tutorial                       = 1,
		Custom                         = 2,
		ObjectInteraction              = 3,
		ObjectCannotStopInteraction    = 4,
		HelpPlayerUp                   = 5,
		HelpingPlayerUp                = 6,
		BeingHelpedUp                  = 7,
		RevivePlayer                   = 8,
		RevivingPlayer                 = 9,
		PyschosisPlayer                = 10,
		BeingRevived                   = 11,
		OfferHighJump                  = 12,
		OfferingHighJump               = 13,
		AcceptHighJump                 = 14,
		OfferLongJump                  = 15,
		OfferingLongJump               = 16,
		AcceptLongJump                 = 17,
		WakeUp                         = 18,
		SavePlayerFromGroundAndPound   = 19,
		SavePlayerFromFatality         = 20,
		Shove                          = 21,
		GroundAndPoundNoItemCounter    = 22,
		GroundAndPoundThrowableCounter = 23,
		DoorBashInteract               = 24,
		DoorBashBlocked                = 25,
		DropLargeObject                = 26,
		AimingThrowable                = 27,
		CoopTrapHelper                 = 28,
		CoopTrapVictimFreeYourself     = 29,
		CoopTrapHelperFreeFriend       = 30,
		OfferingTrade                  = 31,
		AcceptTrade                    = 32,
		MessageZone                    = 33,
		InvestigationDone              = 34,
		ItemHoldAction                 = 35,
		CantOperateDoorWithLargeObject = 36,
		EnterSpectator                 = 37,
		Respawn                        = 38,
		UseSelfRevive                  = 39,
		MAX                            = 40
	};

	/**
	 * Enum OPP.ERandomStateSetup
	 */
	enum class ERandomStateSetup : uint8_t
	{
		Random        = 0,
		StateA        = 1,
		StateB        = 2,
		NotApplicable = 3,
		MAX           = 4
	};

	/**
	 * Enum OPP.ERBFoleyType
	 */
	enum class ERBFoleyType : uint8_t
	{
		PantShort  = 0,
		PantLong   = 1,
		ClothShort = 2,
		ClothLong  = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.ESwitchPanelPartVariant
	 */
	enum class ESwitchPanelPartVariant : uint8_t
	{
		NoRotation = 0,
		Rotated90  = 1,
		Rotated180 = 2,
		Rotated270 = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.EDestructibleMaterialType
	 */
	enum class EDestructibleMaterialType : uint8_t
	{
		Wood       = 0,
		WoodenDoor = 1,
		Concrete   = 2,
		Mannequin  = 3,
		MAX        = 4
	};

	/**
	 * Enum OPP.EFallingReason
	 */
	enum class EFallingReason : uint8_t
	{
		Normal      = 0,
		Death       = 1,
		Spawning    = 2,
		WalkJumping = 3,
		RunJumping  = 4,
		JumpOver    = 5,
		Combat      = 6,
		MAX         = 7
	};

	/**
	 * Enum OPP.ENPCHitReactionType
	 */
	enum class ENPCHitReactionType : uint8_t
	{
		None      = 0,
		Flinch    = 1,
		Twitch    = 2,
		Stagger   = 3,
		Stumble   = 4,
		Knockdown = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EGrabType
	 */
	enum class EGrabType : uint8_t
	{
		None             = 0,
		Stand            = 1,
		Crouch           = 2,
		Above            = 3,
		HidingStandLeft  = 4,
		HidingStandRight = 5,
		HidingProneLeft  = 6,
		HidingProneRight = 7,
		HidingCrouch     = 8,
		HidingContainer  = 9,
		HidingBarrel     = 10,
		MAX              = 11
	};

	/**
	 * Enum OPP.ETraversalNotifyType
	 */
	enum class ETraversalNotifyType : uint8_t
	{
		IntroDone       = 0,
		OutroDone       = 1,
		ConditionalFall = 2,
		ConditionalLand = 3,
		Repulsion       = 4,
		MAX             = 5
	};

	/**
	 * Enum OPP.EWeaponType
	 */
	enum class EWeaponType : uint8_t
	{
		None       = 0,
		Fist       = 1,
		Slash      = 2,
		Chop       = 3,
		LightBlunt = 4,
		HeavyBlunt = 5,
		MAX        = 6
	};

	/**
	 * Enum OPP.EItemAnimType
	 */
	enum class EItemAnimType : uint8_t
	{
		EmptyHanded      = 0,
		OneHanded        = 1,
		TwoHanded        = 2,
		Syringe          = 3,
		PainKiller       = 4,
		Bandage          = 5,
		Potion           = 6,
		RadioTransmitter = 7,
		Gun              = 8,
		AsthmaPump       = 9,
		MAX              = 10
	};

	/**
	 * Enum OPP.ERollingGateVariatorType
	 */
	enum class ERollingGateVariatorType : uint8_t
	{
		None                        = 0,
		TimedOpenedClosed           = 1,
		ClosesAfterNumberOfPassages = 2,
		ToasterDetector             = 3,
		Unlockable                  = 4,
		SoundDetector               = 5,
		StageRandomMax              = 6,
		RailObjectiveUnlockable     = 7,
		MAX                         = 8
	};

	/**
	 * Enum OPP.ERoomAssociationType
	 */
	enum class ERoomAssociationType : uint8_t
	{
		Default                  = 0,
		Container                = 1,
		Hidespot                 = 2,
		JumpScare                = 3,
		MonsterCloset            = 4,
		Investigation            = 5,
		TrapGroup                = 6,
		Trap                     = 7,
		PuzzleRoomNumberDecal    = 8,
		PuzzleRoomLights         = 9,
		PuzzleRoomLargePickupBox = 10,
		PuzzleRoomBlacklight     = 11,
		Max                      = 12
	};

	/**
	 * Enum OPP.EStageVariatorType
	 */
	enum class EStageVariatorType : uint8_t
	{
		SecondaryObjective = 0,
		Obstacle           = 1,
		RollingGate        = 2,
		SAS                = 3,
		MAX                = 4
	};

	/**
	 * Enum OPP.ETriggeringStimulusType
	 */
	enum class ETriggeringStimulusType : uint8_t
	{
		MinorAudio        = 0,
		NormalAudio       = 1,
		ObviousAudio      = 2,
		HighPriorityAudio = 3,
		Invalid           = 4,
		MAX               = 5
	};

	/**
	 * Enum OPP.ERetirementReason
	 */
	enum class ERetirementReason : uint8_t
	{
		None                        = 0,
		RequestedByAIDirector       = 1,
		ExplicitCommand             = 2,
		TeleportFlee                = 3,
		ReturnToLeashVolume         = 4,
		SpecialistActivityCompleted = 5,
		HitByProjectile             = 6,
		HitByActiveSkill            = 7,
		MAX                         = 8
	};

	/**
	 * Enum OPP.ENPCFlavor
	 */
	enum class ENPCFlavor : uint8_t
	{
		Normal = 0,
		Light  = 1,
		Heavy  = 2,
		MAX    = 3
	};

	/**
	 * Enum OPP.EDesiredRelativePressure
	 */
	enum class EDesiredRelativePressure : uint8_t
	{
		NoChange       = 0,
		LowerPressure  = 1,
		HigherPressure = 2,
		MAX            = 3
	};

	/**
	 * Enum OPP.EPlayerRushingStatus
	 */
	enum class EPlayerRushingStatus : uint8_t
	{
		None     = 0,
		Prudent  = 1,
		Variable = 2,
		Rushing  = 3,
		MAX      = 4
	};

	/**
	 * Enum OPP.EPlayerProximityStatus
	 */
	enum class EPlayerProximityStatus : uint8_t
	{
		None        = 0,
		Isolated    = 1,
		Variable    = 2,
		Accompanied = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.ESpecialBotInitialBehavior
	 */
	enum class ESpecialBotInitialBehavior : uint8_t
	{
		Default                            = 0,
		RandomPatrol                       = 1,
		FullyRandomInvestigation           = 2,
		MethodicalInvestigation            = 3,
		ForceChaseTargetPlayerUntilContact = 4,
		InvestigateAtTargetPlayerLocation  = 5,
		MAX                                = 6
	};

	/**
	 * Enum OPP.EConditionalRetirementEvent
	 */
	enum class EConditionalRetirementEvent : uint8_t
	{
		KilledAPlayer                 = 0,
		KnockedDownAPlayer            = 1,
		GiveUpChase                   = 2,
		UnsuccesfulAwareInvestigation = 3,
		FinishedPatrolWaypoint        = 4,
		PusherGasAttack               = 5,
		IdleFallback                  = 6,
		MAX                           = 7
	};

	/**
	 * Enum OPP.ENPCInvestigationAnimCategory
	 */
	enum class ENPCInvestigationAnimCategory : uint8_t
	{
		None   = 0,
		Narrow = 1,
		Wide   = 2,
		Broad  = 3,
		Ground = 4,
		MAX    = 5
	};

	/**
	 * Enum OPP.ENPCInvestigationAnimIntensity
	 */
	enum class ENPCInvestigationAnimIntensity : uint8_t
	{
		None        = 0,
		Unaware     = 1,
		Suspicious  = 2,
		Investigate = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.EStartleSpeed
	 */
	enum class EStartleSpeed : uint8_t
	{
		Fast = 0,
		Slow = 1,
		MAX  = 2
	};

	/**
	 * Enum OPP.EStartleType
	 */
	enum class EStartleType : uint8_t
	{
		Alerted = 0,
		Relaxed = 1,
		MAX     = 2
	};

	/**
	 * Enum OPP.EMonsterClosetSelectionMode
	 */
	enum class EMonsterClosetSelectionMode : uint8_t
	{
		Random        = 0,
		Quiet         = 1,
		CloseToTarget = 2,
		Explicit      = 3,
		MAX           = 4
	};

	/**
	 * Enum OPP.EBotDoorPassBehavior
	 */
	enum class EBotDoorPassBehavior : uint8_t
	{
		NeverClose            = 0,
		NeverUnlockNeverClose = 1,
		RandomCloseNeverLock  = 2,
		AlwaysCloseUnlocked   = 3,
		AlwaysCloseLocked     = 4,
		AlwaysCloseRandomLock = 5,
		Random                = 6,
		MAX                   = 7
	};

	/**
	 * Enum OPP.EGuardAttackType
	 */
	enum class EGuardAttackType : uint8_t
	{
		Attack         = 0,
		Push           = 1,
		GroundAndPound = 2,
		Kill           = 3,
		MAX            = 4
	};

	/**
	 * Enum OPP.EChaseMoveDestination
	 */
	enum class EChaseMoveDestination : uint8_t
	{
		Invalid        = 0,
		Player         = 1,
		AnticipatedPos = 2,
		LastKnownPos   = 3,
		HidingSpot     = 4,
		SnipingSpot    = 5,
		Pushable       = 6,
		ForcedLocation = 7,
		PathBlocking   = 8,
		MAX            = 9
	};

	/**
	 * Enum OPP.EChaseSpecialState
	 */
	enum class EChaseSpecialState : uint8_t
	{
		None         = 0,
		PathBlocking = 1,
		Yielding     = 2,
		GivingUp     = 3,
		MAX          = 4
	};

	/**
	 * Enum OPP.ENPCType
	 */
	enum class ENPCType : uint8_t
	{
		Grunt           = 0,
		Ambient         = 1,
		BigGrunt        = 2,
		PitcherSniper   = 3,
		SleeperScreamer = 4,
		Pouncer         = 5,
		Pusher          = 6,
		GroundPitcher   = 7,
		Berserker       = 8,
		Imposter        = 9,
		NightHunter     = 10,
		Spectre         = 11,
		ThrowableTarget = 12,
		StalkerTarget   = 13,
		Gooseberry      = 14,
		Coyle           = 15,
		Scientist       = 16,
		Guard           = 17,
		MAX             = 18
	};

	/**
	 * Enum OPP.ENPCAnimStyle
	 */
	enum class ENPCAnimStyle : uint8_t
	{
		Relaxed    = 0,
		Suspicious = 1,
		Alerted    = 2,
		Chase      = 3,
		Combat     = 4,
		MAX        = 5
	};

	/**
	 * Enum OPP.EAlertedInvestigationPhase
	 */
	enum class EAlertedInvestigationPhase : uint8_t
	{
		InvestigatingStimulusSource       = 0,
		InvestigatingAround               = 1,
		Idle                              = 2,
		WaitingForValidInvestigationState = 3,
		Startle                           = 4,
		Invalid                           = 5,
		MAX                               = 6
	};

	/**
	 * Enum OPP.EStimulusType
	 */
	enum class EStimulusType : uint8_t
	{
		None                    = 0,
		PartialPlayerVisibility = 1,
		FullPlayerVisibility    = 2,
		LostChasedPlayer        = 3,
		MinorAudio              = 4,
		NormalAudio             = 5,
		ObviousAudio            = 6,
		HighPriorityEvent       = 7,
		SurfaceMovement         = 8,
		MAX                     = 9
	};

	/**
	 * Enum OPP.EAILogVerbosity
	 */
	enum class EAILogVerbosity : uint8_t
	{
		Verbose = 0,
		Log     = 1,
		Event   = 2,
		Error   = 3,
		MAX     = 4
	};

	/**
	 * Enum OPP.EVOEventResultType
	 */
	enum class EVOEventResultType : uint8_t
	{
		Undefined                = 0,
		Played                   = 1,
		NoMapping                = 2,
		TooSoonAfterAnyVO        = 3,
		TooSoonAfterSimilarVO    = 4,
		TooSoonAfterSameVOOnPawn = 5,
		TooSoonAfterSameVOGlobal = 6,
		SkippedSelfInterrupt     = 7,
		SkippedLowerPrio         = 8,
		ConditionsFailed         = 9,
		Queued                   = 10,
		NoLine                   = 11,
		MAX                      = 12
	};

	/**
	 * Enum OPP.EVOContext
	 */
	enum class EVOContext : uint8_t
	{
		Undefined                           = 0,
		ReactToSoundDisturbanceAware        = 1,
		ReactToSoundDisturbanceUnaware      = 2,
		ReactToVisualDisturbanceAware       = 3,
		ReactToVisualDisturbanceUnaware     = 4,
		ReactToMajorDisturbance             = 5,
		ReactToSensingDisturbance           = 6,
		InvestigateDisturbanceAware         = 7,
		InvestigateDisturbanceUnaware       = 8,
		InvestigatePoint                    = 9,
		ReachedInvestigationPoint           = 10,
		FinishedInvestigatingPoint          = 11,
		InvestigationGiveUp                 = 12,
		SuspiciousGiveUp                    = 13,
		AlertedGiveUp                       = 14,
		SawPlayerEnterHidingSpot            = 15,
		FoundHiddenPlayer                   = 16,
		SearchForOtherPlayersAfterKnockDown = 17,
		PullOutFromHidespot                 = 18,
		ReactToPlayerBeforeChase            = 19,
		ReactToMultiplePlayersBeforeChase   = 20,
		StartChaseAfterReaction             = 21,
		StartChaseNoReaction                = 22,
		StartMoveToIncapacitatedPlayer      = 23,
		ChaseReachedLeashLimit              = 24,
		ChaseStartGiveUp                    = 25,
		ChaseGiveUp                         = 26,
		ChaseStartYielding                  = 27,
		ChaseYield                          = 28,
		ChaseChangedTarget                  = 29,
		ChaseTaunt                          = 30,
		LostSightOfPlayer                   = 31,
		StartMoveToLostSight                = 32,
		ReachedLastKnownPosition            = 33,
		UnawarePlayerProximity              = 34,
		ChasePlayerProximity                = 35,
		ReachedPatrolWaypoint               = 36,
		PassUnderDynamicObstacle            = 37,
		EnterDarknessZone                   = 38,
		EnterLightZone                      = 39,
		AttackPlayer                        = 40,
		GuardingAttack                      = 41,
		PushPlayer                          = 42,
		ImposterCharge                      = 43,
		PusherAttack                        = 44,
		PairedAttackConnecting              = 45,
		KnockedDownPlayer                   = 46,
		StartFinishingIncapacitatedPlayer   = 47,
		FinishIncapacitatedPlayer           = 48,
		DealtDamage                         = 49,
		KilledPlayer                        = 50,
		AttackOtherNPC                      = 51,
		AttackedByOtherNPC                  = 52,
		ThrowProjectile                     = 53,
		ThrownProjectileHit                 = 54,
		ThrownProjectileMiss                = 55,
		TakeDamage                          = 56,
		HitByProjectile                     = 57,
		PairedAttackInterrupted             = 58,
		HitReaction_Low                     = 59,
		HitReaction_Med                     = 60,
		HitReaction_High                    = 61,
		DelayedHitReaction                  = 62,
		ShovedByPlayerAware                 = 63,
		ShovedByPlayerUnaware               = 64,
		ShovePunish                         = 65,
		KnockedOut                          = 66,
		GetUpFromKnockOut                   = 67,
		Killed                              = 68,
		ProvocationWarning                  = 69,
		ProvokedByPlayer                    = 70,
		ReactToImperativeDisturbance        = 71,
		TurnOffImperativeDisturbance        = 72,
		SignalTackle                        = 73,
		FailedTackle                        = 74,
		SuccessfulTackle                    = 75,
		FinishedGroundAndPound              = 76,
		PlayerAvoidanceStart                = 77,
		PlayerAvoidanceRepath               = 78,
		AcknowledgePlayer                   = 79,
		AcknowledgeOtherNPC                 = 80,
		ZoneDefenseBecomeAlert              = 81,
		ZoneDefenseBlown                    = 82,
		ReactToCloseGrenade                 = 83,
		AffectedByStunGrenade               = 84,
		RecoverFromStunGrenade              = 85,
		AffectedByBlindPaint                = 86,
		AffectedByHealSlowdown              = 87,
		SleeperDisturbed                    = 88,
		SleeperScream                       = 89,
		StartRetirement                     = 90,
		Scripted                            = 91,
		AnimNotify                          = 92,
		PawnState                           = 93,
		Announcer                           = 94,
		ContinuousVO                        = 95,
		ExitedMonsterCloset                 = 96,
		ReactToSoundDisturbance             = 97,
		ReactToVisualDisturbance            = 98,
		InvestigateDisturbance              = 99,
		FirstAttack                         = 100,
		AttackAny                           = 101,
		PassiveRandom                       = 102,
		InvestigateRandomAware              = 103,
		InvestigateRandomUnaware            = 104,
		InvestigateRandom                   = 105,
		ChaseRandom                         = 106,
		MAX                                 = 107
	};

	/**
	 * Enum OPP.EInvestigationPointSelectionMode
	 */
	enum class EInvestigationPointSelectionMode : uint8_t
	{
		SelectionCriteria = 0,
		FullyRandom       = 1,
		StrictOrder       = 2,
		MAX               = 3
	};

	/**
	 * Enum OPP.EInvestigationPointIrrelevanceReason
	 */
	enum class EInvestigationPointIrrelevanceReason : uint8_t
	{
		NoWeight                 = 0,
		TooClose                 = 1,
		FilteredOut              = 2,
		FindingPlayerNotAllowed  = 3,
		NotFindingPlayerThisTime = 4,
		ObstacleInPath           = 5,
		TooCloseToOtherBot       = 6,
		TooCloseToChasedPlayer   = 7,
		ProhibitedByKismet       = 8,
		DynamicStateIrrelevant   = 9,
		MAX                      = 10
	};

	/**
	 * Enum OPP.EInvestigationPointType
	 */
	enum class EInvestigationPointType : uint8_t
	{
		None               = 0,
		SimpleLocation     = 1,
		InvestigationPoint = 2,
		Door               = 3,
		HideSpot           = 4,
		SimpleInteract     = 5,
		LedgeDrop          = 6,
		MAX                = 7
	};

	/**
	 * Enum OPP.EPatrolWaypointSelectionMode
	 */
	enum class EPatrolWaypointSelectionMode : uint8_t
	{
		Random           = 0,
		PingPong         = 1,
		IncrementingLoop = 2,
		IncrementingOnce = 3,
		DecrementingLoop = 4,
		DecrementingOnce = 5,
		MAX              = 6
	};

	/**
	 * Enum OPP.EAICommandType
	 */
	enum class EAICommandType : uint8_t
	{
		None                = 0,
		GotoLocation        = 1,
		GotoWaypoint        = 2,
		Patrol              = 3,
		Investigate         = 4,
		PlayLoopingIdle     = 5,
		PlaySingleShotAnim  = 6,
		ScriptedAnimStation = 7,
		GotoAmbientMarker   = 8,
		MAX                 = 9
	};

	/**
	 * Enum OPP.EAISpectreVisualType
	 */
	enum class EAISpectreVisualType : uint8_t
	{
		None        = 0,
		CloseRange  = 1,
		MediumRange = 2,
		FarRange    = 3,
		MAX         = 4
	};

	/**
	 * Enum OPP.EAIActivity
	 */
	enum class EAIActivity : uint8_t
	{
		None                  = 0,
		Idle                  = 1,
		Ambient               = 2,
		Patrol                = 3,
		Retirement            = 4,
		Sneak                 = 5,
		SeekingHidingSpot     = 6,
		Investigate           = 7,
		InvestigateAggressive = 8,
		Chase                 = 9,
		PlayerAvoidance       = 10,
		ImperativeAction      = 11,
		Ambush                = 12,
		MonsterCloset         = 13,
		GroundAndPound        = 14,
		Knockout              = 15,
		Scripted              = 16,
		Dead                  = 17,
		MAX                   = 18
	};

	/**
	 * Enum OPP.EAIAwarenessStateType
	 */
	enum class EAIAwarenessStateType : uint8_t
	{
		None       = 0,
		Scripted   = 1,
		Ambient    = 2,
		Unaware    = 3,
		Suspicious = 4,
		Chase      = 5,
		Alerted    = 6,
		Sneak      = 7,
		MAX        = 8
	};

	/**
	 * Enum OPP.EQuestItemType
	 */
	enum class EQuestItemType : uint8_t
	{
		TypeA = 0,
		TypeB = 1,
		TypeC = 2,
		TypeD = 3,
		MAX   = 4
	};

	/**
	 * Enum OPP.EPipeJunctionType
	 */
	enum class EPipeJunctionType : uint8_t
	{
		Cross               = 0,
		DoubleCurveLeft     = 1,
		DoubleCurveRight    = 2,
		OverUnderVertical   = 3,
		OverUnderHorizontal = 4,
		Straight            = 5,
		StraightBroken      = 6,
		MAX                 = 7
	};

	/**
	 * Enum OPP.ERBVoiceChatMode
	 */
	enum class ERBVoiceChatMode : uint8_t
	{
		Party = 0,
		Game  = 1,
		MAX   = 2
	};

	/**
	 * Enum OPP.ERBVoiceChatEngineState
	 */
	enum class ERBVoiceChatEngineState : uint8_t
	{
		Disconnected = 0,
		Connecting   = 1,
		Connected    = 2,
		MAX          = 3
	};

	/**
	 * Enum OPP.EContinuousSoundNPCState
	 */
	enum class EContinuousSoundNPCState : uint8_t
	{
		None                 = 0,
		Hiding               = 1,
		Unaware              = 2,
		Suspicious           = 3,
		Alerted              = 4,
		Chase                = 5,
		AffectedByBrainAmp   = 6,
		Normal               = 7,
		AffectedBySpineAmp   = 8,
		AffectedByRagePaint  = 9,
		AffectedByBlindPaint = 10,
		MAX                  = 11
	};

	/**
	 * Enum OPP.RBWaypointVersion
	 */
	enum class ERBWaypointVersion : uint8_t
	{
		RBWaypointVersion_Initial               = 0,
		RBWaypointVersion_MinMaxWaitTime        = 1,
		RBWaypointVersion_Current               = 2,
		RBWaypointVersion_RBWaypointVersion_MAX = 3
	};

	/**
	 * Enum OPP.ETrapBatteryState
	 */
	enum class ETrapBatteryState : uint8_t
	{
		Armed     = 0,
		Disarmed  = 1,
		Destroyed = 2,
		MAX       = 3
	};

	/**
	 * Enum OPP.EWorldPopulatingStepClient
	 */
	enum class EWorldPopulatingStepClient : uint8_t
	{
		None                                    = 0,
		WorldPopulate_Start                     = 1,
		PopulateInterfaceObjectWorldFullyLoaded = 2,
		BuildRegisterNavmeshActorList           = 3,
		RegisterNavmeshActors                   = 4,
		InitializeRoomData                      = 5,
		BuildRoomCaches                         = 6,
		LinkRoomConnectors                      = 7,
		AssociateRooms                          = 8,
		BuildRoomGroupsCaches                   = 9,
		ApplyRandomizedSharedStates             = 10,
		PopulateInterfaceObjectPostPopulate     = 11,
		RemovingNavigationBuildingLock          = 12,
		BuildingRoomPaths                       = 13,
		PopulateLedgeMarkers                    = 14,
		WorldPopulate_Done                      = 15,
		MAX                                     = 16
	};

	/**
	 * Enum OPP.EWorldPopulatingStep
	 */
	enum class EWorldPopulatingStep : uint8_t
	{
		None                                    = 0,
		WorldPopulate_Start                     = 1,
		PopulateInterfaceObjectWorldFullyLoaded = 2,
		BuildRegisterNavmeshActorList           = 3,
		RegisterNavmeshActors                   = 4,
		PopulateGameMode                        = 5,
		InitializeRoomData                      = 6,
		BuildRoomCaches                         = 7,
		LinkRoomConnectors                      = 8,
		AssociateRooms                          = 9,
		BuildRoomGroupsCaches                   = 10,
		PrepareMissionRoomGroups                = 11,
		PopulateMissionRoomGroups               = 12,
		PopulateObjectiveManager                = 13,
		SortRandomizedArrays                    = 14,
		PrepareRandomManager                    = 15,
		PrepareObjectiveCoordinators            = 16,
		Editor_ValidateBlockable                = 17,
		RandomizeObjectiveRails                 = 18,
		RandomizeObjectiveClosedRooms           = 19,
		PopulatePuzzleRooms                     = 20,
		PopulateRewardRooms                     = 21,
		RandomizeManagers_Gates                 = 22,
		RandomizeBlockableStage                 = 23,
		RandomizeBlockableRoomGroups            = 24,
		RandomizeDoorsStage                     = 25,
		RandomizeDoorsRoomGroups                = 26,
		RandomizeRollingGateVariator            = 27,
		PopulateRollingGateVariator             = 28,
		PopulateObjectiveCoordinators           = 29,
		SetupObjectiveCoordinators              = 30,
		RandomizeHidespotsStage                 = 31,
		RandomizeHidespotsRoomGroups            = 32,
		ComputeObjectiveProximity               = 33,
		RandomizeManagers_Traps                 = 34,
		ComputeObstacleCount                    = 35,
		TrapGroups                              = 36,
		ObstacleVariatorTraps                   = 37,
		PopulateRandomManagers                  = 38,
		ApplyRandomizedSharedStates             = 39,
		PopulateActors                          = 40,
		PopulateItemManagers                    = 41,
		PopulateInterfaceObjectPostPopulate     = 42,
		RemovingNavigationBuildingLock          = 43,
		BuildingRoomPaths                       = 44,
		WaitingForNavMeshBuild                  = 45,
		PopulateLedgeMarkers                    = 46,
		PopulateWaypointGroups                  = 47,
		PopulateAISpawnersInit                  = 48,
		PopulatingAIDirector                    = 49,
		PopulateAISpawnersSpawn                 = 50,
		PopulateWaitForServerConfiguration      = 51,
		WorldPopulate_Done                      = 52,
		MAX                                     = 53
	};

	/**
	 * Enum OPP.EWWWPlaybackSpeed
	 */
	enum class EWWWPlaybackSpeed : uint8_t
	{
		Speed1x  = 0,
		Speed2x  = 1,
		Speed4x  = 2,
		Speed8x  = 3,
		Speed16x = 4,
		Speed32x = 5,
		MAX      = 6
	};

	/**
	 * Enum OPP.EWWWTrackDrawLength
	 */
	enum class EWWWTrackDrawLength : uint8_t
	{
		Unlimited = 0,
		Last5s    = 1,
		Last10s   = 2,
		Last30s   = 3,
		LastMin   = 4,
		Last5Min  = 5,
		MAX       = 6
	};

	/**
	 * Enum OPP.EWWWTrackDrawSelection
	 */
	enum class EWWWTrackDrawSelection : uint8_t
	{
		All     = 0,
		Focused = 1,
		None    = 2,
		MAX     = 3
	};

	/**
	 * Enum OPP.ERelationshipErrorCodes
	 */
	enum class ERelationshipErrorCodes : uint8_t
	{
		MissingBaseServiceUrl               = 0,
		MaximumFriendsReached               = 1,
		MaximumSentFriendRequestsReached    = 2,
		MaximumPendingFriendRequestsReached = 3,
		FriendRequestNotFound               = 4,
		InvalidRelationship                 = 5,
		MAX                                 = 6
	};

	/**
	 * Enum OPP.ERTAErrorCodes
	 */
	enum class ERTAErrorCodes : uint8_t
	{
		MissingBaseServiceUrl        = 0,
		ConnectionFailed             = 1,
		ConnectionClosed             = 2,
		InvalidIncomingMessageFormat = 3,
		MAX                          = 4
	};

	/**
	 * Enum OPP.EStatsErrorCodes
	 */
	enum class EStatsErrorCodes : uint8_t
	{
		Dummy = 0,
		MAX   = 1
	};

	/**
	 * Enum OPP.EStoreErrorCodes
	 */
	enum class EStoreErrorCodes : uint8_t
	{
		OrderFailed_Generic                            = 0,
		OrderFailed_NotApprovedByUser                  = 1,
		OrderFailed_UserNotLoggedIn                    = 2,
		OrderFailed_AccountUnavailable                 = 3,
		OrderFailed_TransactionDenied                  = 4,
		OrderFailed_TransactionDeniedRestrictedCountry = 5,
		OrderFailed_InsufficientFunds                  = 6,
		OrderFailed_FinalizationTimeLimitExceeded      = 7,
		OrderFailed_AccountDisabled                    = 8,
		OrderFailed_AccountNotAllowedPurchase          = 9,
		OrderFailed_TransactionDeniedFraudDetection    = 10,
		OrderFailed_NoCachedPaymentMethod              = 11,
		OrderFailed_MAX                                = 12
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct OPP.RBActiveSkillSettings
	 * Size -> 0x002C
	 */
	struct FRBActiveSkillSettings
	{
	public:
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRFU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CooldownBetweenCharges;                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerRadius;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerDelay;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeDuration;                                          // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Effect;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectRadius;                                            // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration;                                          // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrimeAssetEffectDurationMultiplier;                      // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration2;                                         // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistractionRange;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBGameplayAttribute
	 * Size -> 0x0030
	 */
	struct FRBGameplayAttribute
	{
	public:
		EGameplayAttributeType                                     AttributeType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CZT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Owner;                                                   // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VR90[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAttributeValueChanged;                                 // 0x0018(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEQD[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ItemDefinition
	 * Size -> 0x0048
	 */
	struct FItemDefinition
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupportsHolster;                                        // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupportsInstantUse;                                     // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHFH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          Icon;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0018(0x0018) Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		bool                                                       bOverrideCategoryColor;                                  // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D186[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        InventoryItemColor;                                      // 0x0034(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJY3[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ConfigurableValue
	 * Size -> 0x0038
	 */
	struct FConfigurableValue
	{
	public:
		EConfigValueType                                           ValueType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XSSG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ValueName;                                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DefaultName;                                             // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCustomName;                                             // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ71[0xF];                                   // 0x0029(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InternalFloatByDifficulty
	 * Size -> 0x0020
	 */
	struct FInternalFloatByDifficulty
	{
	public:
		bool                                                       bOverrideEasyLocalValue;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D59E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EasyLocalValue;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideNormalLocalValue;                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SIR0[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NormalLocalValue;                                        // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHardLocalValue;                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_34MA[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HardLocalValue;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideInsaneLocalValue;                               // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EV3F[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InsaneLocalValue;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ConfigurableFloat
	 * Size -> 0x0090 (FullSize[0x00C8] - InheritedSize[0x0038])
	 */
	struct FConfigurableFloat : public FConfigurableValue
	{
	public:
		struct FInternalFloatByDifficulty                          DefaultValues;                                           // 0x0038(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor1P;                                     // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHY8[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalFloatByDifficulty                          Values1P;                                                // 0x005C(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor2P;                                     // 0x007C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRFT[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalFloatByDifficulty                          Values2P;                                                // 0x0080(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor3P;                                     // 0x00A0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BLXE[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalFloatByDifficulty                          Values3P;                                                // 0x00A4(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1TTT[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBConfigurableGameplayAttributeModifier
	 * Size -> 0x00D0
	 */
	struct FRBConfigurableGameplayAttributeModifier
	{
	public:
		EGameplayAttributeType                                     AttributeType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameplayAttributeModifierType                             ModifierType;                                            // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTEU[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  Value;                                                   // 0x0008(0x00C8) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HUDTutorialTextData
	 * Size -> 0x0040
	 */
	struct FHUDTutorialTextData
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Text;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FName                                                TutorialId;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDisplayCount;                                         // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepeatDelay;                                             // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TutorialTextData
	 * Size -> 0x0020
	 */
	struct FTutorialTextData
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      showDuration;                                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8PPF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledProperty
	 * Size -> 0x0068
	 */
	struct FScheduledProperty
	{
	public:
		unsigned char                                              UnknownData_ZPP1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PropertyName;                                            // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Owner;                                                   // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ActorOwner;                                              // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              NetRoleOverrideActor;                                    // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SetValue_ServerTimestamp;                                // 0x0028(0x0004) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EE6A[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnValueChanged;                                          // 0x0030(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, RepSkip, NativeAccessSpecifierPublic
		float                                                      DesiredTargetTime;                                       // 0x0040(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScheduled;                                              // 0x0044(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48AN[0x13];                                  // 0x0045(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      ApplyDesiredStateCallback;                               // 0x0058(0x0010) ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	enum class EForceFeedbackDataType : uint8_t
	{
		None = 0,
		GenericLow = 1,
		GenericMedium = 2,
		GenericHigh = 3,
		LoopingLow = 4,
		LoopingMedium = 5,
		LoopingHigh = 6,
		Death = 7,
		Revive = 8,
		MAX = 9
	};


	/**
	* 
	* 
	 * ScriptStruct OPP.ScheduledUObject
	 * Size -> 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
	 */
	struct FScheduledUObject : public FScheduledProperty
	{
	public:
		class UObject*                                             InitialValue;                                            // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             LastValue;                                               // 0x0070(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             CurrentValue;                                            // 0x0078(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             DesiredValue;                                            // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScheduledInt
	 * Size -> 0x0010 (FullSize[0x0078] - InheritedSize[0x0068])
	 */
	struct FScheduledInt : public FScheduledProperty
	{
	public:
		int32_t                                                    InitialValue;                                            // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastValue;                                               // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentValue;                                            // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DesiredValue;                                            // 0x0074(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScheduledBool
	 * Size -> 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
	 */
	struct FScheduledBool : public FScheduledProperty
	{
	public:
		bool                                                       InitialValue;                                            // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LastValue;                                               // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CurrentValue;                                            // 0x006A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DesiredValue;                                            // 0x006B(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QBN6[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledTransform
	 * Size -> 0x00C8 (FullSize[0x0130] - InheritedSize[0x0068])
	 */
	struct FScheduledTransform : public FScheduledProperty
	{
	public:
		unsigned char                                              UnknownData_NVWC[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          InitialValue;                                            // 0x0070(0x0030) Edit, BlueprintVisible, IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          LastValue;                                               // 0x00A0(0x0030) BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          CurrentValue;                                            // 0x00D0(0x0030) BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          DesiredValue;                                            // 0x0100(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigationPoint
	 * Size -> 0x00C0
	 */
	struct FInvestigationPoint
	{
	public:
		unsigned char                                              UnknownData_MAOX[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBInvestigationPoint*                               InvPoint;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBDoor*                                             door;                                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBHidespotComponent*                                hidespotComponent;                                       // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBInteractible*                                     interactible;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBLedgeMarker*                                      LedgeMarker;                                             // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PH6A[0x88];                                  // 0x0038(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCInvestigationSelectedAnimData
	 * Size -> 0x0030
	 */
	struct FNPCInvestigationSelectedAnimData
	{
	public:
		bool                                                       bValid;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSRQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       AnimSequence;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCInvestigationAnimIntensity                             Intensity;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCInvestigationAnimCategory                              Category;                                                // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnterInMotion;                                          // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9WA[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EntrySpeed;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EntryPhase;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGreatFit;                                               // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L42R[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBNPCInterestPointComponent*>                InterestPoints;                                          // 0x0020(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigationInterestPointData
	 * Size -> 0x0028
	 */
	struct FInvestigationInterestPointData
	{
	public:
		class URBNPCInterestPointComponent*                        InterestPoint;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ExplicitInterestLocation;                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearLineCheck;                                         // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4QTN[0xB];                                   // 0x0019(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LookDuration;                                            // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIStimulusInfo
	 * Size -> 0x0020
	 */
	struct FAIStimulusInfo
	{
	public:
		float                                                      OccuranceTimestamp;                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              SourceActor;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStimulusType                                              Type;                                                    // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UJY8[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StimulusStrengthMultiplier;                              // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InternalIntByDifficulty
	 * Size -> 0x0020
	 */
	struct FInternalIntByDifficulty
	{
	public:
		bool                                                       bOverrideEasyLocalValue;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDP3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EasyLocalValue;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideNormalLocalValue;                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E1HQ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NormalLocalValue;                                        // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHardLocalValue;                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQN4[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HardLocalValue;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideInsaneLocalValue;                               // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CQI[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    InsaneLocalValue;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ConfigurableInt
	 * Size -> 0x0090 (FullSize[0x00C8] - InheritedSize[0x0038])
	 */
	struct FConfigurableInt : public FConfigurableValue
	{
	public:
		struct FInternalIntByDifficulty                            DefaultValues;                                           // 0x0038(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor1P;                                     // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KEE[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalIntByDifficulty                            Values1P;                                                // 0x005C(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor2P;                                     // 0x007C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVCA[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalIntByDifficulty                            Values2P;                                                // 0x0080(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor3P;                                     // 0x00A0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CXA[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInternalIntByDifficulty                            Values3P;                                                // 0x00A4(0x0020) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOIC[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIGlobalConfig
	 * Size -> 0x0048
	 */
	struct FAIGlobalConfig
	{
	public:
		ENPCFlavor                                                 NPCFlavor;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPCFlavor : 1;                                 // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnorePlayers;                                          // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bIgnorePlayers : 1;                            // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartNeutral;                                           // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bStartNeutral : 1;                             // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChasePlayers;                                           // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bChasePlayers : 1;                             // 0x0007(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysChase;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysChase : 1;                              // 0x0009(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysIntense;                                          // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysIntense : 1;                            // 0x000B(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayLookAts;                                         // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanPlayLookAts : 1;                           // 0x000D(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanTakeDamage;                                          // 0x000E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanTakeDamage : 1;                            // 0x000F(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseHealth;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BaseHealth : 1;                                // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCWeapon                                                 Weapon;                                                  // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Weapon : 1;                                    // 0x0016(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRelevantForMusic;                                       // 0x0017(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRelevantForMusic : 1;                         // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WK61[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxClimbHeight;                                          // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxClimbHeight : 1;                            // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWG6[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDropHeight;                                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDropHeight : 1;                             // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBotDoorPassBehavior                                       DoorPassBehavior;                                        // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorPassBehavior : 1;                          // 0x002A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y9LZ[0x1];                                   // 0x002B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorCloseProbability;                                    // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorCloseProbability : 1;                      // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2B9L[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorLockProbability;                                     // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorLockProbability : 1;                       // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YKDV[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PairedMoveInterruptUnawareTime;                          // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PairedMoveInterruptUnawareTime : 1;            // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        InterruptionReactionType;                                // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InterruptionReactionType : 1;                  // 0x0042(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        UpgradedInterruptionReactionType;                        // 0x0043(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UpgradedInterruptionReactionType : 1;          // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        FallingReactionType;                                     // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FallingReactionType : 1;                       // 0x0046(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9TAV[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIClosetConfig
	 * Size -> 0x0030
	 */
	struct FAIClosetConfig
	{
	public:
		float                                                      DistanceScoreContribution;                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceScoreContribution : 1;                 // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMXX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistanceForPoints;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistanceForPoints : 1;                      // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GHYT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistanceForPathedPoints;                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistanceForPathedPoints : 1;                // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0X2D[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RandomScoreContribution;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RandomScoreContribution : 1;                   // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EMQA[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UntriedDestinationScoreContribution;                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UntriedDestinationScoreContribution : 1;       // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RIB1[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnLocationScoreContribution;                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpawnLocationScoreContribution : 1;            // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OYMW[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISpeedConfig
	 * Size -> 0x0130
	 */
	struct FAISpeedConfig
	{
	public:
		float                                                      BaseSpeed;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BaseSpeed : 1;                                 // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7B2P[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChaseSpeed;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChaseSpeed : 1;                                // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NLLF[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvestigationSpeedAware;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InvestigationSpeedAware : 1;                   // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INHY[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvestigationSpeedUnaware;                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InvestigationSpeedUnaware : 1;                 // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9S6[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RetirementSpeed;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RetirementSpeed : 1;                           // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4JBK[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerAvoidanceSpeed;                                    // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerAvoidanceSpeed : 1;                      // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0YM[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BehaviorAccelRate;                                       // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BehaviorAccelRate : 1;                         // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3K98[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BehaviorDecelRate;                                       // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BehaviorDecelRate : 1;                         // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstantAccel;                                           // 0x003D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bInstantAccel : 1;                             // 0x003E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstantDecel;                                           // 0x003F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bInstantDecel : 1;                             // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J2DK[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DarknessFactor;                                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DarknessFactor : 1;                            // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableSprint;                                           // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableSprint : 1;                             // 0x004A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4LUY[0x1];                                   // 0x004B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSprintSpeedGain;                                      // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxSprintSpeedGain : 1;                        // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O2QT[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintAcceleration;                                      // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SprintAcceleration : 1;                        // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AEGH[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintDeceleration;                                      // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SprintDeceleration : 1;                        // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HER[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinSpeedForSprint;                                       // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinSpeedForSprint : 1;                         // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQDK[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinStraightDistForSprintAccel;                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinStraightDistForSprintAccel : 1;             // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6DO[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinStraightDistForSprintKeep;                            // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinStraightDistForSprintKeep : 1;              // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableNPCStamina;                                       // 0x0079(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableNPCStamina : 1;                         // 0x007A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK8Y[0x1];                                   // 0x007B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxStaminaSpeedLoss;                                     // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxStaminaSpeedLoss : 1;                       // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBWM[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StaminaLevelForStartSlowdown;                            // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StaminaLevelForStartSlowdown : 1;              // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95XC[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinSpeedForStaminaConsumption;                           // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinSpeedForStaminaConsumption : 1;             // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S2Q6[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSpeedForStaminaConsumption;                           // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxSpeedForStaminaConsumption : 1;             // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T92D[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxStaminaComsumptionRate;                               // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxStaminaComsumptionRate : 1;                 // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3A6[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StaminaRecoveryRate;                                     // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StaminaRecoveryRate : 1;                       // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SUB9[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FaceOffAdjustSpeedBoost;                                 // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FaceOffAdjustSpeedBoost : 1;                   // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V19Z[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackMercyFactor;                                       // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackMercyFactor : 1;                         // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VY29[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackMercyDuration;                                     // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackMercyDuration : 1;                       // 0x00C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V4OS[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GroupChasingRestartSpeedDuration;                        // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GroupChasingRestartSpeedDuration : 1;          // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2ODA[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChaseNoVisibilityFactor;                                 // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChaseNoVisibilityFactor : 1;                   // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_19XW[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SightlessChaseSlowdownDuration;                          // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SightlessChaseSlowdownDuration : 1;            // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoVisibleRubberBandingSlowDown;                         // 0x00D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bNoVisibleRubberBandingSlowDown : 1;           // 0x00DA(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRubberBandingRequiresPlayerRun;                         // 0x00DB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRubberBandingRequiresPlayerRun : 1;           // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNO0[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RubberBandingDelay;                                      // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RubberBandingDelay : 1;                        // 0x00E4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XZX[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RubberBandingMinDist;                                    // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RubberBandingMinDist : 1;                      // 0x00EC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AL05[0x3];                                   // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RubberBandingMaxDist;                                    // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RubberBandingMaxDist : 1;                      // 0x00F4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JOV[0x3];                                   // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RubberBandingFactorMinDist;                              // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RubberBandingFactorMinDist : 1;                // 0x00FC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0V2K[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RubberBandingFactorMaxDist;                              // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RubberBandingFactorMaxDist : 1;                // 0x0104(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoAdjustmentForSlopes;                                  // 0x0105(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bNoAdjustmentForSlopes : 1;                    // 0x0106(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQMH[0x1];                                   // 0x0107(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSpeedPenaltyForUpSlope;                               // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxSpeedPenaltyForUpSlope : 1;                 // 0x010C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKCI[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSpeedGainForDownSlope;                                // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxSpeedGainForDownSlope : 1;                  // 0x0114(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3SR[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedCapForLowHealth;                                    // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedCapForLowHealth : 1;                      // 0x011C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IAQ5[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LowHealthForSpeedCap;                                    // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LowHealthForSpeedCap : 1;                      // 0x0124(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZ3E[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HealthForSpeedCapStart;                                  // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HealthForSpeedCapStart : 1;                    // 0x012C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30IA[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAdvancedSpeedConfig
	 * Size -> 0x00A0
	 */
	struct FAIAdvancedSpeedConfig
	{
	public:
		float                                                      AccelCoeffNormal;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AccelCoeffNormal : 1;                          // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1DD[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AccelCoeffAfterTurn;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AccelCoeffAfterTurn : 1;                       // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZITR[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DecelCoeffNormal;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DecelCoeffNormal : 1;                          // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A1TC[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DecelCoeffSharpTurn;                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DecelCoeffSharpTurn : 1;                       // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WQZ2[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DecelCoeffApproachDest;                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DecelCoeffApproachDest : 1;                    // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DYS[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestApprochTargetDecel;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DestApprochTargetDecel : 1;                    // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ATV[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SmallRotationSpeed;                                      // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SmallRotationSpeed : 1;                        // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HX5R[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HighRotationSpeed;                                       // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighRotationSpeed : 1;                         // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DEJ[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedForRotationSlowDown;                                // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedForRotationSlowDown : 1;                  // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25H9[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedForMaxRotationSlowDown;                             // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedForMaxRotationSlowDown : 1;               // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMZX[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SlowedDownSpeedForRotation;                              // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowedDownSpeedForRotation : 1;                // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LLKM[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TurnApproachDistForStartSlowDown;                        // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TurnApproachDistForStartSlowDown : 1;          // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ER6O[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TurnApproachDistForMaxSlowDown;                          // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TurnApproachDistForMaxSlowDown : 1;            // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RG41[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinAnticipatedAngleForSlowDown;                          // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinAnticipatedAngleForSlowDown : 1;            // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZ5H[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAnticipatedAngleForSlowDown;                          // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAnticipatedAngleForSlowDown : 1;            // 0x0074(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDBT[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPlayerAwaySpeedForSlowdown;                           // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPlayerAwaySpeedForSlowdown : 1;             // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NO3G[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDistToObstacle;                                       // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistToObstacle : 1;                         // 0x0084(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_653O[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistToObstacle;                                       // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistToObstacle : 1;                         // 0x008C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9VS[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SlowDownAfterTurnDuration;                               // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowDownAfterTurnDuration : 1;                 // 0x0094(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFYE[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxReasonableGroundSpeed;                                // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxReasonableGroundSpeed : 1;                  // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZO16[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIHealthConfig
	 * Size -> 0x0024
	 */
	struct FAIHealthConfig
	{
	public:
		bool                                                       bRegenHealth;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRegenHealth : 1;                              // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMC2[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RegenDelay;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RegenDelay : 1;                                // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_94OO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RegenRate;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RegenRate : 1;                                 // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeKnockedOut;                                        // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanBeKnockedOut : 1;                          // 0x0012(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5U6S[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinKnockoutDuration;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinKnockoutDuration : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6066[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxKnockoutDuration;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxKnockoutDuration : 1;                       // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C51F[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIVisionCone
	 * Size -> 0x0030
	 */
	struct FAIVisionCone
	{
	public:
		float                                                      MaxForwardDistance;                                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxForwardDistance : 1;                        // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05OQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPeripheralDistance;                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPeripheralDistance : 1;                     // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83JN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InnerHorzAngle;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InnerHorzAngle : 1;                            // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZUR[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OuterHorzAngle;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OuterHorzAngle : 1;                            // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRCO[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InnerVertAngle;                                          // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InnerVertAngle : 1;                            // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJ3P[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OuterVertAngle;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OuterVertAngle : 1;                            // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5QUK[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIVisionConfig
	 * Size -> 0x0158
	 */
	struct FAIVisionConfig
	{
	public:
		bool                                                       bCanSeePlayers;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanSeePlayers : 1;                            // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysSeePlayers;                                       // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysSeePlayers : 1;                         // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDarkness;                                         // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bIgnoreDarkness : 1;                           // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5A6[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIVisionCone                                       FullVisibilityCone;                                      // 0x0008(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullVisibilityCone : 1;                        // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OI65[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIVisionCone                                       PartialVisibilityCone;                                   // 0x003C(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PartialVisibilityCone : 1;                     // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GP2F[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIVisionCone                                       DarknessFullVisibilityCone;                              // 0x0070(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DarknessFullVisibilityCone : 1;                // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RCRA[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIVisionCone                                       DarknessPartialVisibilityCone;                           // 0x00A4(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DarknessPartialVisibilityCone : 1;             // 0x00D4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SH9U[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseDistance_FullVisibility;                            // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseDistance_FullVisibility : 1;              // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1HB[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseDistance_PartialVisibility;                         // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseDistance_PartialVisibility : 1;           // 0x00E4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_736Y[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SeeOnlyEyesVisionMultiplier;                             // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SeeOnlyEyesVisionMultiplier : 1;               // 0x00EC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOJU[0x3];                                   // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SeeOnlyTorsoVisionMultiplier;                            // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SeeOnlyTorsoVisionMultiplier : 1;              // 0x00F4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BRCT[0x3];                                   // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DarknessVisionMultiplier;                                // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DarknessVisionMultiplier : 1;                  // 0x00FC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75ZB[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseRangeVisionMultiplier;                              // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseRangeVisionMultiplier : 1;                // 0x0104(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTVH[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StandingStillVisionMultiplier;                           // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StandingStillVisionMultiplier : 1;             // 0x010C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFMR[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WalkingVisionMultiplier;                                 // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_WalkingVisionMultiplier : 1;                   // 0x0114(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRZO[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RunningVisionMultiplier;                                 // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RunningVisionMultiplier : 1;                   // 0x011C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6WF[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrouchingVisionMultiplier;                               // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchingVisionMultiplier : 1;                 // 0x0124(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AITL[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HidespotPeekingVisionMultiplier;                         // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HidespotPeekingVisionMultiplier : 1;           // 0x012C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TS7Y[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HidespotHiddenVisionMultiplier;                          // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HidespotHiddenVisionMultiplier : 1;            // 0x0134(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F77C[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumVisionMultiplierToBeSeen;                         // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumVisionMultiplierToBeSeen : 1;           // 0x013C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZVR[0x3];                                   // 0x013D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FullVisToPartialVisVisionMultiplierThreshold;            // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullVisToPartialVisVisionMultiplierThreshold : 1; // 0x0144(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IOVE[0x3];                                   // 0x0145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BotVisionCheckSlicing;                                   // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BotVisionCheckSlicing : 1;                     // 0x014C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVUE[0x3];                                   // 0x014D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalNumberOfClearChecks;                                // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TotalNumberOfClearChecks : 1;                  // 0x0154(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1K2Y[0x3];                                   // 0x0155(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIHearingConfig
	 * Size -> 0x001C
	 */
	struct FAIHearingConfig
	{
	public:
		bool                                                       bCanHearPlayers;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanHearPlayers : 1;                           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQJT[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FullHearingDistance;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullHearingDistance : 1;                       // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1E12[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxHearingDistance;                                      // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxHearingDistance : 1;                        // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HAEK[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AudioPerceptionScaling;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AudioPerceptionScaling : 1;                    // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8AVB[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIStimulusValueConfig
	 * Size -> 0x0040
	 */
	struct FAIStimulusValueConfig
	{
	public:
		float                                                      PartialPlayerVisibilityValue;                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PartialPlayerVisibilityValue : 1;              // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S618[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FullPlayerVisibilityValue;                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullPlayerVisibilityValue : 1;                 // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2G41[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LostChasedPlayerValue;                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LostChasedPlayerValue : 1;                     // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8M24[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinorAudioValue;                                         // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinorAudioValue : 1;                           // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FGOG[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NormalAudioValue;                                        // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NormalAudioValue : 1;                          // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HG7[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObviousAudioValue;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ObviousAudioValue : 1;                         // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IFR0[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SurfaceMovementValue;                                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SurfaceMovementValue : 1;                      // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GKF3[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HighPriorityEventValue;                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighPriorityEventValue : 1;                    // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P47I[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIStimulusOptionConfig
	 * Size -> 0x0010
	 */
	struct FAIStimulusOptionConfig
	{
	public:
		bool                                                       bPartialPlayerVisibility;                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bPartialPlayerVisibility : 1;                  // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFullPlayerVisibility;                                   // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bFullPlayerVisibility : 1;                     // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLostChasedPlayer;                                       // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bLostChasedPlayer : 1;                         // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinorAudio;                                             // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bMinorAudio : 1;                               // 0x0007(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNormalAudio;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bNormalAudio : 1;                              // 0x0009(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bObviousAudio;                                           // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bObviousAudio : 1;                             // 0x000B(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSurfaceMovement;                                        // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bSurfaceMovement : 1;                          // 0x000D(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHighPriorityEvent;                                      // 0x000E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bHighPriorityEvent : 1;                        // 0x000F(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIAwarenessConfig
	 * Size -> 0x01C0
	 */
	struct FAIAwarenessConfig
	{
	public:
		bool                                                       bAllowAwarenessLoop;                                     // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAllowAwarenessLoop : 1;                       // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConvertHighPriorityToObvious;                           // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bConvertHighPriorityToObvious : 1;             // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanEnterSuspicious;                                     // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanEnterSuspicious : 1;                       // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysAlerted;                                          // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysAlerted : 1;                            // 0x0007(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlertedFromUnawareStartingMeter;                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AlertedFromUnawareStartingMeter : 1;           // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XC8V[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumStimulusStrenght;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumStimulusStrenght : 1;                   // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_31BN[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayBetweenInvestigationTargetSwitch;                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayBetweenInvestigationTargetSwitch : 1;  // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSRL[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDistanceForInvestigationTargetSwitch;                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistanceForInvestigationTargetSwitch : 1;   // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJYY[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinAngleForInvestigationTargetSwitch;                    // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinAngleForInvestigationTargetSwitch : 1;      // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2P1C[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIStimulusValueConfig                              UnawareStimulusMeterValues;                              // 0x0030(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnawareStimulusMeterValues : 1;                // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NZH[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBeforeUnawareMeterDecay;                             // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBeforeUnawareMeterDecay : 1;               // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWAY[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnawareMeterDecaySpeed;                                  // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnawareMeterDecaySpeed : 1;                    // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JIO[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBeforeExitingChaseAfterLostSight;                    // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBeforeExitingChaseAfterLostSight : 1;      // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OYKO[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBeforeExitingChaseAfterInvalidExecute;               // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBeforeExitingChaseAfterInvalidExecute : 1; // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIStimulusOptionConfig                             DirectToAlertedFromUnawareStimulus;                      // 0x0091(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DirectToAlertedFromUnawareStimulus : 1;        // 0x00A1(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3NAR[0x2];                                   // 0x00A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIStimulusValueConfig                              SuspiciousStimulusMeterValues;                           // 0x00A4(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SuspiciousStimulusMeterValues : 1;             // 0x00E4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RZBP[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSuspiciousInvestigationTime;                          // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxSuspiciousInvestigationTime : 1;            // 0x00EC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIStimulusOptionConfig                             StimulusForProgressiveAlertedMeter;                      // 0x00ED(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StimulusForProgressiveAlertedMeter : 1;        // 0x00FD(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UX3C[0x2];                                   // 0x00FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIStimulusValueConfig                              ProgressiveAlertedMeterValues;                           // 0x0100(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProgressiveAlertedMeterValues : 1;             // 0x0140(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ZTM[0x3];                                   // 0x0141(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAlertedSourceInvestigationTime;                       // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAlertedSourceInvestigationTime : 1;         // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_602P[0x3];                                   // 0x0149(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIStimulusValueConfig                              StimuliPriorities;                                       // 0x014C(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StimuliPriorities : 1;                         // 0x018C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XO0M[0x3];                                   // 0x018D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxQueuedStimulusTime;                                   // 0x0190(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxQueuedStimulusTime : 1;                     // 0x0194(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakChaseForHighPriorityEvent;                         // 0x0195(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bBreakChaseForHighPriorityEvent : 1;           // 0x0196(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XT0U[0x1];                                   // 0x0197(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceToBreakChaseForHighPriorityEvent;                // 0x0198(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceToBreakChaseForHighPriorityEvent : 1;  // 0x019C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9Q8[0x3];                                   // 0x019D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceFromHighPriorityToResumeChase;                   // 0x01A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceFromHighPriorityToResumeChase : 1;     // 0x01A4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWJF[0x3];                                   // 0x01A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxLastSeenDistFromHidingSpotForGuess;                   // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxLastSeenDistFromHidingSpotForGuess : 1;     // 0x01AC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PUOM[0x3];                                   // 0x01AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxHidingSpotDistFromOtherSpotForGuess;                  // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxHidingSpotDistFromOtherSpotForGuess : 1;    // 0x01B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q97Y[0x3];                                   // 0x01B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BerserkerMaxDistanceForInstantAttack;                    // 0x01B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BerserkerMaxDistanceForInstantAttack : 1;      // 0x01BC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RLFT[0x3];                                   // 0x01BD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AITargettingConfig
	 * Size -> 0x0074
	 */
	struct FAITargettingConfig
	{
	public:
		bool                                                       bAlwaysTargetLastAttacker;                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysTargetLastAttacker : 1;                 // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSwitchTargetAfterAttack;                                // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bSwitchTargetAfterAttack : 1;                  // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeForSwitchTargetAfterAttack;                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeForSwitchTargetAfterAttack : 1;            // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DJJX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeForSwitchTargetAfterBeingAttacked;                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeForSwitchTargetAfterBeingAttacked : 1;     // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DA54[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeForLastSwitchTargetBias;                             // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeForLastSwitchTargetBias : 1;               // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6KG[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastSwitchTargetBias;                                    // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LastSwitchTargetBias : 1;                      // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3SI[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BackDistanceMultiplier;                                  // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BackDistanceMultiplier : 1;                    // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC3O[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HeightDistanceMultiplier;                                // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HeightDistanceMultiplier : 1;                  // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9703[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerIncapacitatedBias;                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerIncapacitatedBias : 1;                   // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AL24[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerOutsideLeashBias;                                  // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerOutsideLeashBias : 1;                    // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8KM[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerNotVisibleBias;                                    // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerNotVisibleBias : 1;                      // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2A8I[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerIsHighPriorityBias;                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerIsHighPriorityBias : 1;                  // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UE3L[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CurrentTargetBias;                                       // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CurrentTargetBias : 1;                         // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQJ9[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SwitchAfterAttackBias;                                   // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SwitchAfterAttackBias : 1;                     // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PXI[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AlreadyTargettedPenalty;                                 // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AlreadyTargettedPenalty : 1;                   // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_65DM[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GracePeriodAfterKnockdown;                               // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GracePeriodAfterKnockdown : 1;                 // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanForceExecutePlayers;                                 // 0x0071(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanForceExecutePlayers : 1;                   // 0x0072(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJ4Z[0x1];                                   // 0x0073(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StartleAnimConfig
	 * Size -> 0x0004
	 */
	struct FStartleAnimConfig
	{
	public:
		EStartleType                                               StartleType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StartleType : 1;                               // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStartleSpeed                                              StartleSpeed;                                            // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StartleSpeed : 1;                              // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DisturbanceConfig
	 * Size -> 0x001C
	 */
	struct FDisturbanceConfig
	{
	public:
		bool                                                       bCanBeDisturbed;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanBeDisturbed : 1;                           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayStartle;                                         // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanPlayStartle : 1;                           // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistanceForReaction;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistanceForReaction : 1;                    // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactToImperativeDisturbances;                          // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bReactToImperativeDisturbances : 1;            // 0x000A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FStartleAnimConfig                                  AmbientStartleConfig;                                    // 0x000B(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FStartleAnimConfig                                  SuspiciousStartleConfig;                                 // 0x000F(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FStartleAnimConfig                                  AlertedStartleConfig;                                    // 0x0013(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FStartleAnimConfig                                  AlertedFromUnawareStartleConfig;                         // 0x0017(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71AQ[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAttackConfig
	 * Size -> 0x0140
	 */
	struct FAIAttackConfig
	{
	public:
		bool                                                       bCanAttack;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanAttack : 1;                                // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCancelActiveAttack;                                  // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanCancelActiveAttack : 1;                    // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAttackStance;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bUseAttackStance : 1;                          // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M172[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackRange;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackRange : 1;                               // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2B7Y[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAttackAngle;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAttackAngle : 1;                            // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNSH[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxFatalityRange;                                        // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxFatalityRange : 1;                          // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6UX4[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinAttackRangeShotgun;                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinAttackRangeShotgun : 1;                     // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ENA[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAttackRangeShotgun;                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAttackRangeShotgun : 1;                     // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6NRK[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAdjustForwardDistance;                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAdjustForwardDistance : 1;                  // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HKQ5[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxCorrectionLinearVelocity;                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxCorrectionLinearVelocity : 1;               // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ELGZ[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxCorrectionAngularVelocity;                            // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxCorrectionAngularVelocity : 1;              // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoFail;                                                 // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bNoFail : 1;                                   // 0x0046(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyUsePushAttack;                                      // 0x0047(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bOnlyUsePushAttack : 1;                        // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableBlockingAttacks;                                  // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableBlockingAttacks : 1;                    // 0x004A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XL5[0x1];                                   // 0x004B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockingAttackMaxRange;                                  // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BlockingAttackMaxRange : 1;                    // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D6JA[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockingAttackMinPlayerSpeed;                            // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BlockingAttackMinPlayerSpeed : 1;              // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WF84[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockingAttackTrackingTargetOffset;                      // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BlockingAttackTrackingTargetOffset : 1;        // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOUW[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayForSuccessiveBlockingAttack;                     // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayForSuccessiveBlockingAttack : 1;       // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVBR[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackStandardDamage;                                    // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackStandardDamage : 1;                      // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FWMB[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackProjectileDamage;                                  // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackProjectileDamage : 1;                    // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D3AW[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackGrabAndThrowDamage;                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackGrabAndThrowDamage : 1;                  // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNUE[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageMultiplierVeryLow;                                 // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamageMultiplierVeryLow : 1;                   // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z7GW[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageMultiplierLow;                                     // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamageMultiplierLow : 1;                       // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLMT[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageMultiplierMedium;                                  // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamageMultiplierMedium : 1;                    // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J2YI[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageMultiplierHigh;                                    // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamageMultiplierHigh : 1;                      // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XDG[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageMultiplierVeryHigh;                                // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamageMultiplierVeryHigh : 1;                  // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVF5[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SuccessiveAttackerDamageMultiplier;                      // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SuccessiveAttackerDamageMultiplier : 1;        // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCEZ[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SuccessiveAttackerReducedDamageDuration;                 // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SuccessiveAttackerReducedDamageDuration : 1;   // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9VM[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackNormalKnockbackPower;                              // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackNormalKnockbackPower : 1;                // 0x00C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3PM[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayForAttack;                                       // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayForAttack : 1;                         // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0IW[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDelayForAttack;                                       // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDelayForAttack : 1;                         // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNMU[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayBetweenTransitAttack;                               // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DelayBetweenTransitAttack : 1;                 // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INOX[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayForAttackFailed;                                 // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayForAttackFailed : 1;                   // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZ3P[0x3];                                   // 0x00E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDelayForAttackFailed;                                 // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDelayForAttackFailed : 1;                   // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SW8J[0x3];                                   // 0x00E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayForAttackAfterTargetBackUp;                         // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DelayForAttackAfterTargetBackUp : 1;           // 0x00F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XGH[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OutOfRangeAttackProbability;                             // 0x00F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OutOfRangeAttackProbability : 1;               // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H98Q[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackRangeExtension;                                    // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AttackRangeExtension : 1;                      // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceGrab;                                              // 0x0101(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bForceGrab : 1;                                // 0x0102(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcePairedAttack;                                      // 0x0103(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bForcePairedAttack : 1;                        // 0x0104(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XMT[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GrabAttackProbabilityOnCrouchedTarget;                   // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GrabAttackProbabilityOnCrouchedTarget : 1;     // 0x010C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5F4I[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FreeStandingGrabRange;                                   // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FreeStandingGrabRange : 1;                     // 0x0114(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6XWB[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GrabAboveMinHeight;                                      // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GrabAboveMinHeight : 1;                        // 0x011C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0T0Z[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GrabAboveMaxHeight;                                      // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GrabAboveMaxHeight : 1;                        // 0x0124(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4UY9[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LungeMinDist;                                            // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LungeMinDist : 1;                              // 0x012C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6C4P[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LungeMaxDist;                                            // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LungeMaxDist : 1;                              // 0x0134(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TAY0[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LungeCooldownTime;                                       // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LungeCooldownTime : 1;                         // 0x013C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DX0R[0x3];                                   // 0x013D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIChaseConfig
	 * Size -> 0x00D0
	 */
	struct FAIChaseConfig
	{
	public:
		bool                                                       bReactBeforeChase;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bReactBeforeChase : 1;                         // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q2DG[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForcedAwaressOnStimuliDistance;                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ForcedAwaressOnStimuliDistance : 1;            // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnticipatePlayerPosition;                               // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAnticipatePlayerPosition : 1;                 // 0x000A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanGiveUpChase;                                         // 0x000B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanGiveUpChase : 1;                           // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC1N[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumChaseDurationBeforeGiveUp;                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumChaseDurationBeforeGiveUp : 1;          // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5Y9I[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GiveUpDistance;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GiveUpDistance : 1;                            // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0U9[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GiveUpSlowDownDuration;                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GiveUpSlowDownDuration : 1;                    // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5AHA[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GiveUpWaitDuration;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GiveUpWaitDuration : 1;                        // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MAOL[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestinationDistanceBuffer;                               // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DestinationDistanceBuffer : 1;                 // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1QXM[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestinationDistanceBufferKnockedDown;                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DestinationDistanceBufferKnockedDown : 1;      // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWEF[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestinationDistanceBufferFatality;                       // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DestinationDistanceBufferFatality : 1;         // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LX2[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestinationDistanceBufferHidden;                         // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DestinationDistanceBufferHidden : 1;           // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanYieldChase;                                          // 0x004D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanYieldChase : 1;                            // 0x004E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6CG[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldCloseDistanceThreshold;                             // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldCloseDistanceThreshold : 1;               // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GDL[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NoYieldDistAhead;                                        // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NoYieldDistAhead : 1;                          // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bYieldToHigherGrade;                                     // 0x005D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bYieldToHigherGrade : 1;                       // 0x005E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZS1[0x1];                                   // 0x005F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldDistClose;                                          // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldDistClose : 1;                            // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UP34[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldDistFar;                                            // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldDistFar : 1;                              // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59II[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldSlowDownDuration;                                   // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldSlowDownDuration : 1;                     // 0x0074(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUZ7[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldFastSlowDownDuration;                               // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldFastSlowDownDuration : 1;                 // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMBM[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YieldWaitDuration;                                       // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_YieldWaitDuration : 1;                         // 0x0084(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1E5H[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxNoSightYieldDuration;                                 // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxNoSightYieldDuration : 1;                   // 0x008C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPathBlock;                                           // 0x008D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanPathBlock : 1;                             // 0x008E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DJ25[0x1];                                   // 0x008F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathBlockForwardTargetOffset;                            // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PathBlockForwardTargetOffset : 1;              // 0x0094(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRN2[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathBlockMinIdleWaitTime;                                // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PathBlockMinIdleWaitTime : 1;                  // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9BK[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathBlockMaxIdleWaitTime;                                // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PathBlockMaxIdleWaitTime : 1;                  // 0x00A4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PathBlockRequiresAnyActiveChase;                         // 0x00A5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PathBlockRequiresAnyActiveChase : 1;           // 0x00A6(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZGM[0x1];                                   // 0x00A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForcedChaseNoContactTimeout;                             // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ForcedChaseNoContactTimeout : 1;               // 0x00AC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1XW[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AbandonAfterUnreacheableDuration;                        // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AbandonAfterUnreacheableDuration : 1;          // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FGG[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaximumTargetDistToStartChase;                           // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumTargetDistToStartChase : 1;             // 0x00BC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPerformTaunt;                                        // 0x00BD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanPerformTaunt : 1;                          // 0x00BE(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTJN[0x1];                                   // 0x00BF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBeforeFirstTaunt;                                    // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBeforeFirstTaunt : 1;                      // 0x00C4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZWAS[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBetweenTaunts;                                       // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBetweenTaunts : 1;                         // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P5OL[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AICombatConfig
	 * Size -> 0x0006
	 */
	struct FAICombatConfig
	{
	public:
		bool                                                       bCanBeAffectedByActiveSkillsAMP;                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanBeAffectedByActiveSkillsAMP : 1;           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        ActiveSkillsReplacementReactionAMP;                      // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActiveSkillsReplacementReactionAMP : 1;        // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeAffectedByActiveSkillsPaint;                       // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanBeAffectedByActiveSkillsPaint : 1;         // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIInvestigationBiasConfig
	 * Size -> 0x0150
	 */
	struct FAIInvestigationBiasConfig
	{
	public:
		float                                                      MaxPointSearchDistance;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPointSearchDistance : 1;                    // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3WVT[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPathDistance;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPathDistance : 1;                           // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseClosestPlayerIfNoRelativePlayer;                     // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bUseClosestPlayerIfNoRelativePlayer : 1;       // 0x000E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0H49[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PointWeightContrib;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PointWeightContrib : 1;                        // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGDD[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PointWeight;                                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PointWeight : 1;                               // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O222[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoGeneratedWeight;                                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AutoGeneratedWeight : 1;                       // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFXQ[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HidingSpotWeight;                                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HidingSpotWeight : 1;                          // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8H24[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SimpleInteractWeight;                                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SimpleInteractWeight : 1;                      // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03L4[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LedgeDropWeight;                                         // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LedgeDropWeight : 1;                           // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KAPL[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorOpenedByPlayerWeight;                                // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorOpenedByPlayerWeight : 1;                  // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4YJ[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorDefaultWeight;                                       // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorDefaultWeight : 1;                         // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CGX[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorListeningProbability;                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorListeningProbability : 1;                  // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDHM[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorPeekProbability;                                     // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorPeekProbability : 1;                       // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3RSW[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GenericInvestigationClearanceDistance;                   // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericInvestigationClearanceDistance : 1;     // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KQET[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FindHiddenPlayerProbability;                             // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FindHiddenPlayerProbability : 1;               // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TV2H[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasVisitedContrib;                                      // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasVisitedContrib : 1;                        // 0x0074(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFS6[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasTowardsPlayerContrib;                                // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasTowardsPlayerContrib : 1;                  // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQYC[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasTowardsLastPlayerDirectionContrib;                   // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasTowardsLastPlayerDirectionContrib : 1;     // 0x0084(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LLD7[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasGeneralInvestigationDirectionContrib;                // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasGeneralInvestigationDirectionContrib : 1;  // 0x008C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M57[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasNearPlayerDistance;                                  // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasNearPlayerDistance : 1;                    // 0x0094(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOJ1[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasNearPlayerContrib;                                   // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasNearPlayerContrib : 1;                     // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QFGZ[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasNearPlayerContrib1stPoint;                           // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasNearPlayerContrib1stPoint : 1;             // 0x00A4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYN3[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasIdealDistanceFromBot;                                // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasIdealDistanceFromBot : 1;                  // 0x00AC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KNCB[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasIdealDistanceFromBotContrib;                         // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasIdealDistanceFromBotContrib : 1;           // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K40J[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasDifferentHeightThreshold;                            // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasDifferentHeightThreshold : 1;              // 0x00BC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FSZU[0x3];                                   // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasDifferentHeightToBotContrib;                         // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasDifferentHeightToBotContrib : 1;           // 0x00C4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJ48[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasDifferentHeightToPlayerContrib;                      // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasDifferentHeightToPlayerContrib : 1;        // 0x00CC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB3I[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasInSearchDistanceContrib;                             // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasInSearchDistanceContrib : 1;               // 0x00D4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6CGI[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasCloseToOtherBotDistance;                             // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasCloseToOtherBotDistance : 1;               // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZH3M[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasCloseToOtherBotContrib;                              // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasCloseToOtherBotContrib : 1;                // 0x00E4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W3A3[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasAwayFromIncapacitatedDistance;                       // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasAwayFromIncapacitatedDistance : 1;         // 0x00EC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MGDT[0x3];                                   // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasAwayFromIncapacitatedContrib;                        // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasAwayFromIncapacitatedContrib : 1;          // 0x00F4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DG78[0x3];                                   // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasInvestigatedRecentlyDelay;                           // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasInvestigatedRecentlyDelay : 1;             // 0x00FC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5B8T[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasInvestigatedRecentlyContrib;                         // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasInvestigatedRecentlyContrib : 1;           // 0x0104(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4G9R[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasCloseToLastPointsDistance;                           // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasCloseToLastPointsDistance : 1;             // 0x010C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3V8N[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasCloseToLastPointsContrib;                            // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasCloseToLastPointsContrib : 1;              // 0x0114(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7O54[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasRecentlyVisitedOtherRoomContrib;                     // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasRecentlyVisitedOtherRoomContrib : 1;       // 0x011C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBGZ[0x3];                                   // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasCurrentRoomHidingSpotContrib;                        // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasCurrentRoomHidingSpotContrib : 1;          // 0x0124(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQPZ[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasOtherRoomHidingSpotContrib;                          // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasOtherRoomHidingSpotContrib : 1;            // 0x012C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLNT[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasUnvisitedOtherRoomInvPointContrib;                   // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasUnvisitedOtherRoomInvPointContrib : 1;     // 0x0134(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JNP[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasAdjacentToNPCVisitedRoom;                            // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasAdjacentToNPCVisitedRoom : 1;              // 0x013C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTHI[0x3];                                   // 0x013D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasRandomContrib;                                       // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasRandomContrib : 1;                         // 0x0144(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UDZ[0x3];                                   // 0x0145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BiasOutsidePathingDistContrib;                           // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BiasOutsidePathingDistContrib : 1;             // 0x014C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SC5[0x3];                                   // 0x014D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIInvestigationConfig
	 * Size -> 0x0300
	 */
	struct FAIInvestigationConfig
	{
	public:
		bool                                                       bCanInvestigate;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanInvestigate : 1;                           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvestigateOnIdleFallback;                              // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bInvestigateOnIdleFallback : 1;                // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseInvPointAnimsForSimpleInv;                           // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bUseInvPointAnimsForSimpleInv : 1;             // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanInvestigatePlayersInHidespots;                       // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanInvestigatePlayersInHidespots : 1;         // 0x0007(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumPointsToCheckAlertedAfterLKP;                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NumPointsToCheckAlertedAfterLKP : 1;           // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFindInvestigationPointForSourceInvestigation;           // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bFindInvestigationPointForSourceInvestigation : 1; // 0x000E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayGiveUpAnim;                                         // 0x000F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bPlayGiveUpAnim : 1;                           // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UHIG[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinPointsToGenerate;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPointsToGenerate : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LETN[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GeneratedPointsMinRadius;                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GeneratedPointsMinRadius : 1;                  // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q39Y[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GeneratedPointsMaxRadius;                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GeneratedPointsMaxRadius : 1;                  // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCountAsOtherBotForInvestigationBias;                    // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCountAsOtherBotForInvestigationBias : 1;      // 0x002A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBreakHidespot;                                       // 0x002B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanBreakHidespot : 1;                         // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DLQW[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BreakHidespotProbability;                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BreakHidespotProbability : 1;                  // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDLL[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDistFromChasedPlayer;                                 // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistFromChasedPlayer : 1;                   // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopIfPlayerOutOfRange;                                 // 0x003D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bStopIfPlayerOutOfRange : 1;                   // 0x003E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCapsuleOrientationForVisionCones;                    // 0x003F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bUseCapsuleOrientationForVisionCones : 1;      // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceDynamicLook;                                       // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bForceDynamicLook : 1;                         // 0x0042(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFavorBakedAnim;                                         // 0x0043(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bFavorBakedAnim : 1;                           // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXLO[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxPointsForFinishIncapacitated;                         // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPointsForFinishIncapacitated : 1;           // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKWM[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SimplePointDestinationBuffer;                            // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SimplePointDestinationBuffer : 1;              // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TGJ[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SouceInvestigationPointSearchDistance;                   // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SouceInvestigationPointSearchDistance : 1;     // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2H2[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIInvestigationBiasConfig                          AlertedInvestigationBiasConfig;                          // 0x0060(0x0150) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIInvestigationBiasConfig                          PatrolInvestigationBiasConfig;                           // 0x01B0(0x0150) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIPatrolConfig
	 * Size -> 0x00B8
	 */
	struct FAIPatrolConfig
	{
	public:
		float                                                      RandomContrib;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RandomContrib : 1;                             // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CNO[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdealDistanceFromBot;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_IdealDistanceFromBot : 1;                      // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KTRZ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdealDistanceFromBotContrib;                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_IdealDistanceFromBotContrib : 1;               // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_87MT[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseToOtherBotDistance;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseToOtherBotDistance : 1;                   // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_048W[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseToOtherBotContrib;                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseToOtherBotContrib : 1;                    // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBC7[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NearPlayerDistance;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NearPlayerDistance : 1;                        // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QG3W[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NearPlayerContrib;                                       // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NearPlayerContrib : 1;                         // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLLK[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NearChasedPlayerDistance;                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NearChasedPlayerDistance : 1;                  // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D9RB[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NearChasedPlayerContrib;                                 // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NearChasedPlayerContrib : 1;                   // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CGS[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnvisitedContrib;                                        // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnvisitedContrib : 1;                          // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EG4O[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RecentlyVisitedDelay;                                    // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RecentlyVisitedDelay : 1;                      // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FKSX[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RecentlyVisitedContrib;                                  // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RecentlyVisitedContrib : 1;                    // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_55DA[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RecentlyVisitedByAnyDelay;                               // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RecentlyVisitedByAnyDelay : 1;                 // 0x0064(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NUM[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RecentlyVisitedByAnyContrib;                             // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RecentlyVisitedByAnyContrib : 1;               // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J9NN[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DifferentHeightThreshold;                                // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DifferentHeightThreshold : 1;                  // 0x0074(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GV3L[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DifferentHeightToBotContrib;                             // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DifferentHeightToBotContrib : 1;               // 0x007C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4D8[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HomeSeekingNormalDist;                                   // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HomeSeekingNormalDist : 1;                     // 0x0084(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QYAL[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HomeSeekingContrib;                                      // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HomeSeekingContrib : 1;                        // 0x008C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IVGP[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpreadingOdds;                                           // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpreadingOdds : 1;                             // 0x0094(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AW75[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpreadingContrib;                                        // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpreadingContrib : 1;                          // 0x009C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GW5G[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DirectionToAvoidContrib;                                 // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DirectionToAvoidContrib : 1;                   // 0x00A4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWKE[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultWaypointMinWaitTime;                              // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultWaypointMinWaitTime : 1;                // 0x00AC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNVE[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultWaypointMaxWaitTime;                              // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultWaypointMaxWaitTime : 1;                // 0x00B4(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRepathIfGoingThroughActiveChase;                        // 0x00B5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRepathIfGoingThroughActiveChase : 1;          // 0x00B6(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V04T[0x1];                                   // 0x00B7(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIDynamicLookConfig
	 * Size -> 0x016C
	 */
	struct FAIDynamicLookConfig
	{
	public:
		bool                                                       bEnableDynamicLook;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableDynamicLook : 1;                        // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G00E[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GlobalProbability;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GlobalProbability : 1;                         // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQ6W[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxConsecutivePoints;                                    // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxConsecutivePoints : 1;                      // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C123[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayBetweenActivations;                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayBetweenActivations : 1;                // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PG9X[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayAfterInvestigationStart;                         // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayAfterInvestigationStart : 1;           // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MCS2[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PointAvailabilityDurationBeforeActivation;               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PointAvailabilityDurationBeforeActivation : 1; // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUHV[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistToDestinationForActivation;                       // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistToDestinationForActivation : 1;         // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVDG[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UpdatePointsInterval;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UpdatePointsInterval : 1;                      // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HJ3U[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FastLookAtLargeAngleProbability;                         // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FastLookAtLargeAngleProbability : 1;           // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RV1B[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FastLookMaxDuration;                                     // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FastLookMaxDuration : 1;                       // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7RIX[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedChangeSmoothingDuration;                            // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedChangeSmoothingDuration : 1;              // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H2QM[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AddedScanAngleRange;                                     // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AddedScanAngleRange : 1;                       // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VU9G[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AddedScanFrequency;                                      // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AddedScanFrequency : 1;                        // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PBME[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InterestPointMinRelativeYaw;                             // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InterestPointMinRelativeYaw : 1;               // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7VX[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceClose;                                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceClose : 1;                             // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TP70[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceIdeal;                                           // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceIdeal : 1;                             // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U21I[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceTooFar;                                          // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceTooFar : 1;                            // 0x0080(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3NL[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceScoreContribClose;                               // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceScoreContribClose : 1;                 // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95PQ[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceScoreContribIdeal;                               // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistanceScoreContribIdeal : 1;                 // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MKSA[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LargeAngleThreshold;                                     // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LargeAngleThreshold : 1;                       // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IYR[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LargeAngleScoreContrib;                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LargeAngleScoreContrib : 1;                    // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05CK[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RandomScoreContrib;                                      // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RandomScoreContrib : 1;                        // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q2LW[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayForPointReuse;                                   // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayForPointReuse : 1;                     // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZB66[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinPointDurationClose;                                   // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPointDurationClose : 1;                     // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYG2[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPointDurationClose;                                   // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPointDurationClose : 1;                     // 0x00C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CQ6[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinPointDurationFar;                                     // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPointDurationFar : 1;                       // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9KLS[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPointDurationFar;                                     // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPointDurationFar : 1;                       // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NQ6[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseDistanceForLookDuration;                            // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseDistanceForLookDuration : 1;              // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4RJK[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarDistanceForLookDuration;                              // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarDistanceForLookDuration : 1;                // 0x00E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZBZ1[0x3];                                   // 0x00E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AngleForMinLookDuration;                                 // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AngleForMinLookDuration : 1;                   // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1H2L[0x3];                                   // 0x00E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDurationForLargeAngle;                                // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDurationForLargeAngle : 1;                  // 0x00F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K3JL[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SlowInvestigationDurationBias;                           // 0x00F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowInvestigationDurationBias : 1;             // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAXV[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FastInvestigationDurationBias;                           // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FastInvestigationDurationBias : 1;             // 0x0100(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1Y5[0x3];                                   // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ExplicitInvestigationMaxNumPoints;                       // 0x0104(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitInvestigationMaxNumPoints : 1;         // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4534[0x3];                                   // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitCloseLookClearanceDark;                          // 0x010C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitCloseLookClearanceDark : 1;            // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N8TK[0x3];                                   // 0x0111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitCloseLookClearanceNormal;                        // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitCloseLookClearanceNormal : 1;          // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67TN[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitFarLookClearanceDark;                            // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitFarLookClearanceDark : 1;              // 0x0120(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V613[0x3];                                   // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitFarLookClearanceNormal;                          // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitFarLookClearanceNormal : 1;            // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYFC[0x3];                                   // 0x0129(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitMinLookDurationClose;                            // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitMinLookDurationClose : 1;              // 0x0130(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IA3I[0x3];                                   // 0x0131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitMinLookDurationFar;                              // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitMinLookDurationFar : 1;                // 0x0138(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FIK[0x3];                                   // 0x0139(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitMaxLookDurationClose;                            // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitMaxLookDurationClose : 1;              // 0x0140(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJ5Q[0x3];                                   // 0x0141(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitMaxLookDurationFar;                              // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplicitMaxLookDurationFar : 1;                // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75X8[0x3];                                   // 0x0149(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FallbackLookMinAngle;                                    // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FallbackLookMinAngle : 1;                      // 0x0150(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LM0O[0x3];                                   // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FallbackLookMaxAngle;                                    // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FallbackLookMaxAngle : 1;                      // 0x0158(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P04X[0x3];                                   // 0x0159(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FallbackLookMinDuration;                                 // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FallbackLookMinDuration : 1;                   // 0x0160(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J7JD[0x3];                                   // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FallbackLookMaxDuration;                                 // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FallbackLookMaxDuration : 1;                   // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1OCK[0x3];                                   // 0x0169(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAmbientConfig
	 * Size -> 0x0074
	 */
	struct FAIAmbientConfig
	{
	public:
		bool                                                       bEnableAmbientPatrol;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableAmbientPatrol : 1;                      // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowAmbientConfigWithNoNPCTags;                        // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAllowAmbientConfigWithNoNPCTags : 1;          // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PatrolDestinationBuffer;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PatrolDestinationBuffer : 1;                   // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7YB5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultMinStayDuration;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultMinStayDuration : 1;                    // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5F0K[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultMaxStayDuration;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultMaxStayDuration : 1;                    // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRA7[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinPlayerDistForRelocation;                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPlayerDistForRelocation : 1;                // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetNeutralWhenStartingAmbient;                        // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bResetNeutralWhenStartingAmbient : 1;          // 0x0022(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZANZ[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinIdealDistToNextPoint;                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinIdealDistToNextPoint : 1;                   // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHXA[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxIdealDistToNextPoint;                                 // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxIdealDistToNextPoint : 1;                   // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYF2[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NotRecentlyUsedDelay;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NotRecentlyUsedDelay : 1;                      // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0H1U[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdealDistScorePoints;                                    // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_IdealDistScorePoints : 1;                      // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TGA0[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HorizontalityScorePoints;                                // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HorizontalityScorePoints : 1;                  // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OP4K[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnusedScorePoints;                                       // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnusedScorePoints : 1;                         // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTP2[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NotRecentlyUsedScorePoints;                              // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NotRecentlyUsedScorePoints : 1;                // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB82[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RandomScorePoints;                                       // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RandomScorePoints : 1;                         // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F071[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReactToPlayerDistance;                                   // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ReactToPlayerDistance : 1;                     // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7GAW[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PassiveUnawareVOMinDistance;                             // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PassiveUnawareVOMinDistance : 1;               // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SV8K[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPlayerAvoidanceConfig
	 * Size -> 0x0050
	 */
	struct FAIPlayerAvoidanceConfig
	{
	public:
		float                                                      MinPlayerAvoidanceDuration;                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPlayerAvoidanceDuration : 1;                // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_34VZ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinAvoidanceDurationAfterPlayerSight;                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinAvoidanceDurationAfterPlayerSight : 1;      // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQD7[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClosePointDist;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClosePointDist : 1;                            // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5V1[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdealPointDist;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_IdealPointDist : 1;                            // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P561[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistScoreContrib;                                        // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DistScoreContrib : 1;                          // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71K4[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RandomScoreContrib;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RandomScoreContrib : 1;                        // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TZGB[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AwayFromPlayerMaxContrib;                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AwayFromPlayerMaxContrib : 1;                  // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXVC[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAlarmDurationAfterSpottingPlayer;                     // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAlarmDurationAfterSpottingPlayer : 1;       // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOPC[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAlarmRange;                                           // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAlarmRange : 1;                             // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9H0O[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CheckSurroundingsAtWaypointProbability;                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CheckSurroundingsAtWaypointProbability : 1;    // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AUUX[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIRetirementConfig
	 * Size -> 0x0020
	 */
	struct FAIRetirementConfig
	{
	public:
		bool                                                       bEnterLimboAfterSpecialistActivity;                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnterLimboAfterSpecialistActivity : 1;        // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetireAfterHitByActiveSkill;                            // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRetireAfterHitByActiveSkill : 1;              // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnterLimboAfterHitByActiveSkill;                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnterLimboAfterHitByActiveSkill : 1;          // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetireAfterHitByProjectile;                             // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRetireAfterHitByProjectile : 1;               // 0x0007(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnterLimboAfterHitByProjectile;                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnterLimboAfterHitByProjectile : 1;           // 0x0009(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDR9[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeInLimbo;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinTimeInLimbo : 1;                            // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5WCY[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxTimeInLimbo;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxTimeInLimbo : 1;                            // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRespawnFromLimboCloseToAPlayer;                         // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRespawnFromLimboCloseToAPlayer : 1;           // 0x001A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRespawnFromLimboAtQuietCloset;                          // 0x001B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRespawnFromLimboAtQuietCloset : 1;            // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L8QZ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIVOConfig
	 * Size -> 0x0070
	 */
	struct FAIVOConfig
	{
	public:
		bool                                                       bPlayContinuousSound;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bPlayContinuousSound : 1;                      // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYB8[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinActivityTimeForRandomVO;                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinActivityTimeForRandomVO : 1;                // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7LIR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnawareMinTimeForRandomVO;                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnawareMinTimeForRandomVO : 1;                 // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CVL5[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnawareMaxTimeForRandomVO;                               // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnawareMaxTimeForRandomVO : 1;                 // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7DO[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvestigateMinTimeForRandomVO;                           // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InvestigateMinTimeForRandomVO : 1;             // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GA4C[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvestigateMaxTimeForRandomVO;                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InvestigateMaxTimeForRandomVO : 1;             // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HGDK[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChaseMinTimeForRandomVO;                                 // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChaseMinTimeForRandomVO : 1;                   // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FP23[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChaseMaxTimeForRandomVO;                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChaseMaxTimeForRandomVO : 1;                   // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInterruptVOOnDisturbance;                               // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bInterruptVOOnDisturbance : 1;                 // 0x003A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WE8F[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinChaseDurationForLKPVO;                                // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinChaseDurationForLKPVO : 1;                  // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3457[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayAfterLostSightForReachedLKPVO;                   // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayAfterLostSightForReachedLKPVO : 1;     // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKTN[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LKPEventDelay;                                           // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LKPEventDelay : 1;                             // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HE6[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinChaseTimeForLostSightVO;                              // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinChaseTimeForLostSightVO : 1;                // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XJ4[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinInvestigationTimeForInvestigatePointVO;               // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinInvestigationTimeForInvestigatePointVO : 1; // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5H7[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeAfterDamageForContinuous;                         // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinTimeAfterDamageForContinuous : 1;           // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAmbientPlayRandomVOInPassiveState;                      // 0x0069(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAmbientPlayRandomVOInPassiveState : 1;        // 0x006A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAmbientPlayRandomVOInActiveState;                       // 0x006B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAmbientPlayRandomVOInActiveState : 1;         // 0x006C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YFTB[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAudioConfig
	 * Size -> 0x007C
	 */
	struct FAIAudioConfig
	{
	public:
		bool                                                       bRelevantForThreatLevel;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bRelevantForThreatLevel : 1;                   // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRRV[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxThreatInAmbient;                                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxThreatInAmbient : 1;                        // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B9US[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseThreatDistAmbient;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseThreatDistAmbient : 1;                    // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KG43[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarThreatDistAmbient;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarThreatDistAmbient : 1;                      // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KIUJ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxThreatInUnaware;                                      // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxThreatInUnaware : 1;                        // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJUG[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseThreatDistUnaware;                                  // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseThreatDistUnaware : 1;                    // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3VP[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarThreatDistUnaware;                                    // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarThreatDistUnaware : 1;                      // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVPS[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxThreatInSuspicious;                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxThreatInSuspicious : 1;                     // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDQU[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseThreatDistSuspicious;                               // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseThreatDistSuspicious : 1;                 // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F90V[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarThreatDistSuspicious;                                 // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarThreatDistSuspicious : 1;                   // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQET[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxThreatInInvestigate;                                  // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxThreatInInvestigate : 1;                    // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VE9E[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseThreatDistInvestigate;                              // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseThreatDistInvestigate : 1;                // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CJA[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarThreatDistInvestigate;                                // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarThreatDistInvestigate : 1;                  // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRFE[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxThreatInChase;                                        // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxThreatInChase : 1;                          // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEJW[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CloseThreatDistChase;                                    // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseThreatDistChase : 1;                      // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7Y3[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FarThreatDistChase;                                      // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FarThreatDistChase : 1;                        // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTBW[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIRepulsionParameters
	 * Size -> 0x0054
	 */
	struct FAIRepulsionParameters
	{
	public:
		bool                                                       bDisableRepulsion;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDisableRepulsion : 1;                         // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableSynchronizedAvoidance;                           // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDisableSynchronizedAvoidance : 1;             // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagneticRepulsionDistance;                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MagneticRepulsionDistance : 1;                 // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HMUC[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LinearRepulsionDistance;                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LinearRepulsionDistance : 1;                   // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XAP[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RepulsionForce;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RepulsionForce : 1;                            // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T40C[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRelativeVelocity;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinRelativeVelocity : 1;                       // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RZ7O[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxRelativeVelocity;                                     // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxRelativeVelocity : 1;                       // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0MP[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RelativeVelocityRepulsionScale;                          // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RelativeVelocityRepulsionScale : 1;            // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y7I0[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxRelVelForMovingRepulsion;                             // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxRelVelForMovingRepulsion : 1;               // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JC6F[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinVelForMovingRepulsion;                                // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinVelForMovingRepulsion : 1;                  // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJK8[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MovingRepulsionMaxSlowdown;                              // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MovingRepulsionMaxSlowdown : 1;                // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LFHS[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxMovingRepulsionDist;                                  // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxMovingRepulsionDist : 1;                    // 0x0050(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CJSG[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AILeashParameters
	 * Size -> 0x0030
	 */
	struct FAILeashParameters
	{
	public:
		float                                                      SlowdownDuration;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowdownDuration : 1;                          // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSlowDownInChaseOutsideLeash;                            // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bSlowDownInChaseOutsideLeash : 1;              // 0x0006(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PESV[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeOutsideLeashBeforeConsideration;                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeOutsideLeashBeforeConsideration : 1;       // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreIfChasingCloseToTarget;                           // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bIgnoreIfChasingCloseToTarget : 1;             // 0x000E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QKAF[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetDistanceThreshold;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TargetDistanceThreshold : 1;                   // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDiscardSoundStimulusOutsideLeash;                       // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDiscardSoundStimulusOutsideLeash : 1;         // 0x0016(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXKK[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FullVisionRangeMultiplierForTargetOutsideLeash;          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullVisionRangeMultiplierForTargetOutsideLeash : 1; // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZUJ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PartialVisionRangeMultiplierForTargetOutsideLeash;       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PartialVisionRangeMultiplierForTargetOutsideLeash : 1; // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OB6Z[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HearingRangeMultiplierForTargetOutsideLeash;             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HearingRangeMultiplierForTargetOutsideLeash : 1; // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTFN[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISabotageConfig
	 * Size -> 0x0024
	 */
	struct FAISabotageConfig
	{
	public:
		bool                                                       bCanSabotage;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanSabotage : 1;                              // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WK13[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumberOfTotalSabotage;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxNumberOfTotalSabotage : 1;                  // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SYZG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumberOfSabotageAtSameTime;                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxNumberOfSabotageAtSameTime : 1;             // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R128[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayBeforeSabotage;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DelayBeforeSabotage : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WBL3[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayBetweenSabotage;                                    // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DelayBetweenSabotage : 1;                      // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IN4G[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPitcherConfig
	 * Size -> 0x0050
	 */
	struct FAIPitcherConfig
	{
	public:
		float                                                      MinDistanceToTarget;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistanceToTarget : 1;                       // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JGZX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistanceToTargetForThrow;                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistanceToTargetForThrow : 1;               // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI48[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxActualThrowDistance;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxActualThrowDistance : 1;                    // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRH5[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRepeatDelay;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinRepeatDelay : 1;                            // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W78L[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxInaccuracyHorz;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxInaccuracyHorz : 1;                         // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MML[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxInaccuracyVert;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxInaccuracyVert : 1;                         // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI9U[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedAtMinDistance;                                      // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedAtMinDistance : 1;                        // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SYV[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedAtMaxDistance;                                      // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpeedAtMaxDistance : 1;                        // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5N5B[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRotationSpeed;                                        // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinRotationSpeed : 1;                          // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LW1[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxRotationSpeed;                                        // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxRotationSpeed : 1;                          // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T1NF[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPusherConfig
	 * Size -> 0x0028
	 */
	struct FAIPusherConfig
	{
	public:
		float                                                      MinIntervalGasAttacksOnSamePlayer;                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinIntervalGasAttacksOnSamePlayer : 1;         // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6L5M[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayAfterPlayerPsychosis;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDelayAfterPlayerPsychosis : 1;              // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CY2M[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GasAttackRange;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GasAttackRange : 1;                            // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDoGroupGasAttack;                                    // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanDoGroupGasAttack : 1;                      // 0x0016(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7VJ[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GroupGasAttackAngle;                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GroupGasAttackAngle : 1;                       // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6RJ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GroupGasAttackRange;                                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GroupGasAttackRange : 1;                       // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49S9[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISleeperScreamerConfig
	 * Size -> 0x0040
	 */
	struct FAISleeperScreamerConfig
	{
	public:
		float                                                      SleeperScreamAlarmRange;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SleeperScreamAlarmRange : 1;                   // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJJI[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SleeperStunZoneDuration;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SleeperStunZoneDuration : 1;                   // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOD6[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SleeperDelayBetweenStartles;                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SleeperDelayBetweenStartles : 1;               // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowAudioPathingForDisturbance;                        // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAllowAudioPathingForDisturbance : 1;          // 0x0016(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4BGM[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WokenUpRunDuration;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_WokenUpRunDuration : 1;                        // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B88N[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WokenUpRunSmoothingDuration;                             // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_WokenUpRunSmoothingDuration : 1;               // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YLT[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeBetweenScreams;                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinTimeBetweenScreams : 1;                     // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanScreamInTransit;                                     // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanScreamInTransit : 1;                       // 0x002E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYD6[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerProximityRatioForTransitScream;                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerProximityRatioForTransitScream : 1;      // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TV88[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxWakeUpCountBeforeRetirement;                          // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxWakeUpCountBeforeRetirement : 1;            // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7PS[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPouncerConfig
	 * Size -> 0x002C
	 */
	struct FAIPouncerConfig
	{
	public:
		bool                                                       bCanPeek;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanPeek : 1;                                  // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N2T9[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TryPeekingMinInterval;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TryPeekingMinInterval : 1;                     // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M9W[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TryPeekingMaxInterval;                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TryPeekingMaxInterval : 1;                     // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesShyness;                                            // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bUsesShyness : 1;                              // 0x0012(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QV0K[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShynessIncreaseRate;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ShynessIncreaseRate : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYRX[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShynessCooldownRate;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ShynessCooldownRate : 1;                       // 0x0020(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ML2[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxPouncesBeforeRetirement;                              // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxPouncesBeforeRetirement : 1;                // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83JE[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AINightHunterConfig
	 * Size -> 0x0028
	 */
	struct FAINightHunterConfig
	{
	public:
		float                                                      MaximumPlayerSensingDistanceAware;                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumPlayerSensingDistanceAware : 1;         // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K0GN[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaximumPlayerSensingDistanceUnaware;                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumPlayerSensingDistanceUnaware : 1;       // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVZJ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumPlayerSpeedForUnawareDisturbance;                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumPlayerSpeedForUnawareDisturbance : 1;   // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5UK[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnawareDetectionDuration;                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnawareDetectionDuration : 1;                  // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XLS[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DetectionMeterCooldownDuration;                          // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DetectionMeterCooldownDuration : 1;            // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BT9Z[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIBerserkerConfig
	 * Size -> 0x0040
	 */
	struct FAIBerserkerConfig
	{
	public:
		float                                                      MinIdleAttackTime;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinIdleAttackTime : 1;                         // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R06E[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxIdleAttackTime;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxIdleAttackTime : 1;                         // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALNS[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChanceOfIdleBreakerInsteadOfAttack;                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChanceOfIdleBreakerInsteadOfAttack : 1;        // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HML[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBeforeReturningToLeash;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TimeBeforeReturningToLeash : 1;                // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X27D[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShortIdleAttackDistance;                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ShortIdleAttackDistance : 1;                   // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTLS[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LongIdleAttackDistance;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongIdleAttackDistance : 1;                    // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q07V[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvulnerabilityAfterDamageDuration;                      // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InvulnerabilityAfterDamageDuration : 1;        // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DJ5[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForceIgnoreDamagedPlayerDuration;                        // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ForceIgnoreDamagedPlayerDuration : 1;          // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5DR[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIStalkerTargetConfig
	 * Size -> 0x0020
	 */
	struct FAIStalkerTargetConfig
	{
	public:
		float                                                      MaxChaseTime;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxChaseTime : 1;                              // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6UL[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumberOfInvestigates;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxNumberOfInvestigates : 1;                   // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6VE[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxNumberOfInvestigatesTimeInverval;                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxNumberOfInvestigatesTimeInverval : 1;       // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WC1K[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxInvestigatingTimeAfterLightBulbExplode;               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxInvestigatingTimeAfterLightBulbExplode : 1; // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z165[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIGroundAndPoundConfig
	 * Size -> 0x0060
	 */
	struct FAIGroundAndPoundConfig
	{
	public:
		bool                                                       bCanGroundAndPound;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCanGroundAndPound : 1;                        // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAmbushChasedPlayers;                                    // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAmbushChasedPlayers : 1;                      // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAmbushJumpingPlayers;                                   // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAmbushJumpingPlayers : 1;                     // 0x0005(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W5SM[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamagePerPunch;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DamagePerPunch : 1;                            // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O0MJ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetTotalDamage;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TargetTotalDamage : 1;                         // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JJR[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumDamage;                                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumDamage : 1;                             // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNonFatalDamage;                                         // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bNonFatalDamage : 1;                           // 0x001E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IV4Z[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinReenterInterval;                                      // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinReenterInterval : 1;                        // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YQN1[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRetryInterval;                                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinRetryInterval : 1;                          // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CSAG[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EnterProbability;                                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterProbability : 1;                          // 0x0034(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EQRR[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistForTryTackle;                                     // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistForTryTackle : 1;                       // 0x003C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCEB[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAngleForTryTackle;                                    // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAngleForTryTackle : 1;                      // 0x0044(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNFX[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDistForTackleSuccess;                                 // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistForTackleSuccess : 1;                   // 0x004C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CGNE[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxAngleForTackleSuccess;                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxAngleForTackleSuccess : 1;                  // 0x0054(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QA80[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumProximityToPushableForAmbush;                     // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumProximityToPushableForAmbush : 1;       // 0x005C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZ2M[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIActiveSkillsConfig
	 * Size -> 0x0010
	 */
	struct FAIActiveSkillsConfig
	{
	public:
		float                                                      BerserkChaseSpeed;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BerserkChaseSpeed : 1;                         // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVUW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BerserkRandomMovementSpeed;                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BerserkRandomMovementSpeed : 1;                // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ70[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAnimConfig
	 * Size -> 0x0030
	 */
	struct FAIAnimConfig
	{
	public:
		bool                                                       bForceAnimStyle;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bForceAnimStyle : 1;                           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCAnimStyle                                              ForcedAnimStyle;                                         // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ForcedAnimStyle : 1;                           // 0x0003(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StepHeaviness;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StepHeaviness : 1;                             // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1F3A[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BodyEffectIntensity;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BodyEffectIntensity : 1;                       // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreathing;                                              // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bBreathing : 1;                                // 0x0012(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableChaseBreakers;                                    // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableChaseBreakers : 1;                      // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHPH[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChaseBreakerAverageDelay;                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ChaseBreakerAverageDelay : 1;                  // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCycleBreakers;                                    // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnableCycleBreakers : 1;                      // 0x001E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDLL[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CycleBreakerMinInterval;                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CycleBreakerMinInterval : 1;                   // 0x0024(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQSX[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CycleBreakerMaxInterval;                                 // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CycleBreakerMaxInterval : 1;                   // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGRA[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISpecialConfigData
	 * Size -> 0x0014
	 */
	struct FAISpecialConfigData
	{
	public:
		float                                                      UnspawnIsolationDistance;                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnspawnIsolationDistance : 1;                  // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7GO5[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnspawnIsolationTime;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnspawnIsolationTime : 1;                      // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableAutomaticBehaviors;                              // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDisableAutomaticBehaviors : 1;                // 0x000E(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysBashDoors;                                        // 0x000F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAlwaysBashDoors : 1;                          // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJGR[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISystemsConfig
	 * Size -> 0x0014
	 */
	struct FAISystemsConfig
	{
	public:
		bool                                                       bDisableServerAnimationsAtRange;                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDisableServerAnimationsAtRange : 1;           // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DAOQ[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DisableServerAnimationsRange;                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DisableServerAnimationsRange : 1;              // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableAnimOptims;                                      // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bDisableAnimOptims : 1;                        // 0x000A(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKF3[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathPushDistanceAwayFromSides;                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PathPushDistanceAwayFromSides : 1;             // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5ZQ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIUIConfig
	 * Size -> 0x0002
	 */
	struct FAIUIConfig
	{
	public:
		bool                                                       bAllowPlayerPing;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bAllowPlayerPing : 1;                          // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerProximityConfig
	 * Size -> 0x0014
	 */
	struct FPlayerProximityConfig
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bEnabled : 1;                                  // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GH8J[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProximityDistance;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProximityDistance : 1;                         // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFCB[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinVOInterval;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinVOInterval : 1;                             // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XMV8[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIConfigData
	 * Size -> 0x1230
	 */
	struct FAIConfigData
	{
	public:
		struct FAIGlobalConfig                                     Global;                                                  // 0x0000(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIClosetConfig                                     Closet;                                                  // 0x0048(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAISpeedConfig                                      Speed;                                                   // 0x0078(0x0130) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAdvancedSpeedConfig                              AdvancedSpeed;                                           // 0x01A8(0x00A0) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIHealthConfig                                     Health;                                                  // 0x0248(0x0024) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIVisionConfig                                     Vision;                                                  // 0x026C(0x0158) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIHearingConfig                                    Hearing;                                                 // 0x03C4(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAwarenessConfig                                  Awareness;                                               // 0x03E0(0x01C0) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAITargettingConfig                                 Targetting;                                              // 0x05A0(0x0074) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDisturbanceConfig                                  Disturbance;                                             // 0x0614(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAttackConfig                                     Attack;                                                  // 0x0630(0x0140) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIChaseConfig                                      Chase;                                                   // 0x0770(0x00D0) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAICombatConfig                                     Combat;                                                  // 0x0840(0x0006) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9XNZ[0x2];                                   // 0x0846(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIInvestigationConfig                              Investigation;                                           // 0x0848(0x0300) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIPatrolConfig                                     Patrol;                                                  // 0x0B48(0x00B8) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIDynamicLookConfig                                DynamicLook;                                             // 0x0C00(0x016C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAmbientConfig                                    Ambient;                                                 // 0x0D6C(0x0074) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIPlayerAvoidanceConfig                            PlayerAvoidance;                                         // 0x0DE0(0x0050) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIRetirementConfig                                 Retirement;                                              // 0x0E30(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIVOConfig                                         VO;                                                      // 0x0E50(0x0070) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAudioConfig                                      Audio;                                                   // 0x0EC0(0x007C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIRepulsionParameters                              Repulsion;                                               // 0x0F3C(0x0054) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAILeashParameters                                  Leash;                                                   // 0x0F90(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAISabotageConfig                                   Sabotage;                                                // 0x0FC0(0x0024) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIPitcherConfig                                    Pitcher;                                                 // 0x0FE4(0x0050) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIPusherConfig                                     Pusher;                                                  // 0x1034(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAISleeperScreamerConfig                            SleeperScreamer;                                         // 0x105C(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIPouncerConfig                                    Pouncer;                                                 // 0x109C(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAINightHunterConfig                                NightHunter;                                             // 0x10C8(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIBerserkerConfig                                  Berserker;                                               // 0x10F0(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIStalkerTargetConfig                              StalkerTarget;                                           // 0x1130(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIGroundAndPoundConfig                             GroundAndPound;                                          // 0x1150(0x0060) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIActiveSkillsConfig                               ActiveSkills;                                            // 0x11B0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAnimConfig                                       Animation;                                               // 0x11C0(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAISpecialConfigData                                Special;                                                 // 0x11F0(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAISystemsConfig                                    Systems;                                                 // 0x1204(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAIUIConfig                                         UI;                                                      // 0x1218(0x0002) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZDJ[0x2];                                   // 0x121A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerProximityConfig                              PlayerProximity;                                         // 0x121C(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBAIRandomSpawning
	 * Size -> 0x0058
	 */
	struct FRBAIRandomSpawning
	{
	public:
		class URBAIDirector*                                       AIDirector;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIManager*                                        AIMgr;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBNPCArchetypeConfig*                               ArchetypesCfg;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YAS3[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBAIVolume*>                                 PouncerSpawnExclusionVolumes;                            // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ARBAISpawner*>                                AvailableSpawners;                                       // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ARBAISpawner*>                                ActivatedSpawners;                                       // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpecialistsGlobalConfig
	 * Size -> 0x0020
	 */
	struct FSpecialistsGlobalConfig
	{
	public:
		float                                                      MonsterClosetExitDelay;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MonsterClosetExitDelay : 1;                    // 0x0004(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WFFF[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObjectiveTargetMinDesiredSpawnDistanceFromPlayers;       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ObjectiveTargetMinDesiredSpawnDistanceFromPlayers : 1; // 0x000C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_33QQ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObjectiveTargetMinDesiredSpawnDistanceFromOtherTargets;  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ObjectiveTargetMinDesiredSpawnDistanceFromOtherTargets : 1; // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PLTD[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDistScreamerToRail;                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinDistScreamerToRail : 1;                     // 0x001C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1W5S[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ProximityAnalysisConfig
	 * Size -> 0x0340
	 */
	struct FProximityAnalysisConfig
	{
	public:
		struct FConfigurableFloat                                  ProximityRampUpSpeed;                                    // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProximityRampUpSpeed : 1;                      // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0PF2[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  ProximityCooldownSpeed;                                  // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProximityCooldownSpeed : 1;                    // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1IF[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  FullProximityDistance;                                   // 0x01A0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullProximityDistance : 1;                     // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9991[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MaxProximityDistance;                                    // 0x0270(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxProximityDistance : 1;                      // 0x0338(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1B62[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RushingAnalysisConfig
	 * Size -> 0x0340
	 */
	struct FRushingAnalysisConfig
	{
	public:
		struct FConfigurableFloat                                  RunningRampUpRate;                                       // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RunningRampUpRate : 1;                         // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZC2S[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  WalkingCooldownRate;                                     // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_WalkingCooldownRate : 1;                       // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6RS[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  IdleCooldownRate;                                        // 0x01A0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_IdleCooldownRate : 1;                          // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C1I5[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  HidingCooldownRate;                                      // 0x0270(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HidingCooldownRate : 1;                        // 0x0338(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYE1[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AdversityAnalysisConfig
	 * Size -> 0x04E8
	 */
	struct FAdversityAnalysisConfig
	{
	public:
		struct FConfigurableFloat                                  PointsIncreaseMultiplier;                                // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PointsIncreaseMultiplier : 1;                  // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J346[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialAdversityLevel;                                   // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_InitialAdversityLevel : 1;                     // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44HH[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PlayerChasedRampUpRate;                                  // 0x00D8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerChasedRampUpRate : 1;                    // 0x01A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6XNR[0x7];                                   // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  CooldownRate;                                            // 0x01A8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CooldownRate : 1;                              // 0x0270(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86UF[0x7];                                   // 0x0271(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PlayerDamagedPoints;                                     // 0x0278(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerDamagedPoints : 1;                       // 0x0340(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQ5B[0x7];                                   // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PlayerKnockedDownPoints;                                 // 0x0348(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerKnockedDownPoints : 1;                   // 0x0410(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4ED[0x7];                                   // 0x0411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PlayerKilledPoints;                                      // 0x0418(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerKilledPoints : 1;                        // 0x04E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HT37[0x7];                                   // 0x04E1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PouncerConfig
	 * Size -> 0x00D0
	 */
	struct FPouncerConfig
	{
	public:
		struct FConfigurableFloat                                  MinPouncersSeparation;                                   // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinPouncersSeparation : 1;                     // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OLFW[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InternalBoolByDifficulty
	 * Size -> 0x0008
	 */
	struct FInternalBoolByDifficulty
	{
	public:
		bool                                                       bOverrideEasyLocalValue;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EasyLocalValue;                                          // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideNormalLocalValue;                               // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NormalLocalValue;                                        // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHardLocalValue;                                 // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HardLocalValue;                                          // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideInsaneLocalValue;                               // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InsaneLocalValue;                                        // 0x0007(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ConfigurableBool
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	struct FConfigurableBool : public FConfigurableValue
	{
	public:
		struct FInternalBoolByDifficulty                           DefaultValues;                                           // 0x0038(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor1P;                                     // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInternalBoolByDifficulty                           Values1P;                                                // 0x0041(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor2P;                                     // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInternalBoolByDifficulty                           Values2P;                                                // 0x004A(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOverrideFor3P;                                     // 0x0052(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInternalBoolByDifficulty                           Values3P;                                                // 0x0053(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2GH5[0x5];                                   // 0x005B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ImposterCustomizationConfig
	 * Size -> 0x0340
	 */
	struct FImposterCustomizationConfig
	{
	public:
		struct FConfigurableBool                                   bCopyCustomizationSlot_NV;                               // 0x0000(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_NV : 1;                 // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1EKZ[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_Hair;                             // 0x0068(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_Hair : 1;               // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FP2D[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_Head;                             // 0x00D0(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_Head : 1;               // 0x0130(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_458R[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_Watch;                            // 0x0138(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_Watch : 1;              // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKO8[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_UpperBody;                        // 0x01A0(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_UpperBody : 1;          // 0x0200(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TU3F[0x7];                                   // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_Toaster;                          // 0x0208(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_Toaster : 1;            // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LF6D[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_LowerBody;                        // 0x0270(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_LowerBody : 1;          // 0x02D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WN7P[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bCopyCustomizationSlot_Glove;                            // 0x02D8(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_bCopyCustomizationSlot_Glove : 1;              // 0x0338(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYOE[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PrimeAssetCommonConfig
	 * Size -> 0x0008
	 */
	struct FPrimeAssetCommonConfig
	{
	public:
		class UAkAudioEvent*                                       PrimeAssetIntroVO;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GooseberryConfig
	 * Size -> 0x01B0
	 */
	struct FGooseberryConfig
	{
	public:
		struct FPrimeAssetCommonConfig                             PrimeAssetCommonConfig;                                  // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrimeAssetCommonConfig : 1;                    // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SX6[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  FakedGooseberryTravelSpeed;                              // 0x0010(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FakedGooseberryTravelSpeed : 1;                // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0N9Y[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MaxDistToAPlayerForGooseberryRespawn;                    // 0x00E0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistToAPlayerForGooseberryRespawn : 1;      // 0x01A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6B3[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CoyleConfig
	 * Size -> 0x01B0
	 */
	struct FCoyleConfig
	{
	public:
		struct FPrimeAssetCommonConfig                             PrimeAssetCommonConfig;                                  // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrimeAssetCommonConfig : 1;                    // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3JZ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  FakedCoyleTravelSpeed;                                   // 0x0010(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FakedCoyleTravelSpeed : 1;                     // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OAZN[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MaxDistToAPlayerForCoyleRespawn;                         // 0x00E0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaxDistToAPlayerForCoyleRespawn : 1;           // 0x01A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZJ9[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SpecialistsConfigData
	 * Size -> 0x12F8
	 */
	struct FSpecialistsConfigData
	{
	public:
		struct FSpecialistsGlobalConfig                            Global;                                                  // 0x0000(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FProximityAnalysisConfig                            Proximity;                                               // 0x0020(0x0340) Edit, NativeAccessSpecifierPublic
		struct FRushingAnalysisConfig                              Rushing;                                                 // 0x0360(0x0340) Edit, NativeAccessSpecifierPublic
		struct FAdversityAnalysisConfig                            Adversity;                                               // 0x06A0(0x04E8) Edit, NativeAccessSpecifierPublic
		struct FPouncerConfig                                      Pouncer;                                                 // 0x0B88(0x00D0) Edit, NativeAccessSpecifierPublic
		struct FImposterCustomizationConfig                        ImposterCustomization;                                   // 0x0C58(0x0340) Edit, NativeAccessSpecifierPublic
		struct FGooseberryConfig                                   Gooseberry;                                              // 0x0F98(0x01B0) Edit, NativeAccessSpecifierPublic
		struct FCoyleConfig                                        Coyle;                                                   // 0x1148(0x01B0) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpawnRuleData
	 * Size -> 0x0010
	 */
	struct FSpawnRuleData
	{
	public:
		unsigned char                                              UnknownData_6TFJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PressureBeatData
	 * Size -> 0x0004
	 */
	struct FPressureBeatData
	{
	public:
		float                                                      NextBeatScheduledStageTime;                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AdversityPressureData
	 * Size -> 0x000C
	 */
	struct FAdversityPressureData
	{
	public:
		unsigned char                                              UnknownData_OHRN[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DynamicPressureData
	 * Size -> 0x0018
	 */
	struct FDynamicPressureData
	{
	public:
		int32_t                                                    PressureAccumulator;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPressureBeatData                                   PressureBeat;                                            // 0x0004(0x0004) NoDestructor, NativeAccessSpecifierPublic
		struct FAdversityPressureData                              AdversityPressure;                                       // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FON4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StandardBotRespawnData
	 * Size -> 0x0020
	 */
	struct FStandardBotRespawnData
	{
	public:
		class ARBAISpawner*                                        spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCType                                                   NPCType;                                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJZB[0x17];                                  // 0x0009(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomSpecialistSpawningData
	 * Size -> 0x0028
	 */
	struct FRandomSpecialistSpawningData
	{
	public:
		unsigned char                                              UnknownData_3QOC[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bSpawningAvailable;                                      // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8R7A[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UnavailabilityReason;                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDHD[0x4];                                   // 0x0020(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumSpawned;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerPairProximityData
	 * Size -> 0x0018
	 */
	struct FPlayerPairProximityData
	{
	public:
		class ARBPlayer*                                           FirstPlayer;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           SecondPlayer;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BIPD[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PerPlayerProximityData
	 * Size -> 0x0018
	 */
	struct FPerPlayerProximityData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N03N[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerProximityData
	 * Size -> 0x0028
	 */
	struct FPlayerProximityData
	{
	public:
		TArray<struct FPlayerPairProximityData>                    ProximityPairs;                                          // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPerPlayerProximityData>                     PlayerStatus;                                            // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61YY[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PerPlayerRushingData
	 * Size -> 0x0018
	 */
	struct FPerPlayerRushingData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CHI[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerRushingData
	 * Size -> 0x0018
	 */
	struct FPlayerRushingData
	{
	public:
		TArray<struct FPerPlayerRushingData>                       PlayerStatus;                                            // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_605I[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AdversityData
	 * Size -> 0x0008
	 */
	struct FAdversityData
	{
	public:
		float                                                      CurrentAdversity;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECEA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIRandomSpawningDebugSelectedItem
	 * Size -> 0x0020
	 */
	struct FAIRandomSpawningDebugSelectedItem
	{
	public:
		class ARBAISpawner*                                        spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBHidespotComponent*                                hidespot;                                                // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DifficultyContrib;                                       // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FZQD[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIRandomSpawningDebugArchetypeInfo
	 * Size -> 0x0028
	 */
	struct FAIRandomSpawningDebugArchetypeInfo
	{
	public:
		class UClass*                                              PawnClass;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalDifficultyContrib;                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnedCount;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassMinCount;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassMaxCount;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArchMaxCount;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IgnoredCount;                                            // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AISpawnWaveDebugInfo
	 * Size -> 0x0060
	 */
	struct FAISpawnWaveDebugInfo
	{
	public:
		bool                                                       bTriggered;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWEB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StageTime;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RndConfigAssetName;                                      // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ConditionsStr;                                           // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaveTargetDifficulty;                                    // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalDifficultyScore;                                    // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DifficultyTolerance;                                     // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KTVW[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIRandomSpawningDebugSelectedItem>          SelectedSpawners;                                        // 0x0038(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FAIRandomSpawningDebugArchetypeInfo>         Archetypes;                                              // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NumSpawnersWithoutArchetype;                             // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQEA[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomNPCSpawningDebugInfo
	 * Size -> 0x0010
	 */
	struct FRandomNPCSpawningDebugInfo
	{
	public:
		TArray<struct FAISpawnWaveDebugInfo>                       SpawnWaves;                                              // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PressureEventDebugData
	 * Size -> 0x0010
	 */
	struct FPressureEventDebugData
	{
	public:
		bool                                                       bConsumptionEvent;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPressureEventType                                         EventType;                                               // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPressureConsumptionType                                   ConsumptionType;                                         // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VKNR[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DeltaPoints;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResultingAccumulator;                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EventStageTime;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SummonedBotDebugInfo
	 * Size -> 0x0048
	 */
	struct FSummonedBotDebugInfo
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHWA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BotName;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnedStageTime;                                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RetiredStageTime;                                        // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeBeforeRetirement;                                 // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21OR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InitialTargetPlayer;                                     // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RuleName;                                                // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FailedBotSummonDebugInfo
	 * Size -> 0x0028
	 */
	struct FFailedBotSummonDebugInfo
	{
	public:
		float                                                      StageTime;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCType                                                   NPCType;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FAXA[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RuleName;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UnavailabilityReason;                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BotCollisionInfo
	 * Size -> 0x0030
	 */
	struct FBotCollisionInfo
	{
	public:
		unsigned char                                              UnknownData_ZCWL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBBot*                                              Collider;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBBot*                                              Collidee;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBBot*                                              ExtraParticipant;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OURQ[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PsychosisMineData
	 * Size -> 0x0050
	 */
	struct FPsychosisMineData
	{
	public:
		class ARBBot*                                              bot;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4JYQ[0x30];                                  // 0x0008(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPsychosisMine*                                    MineActor;                                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBPlayer*>                                   AffectedPlayers;                                         // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigatedDoorData
	 * Size -> 0x0018
	 */
	struct FInvestigatedDoorData
	{
	public:
		class ARBDoor*                                             door;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBBot*                                              bot;                                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ERZ[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BaseZoneModifierData
	 * Size -> 0x0020
	 */
	struct FBaseZoneModifierData
	{
	public:
		class ARBPlayer*                                           triggeringPlayer;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B1FD[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ActiveChemMineData
	 * Size -> 0x0048 (FullSize[0x0068] - InheritedSize[0x0020])
	 */
	struct FActiveChemMineData : public FBaseZoneModifierData
	{
	public:
		struct FRBActiveSkillSettings                              Params;                                                  // 0x0020(0x002C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFB6[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBDeployableSkillItem*                              ChargeActor;                                             // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBNPC*>                                      AffectedNPCs;                                            // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBVariatorNPCAIConfigOverride
	 * Size -> 0x0010
	 */
	struct FRBVariatorNPCAIConfigOverride
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCFlavor                                                 NPCFlavor;                                               // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNCI[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBPartialAIConfig*                                  Override;                                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DelayedSpawnActionInfo
	 * Size -> 0x0020
	 */
	struct FDelayedSpawnActionInfo
	{
	public:
		struct FLatentActionInfo                                   LatentActionInfo;                                        // 0x0000(0x0018) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E1QT[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPerPlayerData
	 * Size -> 0x0168
	 */
	struct FAIPerPlayerData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G29M[0x160];                                 // 0x0008(0x0160) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISpawnerUICustomizationProxy
	 * Size -> 0x0008
	 */
	struct FAISpawnerUICustomizationProxy
	{
	public:
		class ARBAISpawner*                                        OwnerSpawner;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCAmbientPropData
	 * Size -> 0x0018
	 */
	struct FNPCAmbientPropData
	{
	public:
		class UPrimitiveComponent*                                 PropComponent;                                           // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         PropStaticMesh;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachBone;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCAmbientConfig
	 * Size -> 0x0100
	 */
	struct FNPCAmbientConfig
	{
	public:
		struct FGameplayTagContainer                               EnableOnlyForNPCTags;                                    // 0x0000(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               DisableForNPCTags;                                       // 0x0020(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UAnimSequence*                                       EntryAnim;                                               // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     IdleAnim;                                                // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     ActiveStateBS;                                           // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     PassiveToActiveBS;                                       // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     ActiveToPassiveBS;                                       // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UAnimSequence*>                               IdleBreakers;                                            // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      IdleBreakerBlendInTime;                                  // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleBreakerBlendOutTime;                                 // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       DisturbanceAnim;                                         // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UAnimSequence*>                               DisturbanceVariations;                                   // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ExitAnimNormal;                                          // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ExitAnimDisturbed;                                       // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNormalExitOnCycleEnd;                                   // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOmnidirectional;                                        // 0x00A9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideIdleDuration;                                   // 0x00AA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0S4N[0x1];                                   // 0x00AB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverriddenMinDuration;                                   // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverriddenMaxDuration;                                   // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtPlayer;                                           // 0x00B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowHitReaction;                                       // 0x00B5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecenterCollisionOnHips;                                // 0x00B6(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockNavmesh;                                           // 0x00B7(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtAngleRangeLeft;                                    // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtAngleRangeRight;                                   // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtDistanceRange;                                     // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtApproachCoeff;                                     // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StartSoundEvent;                                         // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopSoundEvent;                                          // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawAnchorReference;                                    // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawVisionRange;                                        // 0x00D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8GR5[0x2];                                   // 0x00DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviewAnimTime;                                         // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviewSadFaceHeightOffset;                              // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ZOQ[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNPCAmbientPropData                                 AmbientPropData;                                         // 0x00E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCHidespotPeekAnimData
	 * Size -> 0x0010
	 */
	struct FNPCHidespotPeekAnimData
	{
	public:
		class UAnimSequence*                                       PeekAnimation;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHidespotPeekDistance                                   Distance;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2O4[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SingleHidespotInteractionsAnimRefs
	 * Size -> 0x0040
	 */
	struct FSingleHidespotInteractionsAnimRefs
	{
	public:
		class UAnimSequenceBase*                                   Enter;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   Peek;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FNPCHidespotPeekAnimData>                    NPCPeeks;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   ExitPeek;                                                // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UAnimSequenceBase*>                           Investigate;                                             // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   KnockdownExit;                                           // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PairedAnim
	 * Size -> 0x0018
	 */
	struct FPairedAnim
	{
	public:
		class UAnimationAsset*                                     NPCAnim;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     PlayerAnim;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     PlayerAnim3P;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GrabExitData
	 * Size -> 0x0060
	 */
	struct FGrabExitData
	{
	public:
		struct FPairedAnim                                         ExitForward;                                             // 0x0000(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         ExitLeft;                                                // 0x0018(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         ExitRight;                                               // 0x0030(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         ExitBack;                                                // 0x0048(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HidespotsAnimRefs
	 * Size -> 0x0260
	 */
	struct FHidespotsAnimRefs
	{
	public:
		struct FSingleHidespotInteractionsAnimRefs                 StandingLeft;                                            // 0x0000(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 StandingRight;                                           // 0x0040(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 ProneLeft;                                               // 0x0080(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 ProneRight;                                              // 0x00C0(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 Crouched;                                                // 0x0100(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 InsideHorizontal;                                        // 0x0140(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 InsideVertical;                                          // 0x0180(0x0040) Edit, NativeAccessSpecifierPublic
		struct FSingleHidespotInteractionsAnimRefs                 CarTrunk;                                                // 0x01C0(0x0040) Edit, NativeAccessSpecifierPublic
		struct FGrabExitData                                       GrabExitData;                                            // 0x0200(0x0060) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BasicDirectionAnimations
	 * Size -> 0x0020
	 */
	struct FBasicDirectionAnimations
	{
	public:
		class UAnimSequence*                                       Front;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Back;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Left;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Right;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionTurnDirectionOptions
	 * Size -> 0x00A0
	 */
	struct FLocomotionTurnDirectionOptions
	{
	public:
		TMap<ELocomotionTurnDirection, class UAnimSequence*>       Sequences;                                               // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ELocomotionTurnDirection, class UBlendSpaceBase*>     BlendSpaces;                                             // 0x0050(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionStopOptions
	 * Size -> 0x0028
	 */
	struct FLocomotionStopOptions
	{
	public:
		class UAnimSequence*                                       Sequence;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     BlendSpace;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Curve;                                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoBlendOutDuration;                                    // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CustomBlendOutDuration;                                  // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionStopDirectionOptions
	 * Size -> 0x0050
	 */
	struct FLocomotionStopDirectionOptions
	{
	public:
		TMap<ELocomotionTurnDirection, struct FLocomotionStopOptions> Sequences;                                               // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionStartleSpeedOptions
	 * Size -> 0x0050
	 */
	struct FLocomotionStartleSpeedOptions
	{
	public:
		TMap<EStartleSpeed, struct FLocomotionTurnDirectionOptions> Options;                                                 // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AttackMove
	 * Size -> 0x0028
	 */
	struct FAttackMove
	{
	public:
		class UAnimSequence*                                       Sequence;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProbabilityModifier;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rotation;                                                // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialSpeed;                                            // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToDamage;                                            // 0x0018(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LinearCorrectionAmount;                                  // 0x001C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredCeilingClearance;                                // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WWV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.GrabAttackData
	 * Size -> 0x0150
	 */
	struct FGrabAttackData
	{
	public:
		struct FPairedAnim                                         EnterStand;                                              // 0x0000(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterCrouch;                                             // 0x0018(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterAbove;                                              // 0x0030(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingStandLeft;                                    // 0x0048(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingStandRight;                                   // 0x0060(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingProneLeft;                                    // 0x0078(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingProneRight;                                   // 0x0090(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingCrouch;                                       // 0x00A8(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingContainer;                                    // 0x00C0(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         EnterHidingBarrel;                                       // 0x00D8(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FGrabExitData                                       Exits;                                                   // 0x00F0(0x0060) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCInvestigationSightRequirement
	 * Size -> 0x000C
	 */
	struct FNPCInvestigationSightRequirement
	{
	public:
		float                                                      DistanceOffset;                                          // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeLookAngle;                                       // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookDuration;                                            // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCInvestigationAnimData
	 * Size -> 0x0038
	 */
	struct FNPCInvestigationAnimData
	{
	public:
		class UAnimSequence*                                       AnimSequence;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProbabilityModifier;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCInvestigationAnimIntensity                             Intensity;                                               // 0x000C(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCInvestigationAnimCategory                              Category;                                                // 0x000D(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnteringInMotion;                                       // 0x000E(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AD8X[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EntrySpeed;                                              // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EntryPhase;                                              // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistTravelled;                                           // 0x0018(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4QY[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNPCInvestigationSightRequirement>           SightRequirements;                                       // 0x0020(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0SW[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCWaypointAnimData
	 * Size -> 0x0008
	 */
	struct FNPCWaypointAnimData
	{
	public:
		class UAnimSequence*                                       AnimSequence;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCHitReactionAnimData
	 * Size -> 0x0010
	 */
	struct FNPCHitReactionAnimData
	{
	public:
		class UAnimSequence*                                       AnimSequence;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        ReactionType;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMoving;                                                 // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicDirection                                            Direction;                                               // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5R7V[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCDoorInteractionAnimData
	 * Size -> 0x0040
	 */
	struct FNPCDoorInteractionAnimData
	{
	public:
		class UAnimSequence*                                       Sequence;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnchorTranslation;                                       // 0x0008(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnchorOffsetAtAdjustmentLimit;                           // 0x0014(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocalYawAtAdjustmentLimit;                               // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAdjustmentDistance;                                   // 0x0024(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAdjustmentDuration;                                   // 0x0028(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EntryPhase;                                              // 0x002C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EntrySpeed;                                              // 0x0030(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoBlendOutDuration;                                    // 0x0034(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CustomBlendOutDuration;                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5WQW[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCDoorPassthroughAnimDataHalfSet
	 * Size -> 0x0220
	 */
	struct FNPCDoorPassthroughAnimDataHalfSet
	{
	public:
		struct FNPCDoorInteractionAnimData                         OpenedToClosed;                                          // 0x0000(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         OpenedToLocked;                                          // 0x0040(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         OpenedToClosedBack;                                      // 0x0080(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         OpenedToLockedBack;                                      // 0x00C0(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FNPCDoorInteractionAnimData>                 ClosedToOpened_List;                                     // 0x0100(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         ClosedToClosed;                                          // 0x0110(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         ClosedToLocked;                                          // 0x0150(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         LockedToOpened;                                          // 0x0190(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         LockedToClosed;                                          // 0x01D0(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FNPCDoorInteractionAnimData>                 Walkthroughs;                                            // 0x0210(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCDoorPassthroughAnimDataSet
	 * Size -> 0x0440
	 */
	struct FNPCDoorPassthroughAnimDataSet
	{
	public:
		struct FNPCDoorPassthroughAnimDataHalfSet                  Left;                                                    // 0x0000(0x0220) Edit, NativeAccessSpecifierPublic
		struct FNPCDoorPassthroughAnimDataHalfSet                  Right;                                                   // 0x0220(0x0220) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCDoorInvestigationAnimDataHalfSet
	 * Size -> 0x0150
	 */
	struct FNPCDoorInvestigationAnimDataHalfSet
	{
	public:
		struct FNPCDoorInteractionAnimData                         OpenToInvestigate_Side;                                  // 0x0000(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         OpenToInvestigate_Wide;                                  // 0x0040(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         ClosedToInvestigate_Side;                                // 0x0080(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         ClosedToInvestigate_Wide;                                // 0x00C0(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCDoorInteractionAnimData                         ClosedToInvestigate_Peek;                                // 0x0100(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FNPCDoorInteractionAnimData>                 LockedToInvestigate_List;                                // 0x0140(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCDoorInvestigationAnimDataSet
	 * Size -> 0x02A0
	 */
	struct FNPCDoorInvestigationAnimDataSet
	{
	public:
		struct FNPCDoorInvestigationAnimDataHalfSet                Left;                                                    // 0x0000(0x0150) Edit, NativeAccessSpecifierPublic
		struct FNPCDoorInvestigationAnimDataHalfSet                Right;                                                   // 0x0150(0x0150) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CrouchUnderAnimRefs
	 * Size -> 0x0010
	 */
	struct FCrouchUnderAnimRefs
	{
	public:
		class UAnimSequence*                                       CrouchUnderStandPatrol;                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       CrouchUnderMoveChase;                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TurningOnSpotData
	 * Size -> 0x0060
	 */
	struct FTurningOnSpotData
	{
	public:
		TMap<EFullTurnDirection, class UAnimSequence*>             TurnOnSpotSequences;                                     // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		class UAimOffsetBlendSpace1D*                              LookAimSpace;                                            // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotSafeAngle;                                     // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnOnSpotForceTurnAngle;                                // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ItemSequences
	 * Size -> 0x00D8
	 */
	struct FItemSequences
	{
	public:
		class UAnimSequence*                                       HandPose;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       EnterTradePose;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ExitTradePose;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       TradePose;                                               // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       InteractReadyStart;                                      // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       InteractReadyPose;                                       // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       InteractReadyStop;                                       // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InteractReadyRequiresLeftHand;                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9TT[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       ActivelyUsingItemStart;                                  // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ActivelyUsingItemPose;                                   // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ActivelyUsingItemStop;                                   // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ActivelyUsingItemAlternateStop;                          // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Equip;                                                   // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       UnEquip;                                                 // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       pickup;                                                  // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       DefaultPickUpPose;                                       // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       PutDownStanding;                                         // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       PutDownCrouching;                                        // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ConsumeStanding;                                         // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ConsumeCrouching;                                        // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ConsumeHidespot;                                         // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ThrowSequence;                                           // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       RaiseToThrowStart;                                       // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       RaiseToThrowIdle;                                        // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       RaiseToThrowStop;                                        // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UAnimSequence*>                               Breakers;                                                // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.WorldDisturbanceData
	 * Size -> 0x0010
	 */
	struct FWorldDisturbanceData
	{
	public:
		unsigned char                                              UnknownData_JQHY[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PawnAnimOptimData
	 * Size -> 0x0020
	 */
	struct FPawnAnimOptimData
	{
	public:
		class ARBPawn*                                             RBPawn;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_29S7[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SkelMeshActorOptimData
	 * Size -> 0x0010
	 */
	struct FSkelMeshActorOptimData
	{
	public:
		class ASkeletalMeshActor*                                  SkelMeshActor;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AC6V[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimPlayStat
	 * Size -> 0x00B8
	 */
	struct FAnimPlayStat
	{
	public:
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               specialMove;                                             // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1VFR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PlayCount;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastPlayTime;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABXK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              NPCTypes[0x50];                                          // 0x0018(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              NPCIds[0x50];                                            // 0x0068(0x0050) UNKNOWN PROPERTY: SetProperty
	};

	/**
	 * ScriptStruct OPP.AnimCategoryStats
	 * Size -> 0x0010
	 */
	struct FAnimCategoryStats
	{
	public:
		TArray<struct FAnimPlayStat>                               stats;                                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBAnimRef
	 * Size -> 0x0030
	 */
	struct FRBAnimRef
	{
	public:
		class UAnimationAsset*                                     ThirdPersonAnim;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ThirdPersonAnim : 1;                           // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADTK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationAsset*                                     FirstPersonAnim;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FirstPersonAnim : 1;                           // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SODQ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationAsset*                                     AlertedStanceAnim;                                       // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_AlertedStanceAnim : 1;                         // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A61U[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ClimbOntoAnimRefs
	 * Size -> 0x00E0
	 */
	struct FClimbOntoAnimRefs
	{
	public:
		struct FRBAnimRef                                          ClimbOnto_50to75;                                        // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_50to75 : 1;                          // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IDN4[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOnto_75to150;                                       // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_75to150 : 1;                         // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ASD[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOnto_150to200;                                      // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_150to200 : 1;                        // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E970[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOnto_200to300;                                      // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_200to300 : 1;                        // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEQO[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ClimbOntoBGAnimRefs
	 * Size -> 0x0020
	 */
	struct FClimbOntoBGAnimRefs
	{
	public:
		class UBlendSpaceBase*                                     ClimbOnto_50to100;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_50to100 : 1;                         // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4XH[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     ClimbOnto_100to150;                                      // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOnto_100to150 : 1;                        // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BQ70[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ClimbDownAnimRefs
	 * Size -> 0x00A8
	 */
	struct FClimbDownAnimRefs
	{
	public:
		struct FRBAnimRef                                          ClimbDown_50to100;                                       // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbDown_50to100 : 1;                         // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U41S[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbDown_100to150;                                      // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbDown_100to150 : 1;                        // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7RO[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbDown_ToFalling;                                     // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbDown_ToFalling : 1;                       // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5W6[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ClimbOverAnimRefs
	 * Size -> 0x00E0
	 */
	struct FClimbOverAnimRefs
	{
	public:
		struct FRBAnimRef                                          ClimbOver_150to200;                                      // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOver_150to200 : 1;                        // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKDG[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOver_200to300;                                      // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOver_200to300 : 1;                        // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5J0G[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOver_Down_100to150;                                 // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOver_Down_100to150 : 1;                   // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BEAR[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ClimbOver_Down_ToFall;                                   // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ClimbOver_Down_ToFall : 1;                     // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PI2V[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.JumpOverAnimRefs
	 * Size -> 0x04E8
	 */
	struct FJumpOverAnimRefs
	{
	public:
		struct FRBAnimRef                                          JumpOver_Running_25to100;                                // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Running_25to100 : 1;                  // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4EG[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_Running_LowHeight_25to100;                      // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Running_LowHeight_25to100 : 1;        // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFLR[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_Running_LowHeight_100to150;                     // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Running_LowHeight_100to150 : 1;       // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB0V[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_Running_100to150;                               // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Running_100to150 : 1;                 // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UWU[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_Walking_25to100;                                // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Walking_25to100 : 1;                  // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PD3B[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_Walking_LowHeight_25to100;                      // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_Walking_LowHeight_25to100 : 1;        // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFN5[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_NoContact_25to100;                              // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_NoContact_25to100 : 1;                // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XAWZ[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_NoContact_100to150;                             // 0x0188(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_NoContact_100to150 : 1;               // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VEU[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FClimbOverAnimRefs                                  JumpOver_ClimbOver_Flat;                                 // 0x01C0(0x00E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_ClimbOver_Flat : 1;                   // 0x02A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BJX[0x7];                                   // 0x02A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FClimbOverAnimRefs                                  JumpOver_ClimbOver_Angled45Right;                        // 0x02A8(0x00E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_ClimbOver_Angled45Right : 1;          // 0x0388(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1O00[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FClimbOverAnimRefs                                  JumpOver_ClimbOver_Angled45Left;                         // 0x0390(0x00E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_ClimbOver_Angled45Left : 1;           // 0x0470(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5JJ1[0x7];                                   // 0x0471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_SlideOver;                                      // 0x0478(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_SlideOver : 1;                        // 0x04A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYFA[0x7];                                   // 0x04A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpOver_BigGruntLowClearance_100to150;                  // 0x04B0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_BigGruntLowClearance_100to150 : 1;    // 0x04E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPB5[0x7];                                   // 0x04E1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.JumpOverBGAnimRefs
	 * Size -> 0x0010
	 */
	struct FJumpOverBGAnimRefs
	{
	public:
		class UBlendSpaceBase*                                     JumpOver_25to100Deep;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpOver_25to100Deep : 1;                      // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQDP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LandOntoLedgeAnimRefs
	 * Size -> 0x0030
	 */
	struct FLandOntoLedgeAnimRefs
	{
	public:
		class UAnimSequence*                                       LandOntoLedge25;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LandOntoLedge25 : 1;                           // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDOE[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       LandOntoLedge50;                                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LandOntoLedge50 : 1;                           // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTFH[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       LandOntoLedge100;                                        // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LandOntoLedge100 : 1;                          // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WC6D[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LocomotionAnimRefs
	 * Size -> 0x08F8
	 */
	struct FLocomotionAnimRefs
	{
	public:
		class UAnimSequence*                                       DeadPose;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DeadPose : 1;                                  // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC2D[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FClimbOntoAnimRefs                                  ClimbOntoWalk;                                           // 0x0010(0x00E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FClimbOntoAnimRefs                                  ClimbOntoRun;                                            // 0x00F0(0x00E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FClimbOntoBGAnimRefs                                ClimbOntoBigGrunt;                                       // 0x01D0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FClimbDownAnimRefs                                  ClimbDownStanding;                                       // 0x01F0(0x00A8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FClimbDownAnimRefs                                  ClimbDownCrouching;                                      // 0x0298(0x00A8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FJumpOverAnimRefs                                   JumpOver;                                                // 0x0340(0x04E8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FJumpOverBGAnimRefs                                 JumpOverBigGrunt;                                        // 0x0828(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     DodgeBS;                                                 // 0x0838(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DodgeBS : 1;                                   // 0x0840(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QWJU[0x7];                                   // 0x0841(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     PushFromLedgeAnimatedBlendSpace;                         // 0x0848(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PushFromLedgeAnimatedBlendSpace : 1;           // 0x0850(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83TQ[0x7];                                   // 0x0851(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PushFromLedgeToFallAnimated;                             // 0x0858(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PushFromLedgeToFallAnimated : 1;               // 0x0860(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R25S[0x7];                                   // 0x0861(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLandOntoLedgeAnimRefs                              LandOntoLedgeWall;                                       // 0x0868(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LandOntoLedgeWall : 1;                         // 0x0898(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QWSW[0x7];                                   // 0x0899(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLandOntoLedgeAnimRefs                              LandOntoLedgeNoWall;                                     // 0x08A0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LandOntoLedgeNoWall : 1;                       // 0x08D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HTHH[0x7];                                   // 0x08D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NormalLand;                                              // 0x08D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NormalLand : 1;                                // 0x08E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LX6D[0x7];                                   // 0x08E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       MediumLand;                                              // 0x08E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MediumLand : 1;                                // 0x08F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QDJL[0x7];                                   // 0x08F1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.FatalityAnimSet
	 * Size -> 0x0040
	 */
	struct FFatalityAnimSet
	{
	public:
		class UAnimSequence*                                       FrontAttacker;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       FrontVictim;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       LeftAttacker;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       LeftVictim;                                              // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       RightAttacker;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       RightVictim;                                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       BackAttacker;                                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       BackVictim;                                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CombatAnimRefs
	 * Size -> 0x01D0
	 */
	struct FCombatAnimRefs
	{
	public:
		class UAnimSequence*                                       HitReactionTwitch;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionTwitch : 1;                         // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJUD[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     StaggerBlendSpace;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StaggerBlendSpace : 1;                         // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_77GX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     StumbleBlendSpace;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StumbleBlendSpace : 1;                         // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5Y2Y[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactionBigStumbleForward;                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionBigStumbleForward : 1;              // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22VW[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactionBigStumbleLeft;                               // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionBigStumbleLeft : 1;                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGCU[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactionBigStumbleRight;                              // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionBigStumbleRight : 1;                // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59RY[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactionBigStumbleBack;                               // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionBigStumbleBack : 1;                 // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73QG[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactionKnockdown;                                    // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HitReactionKnockdown : 1;                      // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQTM[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       ReactionNearDeathToKnockdown;                            // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ReactionNearDeathToKnockdown : 1;              // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_URLL[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       SelfHelpUpInSas;                                         // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SelfHelpUpInSas : 1;                           // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K044[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       SelfRevive;                                              // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SelfRevive : 1;                                // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2Q5[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PlayerInterruptingFatalityOnThisNPC;                     // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerInterruptingFatalityOnThisNPC : 1;       // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_18F3[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PlayerShovingThisNPC;                                    // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerShovingThisNPC : 1;                      // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2G17[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PlayerInterruptingGroundAndPoundOnThisNPC;               // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerInterruptingGroundAndPoundOnThisNPC : 1; // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUSU[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PusherAttackAttacker;                                    // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PusherAttackAttacker : 1;                      // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8FL1[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PusherAttackVictim;                                      // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PusherAttackVictim : 1;                        // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQMP[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PusherAttackGroup;                                       // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PusherAttackGroup : 1;                         // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8K9G[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PairedAttackAttacker;                                    // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PairedAttackAttacker : 1;                      // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1K8E[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PairedAttackVictim;                                      // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PairedAttackVictim : 1;                        // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9N7F[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFatalityAnimSet>                            StandardFatalities;                                      // 0x0130(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StandardFatalities : 1;                        // 0x0140(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OC28[0x7];                                   // 0x0141(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFatalityAnimSet>                            LastManStandingFatalities;                               // 0x0148(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LastManStandingFatalities : 1;                 // 0x0158(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_089K[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityFrontAttacker;                           // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityFrontAttacker : 1;             // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQEM[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityFrontVictim;                             // 0x0170(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityFrontVictim : 1;               // 0x0178(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJHM[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityLeftAttacker;                            // 0x0180(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityLeftAttacker : 1;              // 0x0188(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K288[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityLeftVictim;                              // 0x0190(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityLeftVictim : 1;                // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XSY3[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityRightAttacker;                           // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityRightAttacker : 1;             // 0x01A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCXX[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        PrescottFatalityRightVictim;                             // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PrescottFatalityRightVictim : 1;               // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXHQ[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       KnockdownToDeath;                                        // 0x01C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_KnockdownToDeath : 1;                          // 0x01C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKZU[0x7];                                   // 0x01C9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InteractionsAnimRefs
	 * Size -> 0x01A8
	 */
	struct FInteractionsAnimRefs
	{
	public:
		class UBlendSpaceBase*                                     GenericPickUpBlendSpace;                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericPickUpBlendSpace : 1;                   // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_COL6[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     GenericCrouchedPickUpBlendSpace;                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericCrouchedPickUpBlendSpace : 1;           // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GHFT[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     GenericPickUpFromTopBlendSpace;                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericPickUpFromTopBlendSpace : 1;            // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F2TO[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     GenericCrouchedPickUpFromTopBlendSpace;                  // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericCrouchedPickUpFromTopBlendSpace : 1;    // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYA1[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       GenericDropItem;                                         // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericDropItem : 1;                           // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PEOZ[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       GenericCrouchedDropItem;                                 // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GenericCrouchedDropItem : 1;                   // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXVZ[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       ThrowSmallWeapon;                                        // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ThrowSmallWeapon : 1;                          // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVM5[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ActivateDynamicObstacleLeft;                             // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActivateDynamicObstacleLeft : 1;               // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8EM[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ActivateDynamicObstacleRight;                            // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActivateDynamicObstacleRight : 1;              // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0C0Q[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       BashDynamicObstacle;                                     // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BashDynamicObstacle : 1;                       // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNZM[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       BashWindow;                                              // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BashWindow : 1;                                // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DBD[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          WalkJumpTroughWindowToLand;                              // 0x0100(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_WalkJumpTroughWindowToLand : 1;                // 0x0130(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GXA6[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          RunJumpTroughWindowToLand;                               // 0x0138(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RunJumpTroughWindowToLand : 1;                 // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUNY[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          JumpTroughWindowToFall;                                  // 0x0170(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpTroughWindowToFall : 1;                    // 0x01A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B236[0x7];                                   // 0x01A1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DoorInteractionsAnimRefs
	 * Size -> 0x02E0
	 */
	struct FDoorInteractionsAnimRefs
	{
	public:
		class UAnimSequenceBase*                                   OpenLeft;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OpenLeft : 1;                                  // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N188[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   OpenLeftFailed;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OpenLeftFailed : 1;                            // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S61[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   OpenRight;                                               // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OpenRight : 1;                                 // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XVM[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   OpenRightFailed;                                         // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OpenRightFailed : 1;                           // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CRXD[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideLeft;                                         // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideLeft : 1;                           // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LYYU[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideLeftChase;                                    // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideLeftChase : 1;                      // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5HOL[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideLeftRunning;                                  // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideLeftRunning : 1;                    // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XEY3[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideRight;                                        // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideRight : 1;                          // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_458Q[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideRightChase;                                   // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideRightChase : 1;                     // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O35V[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseInsideRightRunning;                                 // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseInsideRightRunning : 1;                   // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2HA[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideLeft;                                        // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideLeft : 1;                          // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ET32[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideLeftChase;                                   // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideLeftChase : 1;                     // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AV48[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideLeftRunning;                                 // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideLeftRunning : 1;                   // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V19A[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideRight;                                       // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideRight : 1;                         // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUFH[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideRightChase;                                  // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideRightChase : 1;                    // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HI97[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CloseOutsideRightRunning;                                // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CloseOutsideRightRunning : 1;                  // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CN2B[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedOpenLeft;                                        // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedOpenLeft : 1;                          // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QH8[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedOpenLeftFailed;                                  // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedOpenLeftFailed : 1;                    // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXB8[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedOpenRight;                                       // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedOpenRight : 1;                         // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R07E[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedOpenRightFailed;                                 // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedOpenRightFailed : 1;                   // 0x0138(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TBT[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseInsideLeft;                                 // 0x0140(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseInsideLeft : 1;                   // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K3PC[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseInsideLeftChase;                            // 0x0150(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseInsideLeftChase : 1;              // 0x0158(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RR1N[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseInsideRight;                                // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseInsideRight : 1;                  // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G0HJ[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseInsideRightChase;                           // 0x0170(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseInsideRightChase : 1;             // 0x0178(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PA4O[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseOutsideLeft;                                // 0x0180(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseOutsideLeft : 1;                  // 0x0188(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9GM[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseOutsideLeftChase;                           // 0x0190(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseOutsideLeftChase : 1;             // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKRE[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseOutsideRight;                               // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseOutsideRight : 1;                 // 0x01A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5W6M[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   CrouchedCloseOutsideRightChase;                          // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CrouchedCloseOutsideRightChase : 1;            // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O0V0[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenInLeft;                                          // 0x01C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenInLeft : 1;                            // 0x01C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OCI[0x7];                                   // 0x01C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenInRight;                                         // 0x01D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenInRight : 1;                           // 0x01D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ZVP[0x7];                                   // 0x01D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenLeft;                                            // 0x01E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenLeft : 1;                              // 0x01E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8N71[0x7];                                   // 0x01E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenRight;                                           // 0x01F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenRight : 1;                             // 0x01F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KS4T[0x7];                                   // 0x01F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenOutForwardLeft;                                  // 0x0200(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenOutForwardLeft : 1;                    // 0x0208(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QV1C[0x7];                                   // 0x0209(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenOutForwardRight;                                 // 0x0210(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenOutForwardRight : 1;                   // 0x0218(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8A0[0x7];                                   // 0x0219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenOutBackwardLeft;                                 // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenOutBackwardLeft : 1;                   // 0x0228(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPCU[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenOutBackwardRight;                                // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenOutBackwardRight : 1;                  // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U549[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   SlowOpenOutByInterruption;                               // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SlowOpenOutByInterruption : 1;                 // 0x0248(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRTD[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Kick_Open_Left;                                     // 0x0250(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Kick_Open_Left : 1;                       // 0x0258(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUVB[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Kick_Try_Left;                                      // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Kick_Try_Left : 1;                        // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPLE[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Kick_Open_Right;                                    // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Kick_Open_Right : 1;                      // 0x0278(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4WV[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Kick_Try_Right;                                     // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Kick_Try_Right : 1;                       // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AXU[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Shoulder_Open_Left;                                 // 0x0290(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Shoulder_Open_Left : 1;                   // 0x0298(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B9D1[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Shoulder_Try_Left;                                  // 0x02A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Shoulder_Try_Left : 1;                    // 0x02A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LG7G[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Shoulder_Open_Right;                                // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Shoulder_Open_Right : 1;                  // 0x02B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S9T[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_Shoulder_Try_Right;                                 // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Shoulder_Try_Right : 1;                   // 0x02C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FHBF[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                   Bash_UnhingeDoor;                                        // 0x02D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_UnhingeDoor : 1;                          // 0x02D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OP66[0x7];                                   // 0x02D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCAttackAnimRefs
	 * Size -> 0x00A0
	 */
	struct FNPCAttackAnimRefs
	{
	public:
		TArray<class UAnimSequence*>                               NPC_AttackQuick;                                         // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_AttackQuick : 1;                           // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68MI[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_AttackLow;                                           // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_AttackLow : 1;                             // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZBLQ[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_PushOtherPawn;                                       // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_PushOtherPawn : 1;                         // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8KKC[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_SpineAmpAttack;                                      // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_SpineAmpAttack : 1;                        // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EI1U[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_BerserkAttack;                                       // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_BerserkAttack : 1;                         // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SKU[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       GooseberrySwipe;                                         // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GooseberrySwipe : 1;                           // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UE9R[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       GooseberryLunge;                                         // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GooseberryLunge : 1;                           // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6VG[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_Lunge;                                               // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_Lunge : 1;                                 // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DHD[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Imposter_Charge;                                         // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Imposter_Charge : 1;                           // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LIJ8[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCSabotageAnimRefs
	 * Size -> 0x0020
	 */
	struct FNPCSabotageAnimRefs
	{
	public:
		class UAnimSequence*                                       NPC_BreakGenerator;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_BreakGenerator : 1;                        // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PPV7[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_BreakDistractor;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_BreakDistractor : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G14X[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCActionsAnimRefs
	 * Size -> 0x02E0
	 */
	struct FNPCActionsAnimRefs
	{
	public:
		struct FNPCSabotageAnimRefs                                NPC_SabotageAnimRefs;                                    // 0x0000(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       NPC_Investigate_Long;                                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_Investigate_Long : 1;                      // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Y9D[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_Investigate_Short;                                   // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_Investigate_Short : 1;                     // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JGX6[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_Investigate_LedgeDrop;                               // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_Investigate_LedgeDrop : 1;                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O197[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_InvestigationBreakers;                               // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_InvestigationBreakers : 1;                 // 0x0060(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSRL[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_GiveUpInvestigationAnims;                            // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GiveUpInvestigationAnims : 1;              // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HY6N[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_GiveUpAlertedAnims;                                  // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GiveUpAlertedAnims : 1;                    // 0x0090(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRIY[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_GiveUpSuspiciousAnims;                               // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GiveUpSuspiciousAnims : 1;                 // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ACZP[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_PlayerTauntAnims;                                    // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_PlayerTauntAnims : 1;                      // 0x00C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y372[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_BerserkIdleBreakers;                                 // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_BerserkIdleBreakers : 1;                   // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8V40[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     NPC_ReactToPlayer;                                       // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToPlayer : 1;                         // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L4LF[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ReactToGrenade;                                      // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToGrenade : 1;                        // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IFBA[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_TrapReaction;                                        // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_TrapReaction : 1;                          // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H7Y5[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_CheckSurroundings;                                   // 0x0110(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_CheckSurroundings : 1;                     // 0x0120(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEFB[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     TurnOnSpotBS;                                            // 0x0128(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TurnOnSpotBS : 1;                              // 0x0130(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L3ZQ[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     KnockOutBS;                                              // 0x0138(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_KnockOutBS : 1;                                // 0x0140(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHI4[0x7];                                   // 0x0141(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_GetUpFromKnockout_Short;                             // 0x0148(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GetUpFromKnockout_Short : 1;               // 0x0150(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NO0P[0x7];                                   // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_GetUpFromKnockout_Long;                              // 0x0158(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GetUpFromKnockout_Long : 1;                // 0x0160(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZVE[0x7];                                   // 0x0161(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ShotgunAttack;                                       // 0x0168(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ShotgunAttack : 1;                         // 0x0170(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1V3K[0x7];                                   // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ShotgunReload;                                       // 0x0178(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ShotgunReload : 1;                         // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQ3F[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_HaarpReactions;                                      // 0x0188(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_HaarpReactions : 1;                        // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QC0A[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_ReactToGrenadeStun;                                  // 0x01A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToGrenadeStun : 1;                    // 0x01B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQ0D[0x7];                                   // 0x01B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_GrenadeStun;                                         // 0x01B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GrenadeStun : 1;                           // 0x01C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPCG[0x7];                                   // 0x01C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_RecoverFromGrenadeStun;                              // 0x01D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_RecoverFromGrenadeStun : 1;                // 0x01E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GOJR[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ReactToBlindPaint_Left;                              // 0x01E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToBlindPaint_Left : 1;                // 0x01F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6B9D[0x7];                                   // 0x01F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ReactToBlindPaint_Right;                             // 0x01F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToBlindPaint_Right : 1;               // 0x0200(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SM5Y[0x7];                                   // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ReactToBlindPaint_Forward;                           // 0x0208(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToBlindPaint_Forward : 1;             // 0x0210(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GEP1[0x7];                                   // 0x0211(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_ReactToHealSlowdown;                                 // 0x0218(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ReactToHealSlowdown : 1;                   // 0x0220(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHGT[0x7];                                   // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_StalkerTargetBulbExplodeReaction;                    // 0x0228(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_StalkerTargetBulbExplodeReaction : 1;      // 0x0230(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_46PI[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_RecoverFromBlindPaint;                               // 0x0238(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_RecoverFromBlindPaint : 1;                 // 0x0248(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2HK[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_ChaseBreakers;                                       // 0x0250(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_ChaseBreakers : 1;                         // 0x0260(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTQE[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               NPC_FlinchReactions;                                     // 0x0268(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_FlinchReactions : 1;                       // 0x0278(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96IM[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_GoryDeath;                                           // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_GoryDeath : 1;                             // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXNN[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Pitcher_ThrowMolotov;                                    // 0x0290(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Pitcher_ThrowMolotov : 1;                      // 0x0298(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T6W5[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Pitcher_EquipMolotov;                                    // 0x02A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Pitcher_EquipMolotov : 1;                      // 0x02A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8DA[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Pitcher_UnequipMolotov;                                  // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Pitcher_UnequipMolotov : 1;                    // 0x02B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NW0S[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_SlamDoorLeft;                                        // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_SlamDoorLeft : 1;                          // 0x02C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPXQ[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       NPC_SlamDoorRight;                                       // 0x02D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_NPC_SlamDoorRight : 1;                         // 0x02D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZRY[0x7];                                   // 0x02D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PouncerGnPAnimRefs
	 * Size -> 0x02A0
	 */
	struct FPouncerGnPAnimRefs
	{
	public:
		class UAnimSequence*                                       EnterPouncerGnPAttacker_FreeStanding;                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_FreeStanding : 1;      // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQXP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_FreeStanding;                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_FreeStanding : 1;      // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JS8D[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_StandingLeft;                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_StandingLeft : 1;      // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHNK[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_StandingLeft;                    // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_StandingLeft : 1;      // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SM8S[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_StandingRight;                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_StandingRight : 1;     // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KULW[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_StandingRight;                   // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_StandingRight : 1;     // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DWE5[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_ProneLeft;                       // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_ProneLeft : 1;         // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRI9[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_ProneLeft;                       // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_ProneLeft : 1;         // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UJ82[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_ProneRight;                      // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_ProneRight : 1;        // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ONH3[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_ProneRight;                      // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_ProneRight : 1;        // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMJJ[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_Crouched;                        // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_Crouched : 1;          // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5EZL[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_Crouched;                        // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_Crouched : 1;          // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0O9[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_InsideHorizontal;                // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_InsideHorizontal : 1;  // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NEF8[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_InsideHorizontal;                // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_InsideHorizontal : 1;  // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTD7[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_InsideVertical;                  // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_InsideVertical : 1;    // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCP0[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_InsideVertical;                  // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_InsideVertical : 1;    // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUTH[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       EnterPouncerGnPAttacker_CarTrunk;                        // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPAttacker_CarTrunk : 1;          // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LME[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     EnterPouncerGnPVictimBS_CarTrunk;                        // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_EnterPouncerGnPVictimBS_CarTrunk : 1;          // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F20U[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       SignalTackle;                                            // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SignalTackle : 1;                              // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8A5E[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       TackleFail;                                              // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TackleFail : 1;                                // 0x0138(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UYYB[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPFinishAttacker;                                // 0x0140(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPFinishAttacker : 1;                  // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TVGS[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPFinishVictimKnockdown;                         // 0x0150(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPFinishVictimKnockdown : 1;           // 0x0158(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ASU7[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPFinishVictimDead;                              // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPFinishVictimDead : 1;                // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J645[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPGiveUpAttacker;                                // 0x0170(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPGiveUpAttacker : 1;                  // 0x0178(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8KVC[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPGiveUpVictim;                                  // 0x0180(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPGiveUpVictim : 1;                    // 0x0188(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CD6[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptInterrupter;                          // 0x0190(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptInterrupter : 1;            // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PD10[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptFwdPouncer;                           // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptFwdPouncer : 1;             // 0x01A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NBEX[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptFwdPinnedPlayer;                      // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptFwdPinnedPlayer : 1;        // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HD2O[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptLeftPouncer;                          // 0x01C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptLeftPouncer : 1;            // 0x01C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOPC[0x7];                                   // 0x01C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptLeftPinnedPlayer;                     // 0x01D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptLeftPinnedPlayer : 1;       // 0x01D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S6OB[0x7];                                   // 0x01D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptRightPouncer;                         // 0x01E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptRightPouncer : 1;           // 0x01E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6W4K[0x7];                                   // 0x01E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptRightPinnedPlayer;                    // 0x01F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptRightPinnedPlayer : 1;      // 0x01F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RE8[0x7];                                   // 0x01F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptBackPouncer;                          // 0x0200(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptBackPouncer : 1;            // 0x0208(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2HJS[0x7];                                   // 0x0209(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPInterruptBackPinnedPlayer;                     // 0x0210(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPInterruptBackPinnedPlayer : 1;       // 0x0218(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBEW[0x7];                                   // 0x0219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeFistLeftPlayer;                          // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeFistLeftPlayer : 1;            // 0x0228(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4OZ9[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeBottleLeftPlayer;                        // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeBottleLeftPlayer : 1;          // 0x0238(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RRO[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeBrickLeftPlayer;                         // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeBrickLeftPlayer : 1;           // 0x0248(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6UY2[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeLeftPouncer;                             // 0x0250(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeLeftPouncer : 1;               // 0x0258(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C8E3[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeFistRightPlayer;                         // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeFistRightPlayer : 1;           // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXA9[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeBottleRightPlayer;                       // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeBottleRightPlayer : 1;         // 0x0278(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q028[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeBrickRightPlayer;                        // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeBrickRightPlayer : 1;          // 0x0288(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6XB[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       PouncerGnPEscapeRightPouncer;                            // 0x0290(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPEscapeRightPouncer : 1;              // 0x0298(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HT4[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CoopTrapAnimRefs
	 * Size -> 0x01F8
	 */
	struct FCoopTrapAnimRefs
	{
	public:
		struct FRBAnimRef                                          VictimEnter;                                             // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VictimEnter : 1;                               // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3IJ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          VictimLoop;                                              // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VictimLoop : 1;                                // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8XN[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          VictimExit;                                              // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VictimExit : 1;                                // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SDNL[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          VictimFailKnockdown;                                     // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VictimFailKnockdown : 1;                       // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEWR[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          VictimFailDeath;                                         // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VictimFailDeath : 1;                           // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULZ8[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HelperEnterLeft;                                         // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HelperEnterLeft : 1;                           // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MDBH[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HelperEnterRight;                                        // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HelperEnterRight : 1;                          // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2NC[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HelperLoop;                                              // 0x0188(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HelperLoop : 1;                                // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKJL[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HelperExit;                                              // 0x01C0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HelperExit : 1;                                // 0x01F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3B76[0x7];                                   // 0x01F1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerHelpUpAnimSet
	 * Size -> 0x01C0
	 */
	struct FPlayerHelpUpAnimSet
	{
	public:
		struct FRBAnimRef                                          Entry_Follower;                                          // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Entry_Follower : 1;                            // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLYC[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Entry_Leader;                                            // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Entry_Leader : 1;                              // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TT5J[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Try_Follower;                                            // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Try_Follower : 1;                              // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A2B1[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Try_Leader;                                              // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Try_Leader : 1;                                // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9YZJ[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Leave_Leader;                                            // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Leave_Leader : 1;                              // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BS52[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Success_Follower;                                        // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Success_Follower : 1;                          // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FMN[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Success_Leader;                                          // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Success_Leader : 1;                            // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DRSN[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Fail_Follower;                                           // 0x0188(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Fail_Follower : 1;                             // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RAKJ[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerHelpUpAnimRefs
	 * Size -> 0x0720
	 */
	struct FPlayerHelpUpAnimRefs
	{
	public:
		struct FPlayerHelpUpAnimSet                                Forward;                                                 // 0x0000(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Forward : 1;                                   // 0x01C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G42S[0x7];                                   // 0x01C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHelpUpAnimSet                                Backward;                                                // 0x01C8(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Backward : 1;                                  // 0x0388(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YVV[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHelpUpAnimSet                                Right;                                                   // 0x0390(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Right : 1;                                     // 0x0550(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XM1T[0x7];                                   // 0x0551(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHelpUpAnimSet                                Left;                                                    // 0x0558(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Left : 1;                                      // 0x0718(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2M93[0x7];                                   // 0x0719(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerReviveAnimSet
	 * Size -> 0x0188
	 */
	struct FPlayerReviveAnimSet
	{
	public:
		struct FRBAnimRef                                          Entry_Follower;                                          // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Entry_Follower : 1;                            // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H83O[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Entry_Leader;                                            // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Entry_Leader : 1;                              // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZTN[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Try_Follower;                                            // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Try_Follower : 1;                              // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JF42[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Try_Leader;                                              // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Try_Leader : 1;                                // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNUP[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Leave_Leader;                                            // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Leave_Leader : 1;                              // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NC1P[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Success_Follower;                                        // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Success_Follower : 1;                          // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHE4[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Success_Leader;                                          // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Success_Leader : 1;                            // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LHT[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerReviveAnimRefs
	 * Size -> 0x0640
	 */
	struct FPlayerReviveAnimRefs
	{
	public:
		struct FPlayerReviveAnimSet                                Forward;                                                 // 0x0000(0x0188) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Forward : 1;                                   // 0x0188(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTLY[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerReviveAnimSet                                Backward;                                                // 0x0190(0x0188) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Backward : 1;                                  // 0x0318(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CE9V[0x7];                                   // 0x0319(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerReviveAnimSet                                Right;                                                   // 0x0320(0x0188) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Right : 1;                                     // 0x04A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BZO[0x7];                                   // 0x04A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerReviveAnimSet                                Left;                                                    // 0x04B0(0x0188) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Left : 1;                                      // 0x0638(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1JG[0x7];                                   // 0x0639(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CoopMoveAnimRefs
	 * Size -> 0x12A8
	 */
	struct FCoopMoveAnimRefs
	{
	public:
		struct FRBAnimRef                                          HighJump_Catch_StepIn_Leader;                            // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Catch_StepIn_Leader : 1;              // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W2LN[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Catch_StepOut_Leader;                           // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Catch_StepOut_Leader : 1;             // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0TSA[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Catch_FromJump_Leader;                          // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Catch_FromJump_Leader : 1;            // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OW54[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Catch_FromToss_Leader;                          // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Catch_FromToss_Leader : 1;            // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PBLZ[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Toss_StepIn_Front_Leader;                       // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Toss_StepIn_Front_Leader : 1;         // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JD0Y[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Toss_StepIn_Back_Leader;                        // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Toss_StepIn_Back_Leader : 1;          // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NS42[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Toss_Leader;                                    // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Toss_Leader : 1;                      // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATTU[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Catch_Follower;                                 // 0x0188(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Catch_Follower : 1;                   // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7YLC[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_Toss_Follower;                                  // 0x01C0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_Toss_Follower : 1;                    // 0x01F0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXJ2[0x7];                                   // 0x01F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          HighJump_TossCatch_Follower;                             // 0x01F8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HighJump_TossCatch_Follower : 1;               // 0x0228(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6U9[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          CoopClimbOver_Toss_Follower;                             // 0x0230(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CoopClimbOver_Toss_Follower : 1;               // 0x0260(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_624G[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_Follower_Wall;                             // 0x0268(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_Follower_Wall : 1;               // 0x0298(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N28D[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_Follower_NoWall;                           // 0x02A0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_Follower_NoWall : 1;             // 0x02D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXRO[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_Follower_Catch;                            // 0x02D8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_Follower_Catch : 1;              // 0x0308(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXBU[0x7];                                   // 0x0309(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_StepIn_Left_Leader;                        // 0x0310(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_StepIn_Left_Leader : 1;          // 0x0340(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5UB[0x7];                                   // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_StepIn_Right_Leader;                       // 0x0348(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_StepIn_Right_Leader : 1;         // 0x0378(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CAKP[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_Left_Leader;                               // 0x0380(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_Left_Leader : 1;                 // 0x03B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_65YQ[0x7];                                   // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Toss_Right_Leader;                              // 0x03B8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Toss_Right_Leader : 1;                // 0x03E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HGIN[0x7];                                   // 0x03E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Jump_Follower;                                  // 0x03F0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Jump_Follower : 1;                    // 0x0420(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3TC4[0x7];                                   // 0x0421(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Catch_StepIn_Leader;                            // 0x0428(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Catch_StepIn_Leader : 1;              // 0x0458(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFNS[0x7];                                   // 0x0459(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Catch_Leader_FromJump;                          // 0x0460(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Catch_Leader_FromJump : 1;            // 0x0490(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L4VW[0x7];                                   // 0x0491(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          LongJump_Catch_Leader_FromToss;                          // 0x0498(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LongJump_Catch_Leader_FromToss : 1;            // 0x04C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JYA[0x7];                                   // 0x04C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Bash_Enter_Left;                                         // 0x04D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Enter_Left : 1;                           // 0x04D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YQTU[0x7];                                   // 0x04D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Bash_Action_Left;                                        // 0x04E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Action_Left : 1;                          // 0x04E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_64AO[0x7];                                   // 0x04E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Bash_Enter_Right;                                        // 0x04F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Enter_Right : 1;                          // 0x04F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVEP[0x7];                                   // 0x04F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Bash_Action_Right;                                       // 0x0500(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Bash_Action_Right : 1;                         // 0x0508(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F05R[0x7];                                   // 0x0509(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHelpUpAnimRefs                               PlayerHelpUp;                                            // 0x0510(0x0720) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerReviveAnimRefs                               PlayerRevive;                                            // 0x0C30(0x0640) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRBAnimRef                                          Trade_Give_Item;                                         // 0x1270(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Trade_Give_Item : 1;                           // 0x12A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9T3[0x7];                                   // 0x12A1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerHitReactionSetAnimRefs
	 * Size -> 0x01C0
	 */
	struct FPlayerHitReactionSetAnimRefs
	{
	public:
		struct FRBAnimRef                                          Start_Forward;                                           // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Start_Forward : 1;                             // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ONA[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Start_Right;                                             // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Start_Right : 1;                               // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3CG9[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Start_Back;                                              // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Start_Back : 1;                                // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0W5A[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          Start_Left;                                              // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Start_Left : 1;                                // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DE6C[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          End_Forward;                                             // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_End_Forward : 1;                               // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IYY4[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          End_Right;                                               // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_End_Right : 1;                                 // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N6RR[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          End_Back;                                                // 0x0150(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_End_Back : 1;                                  // 0x0180(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YS9F[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          End_Left;                                                // 0x0188(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_End_Left : 1;                                  // 0x01B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3I1[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerHitReactionsAnimRefs
	 * Size -> 0x08E8
	 */
	struct FPlayerHitReactionsAnimRefs
	{
	public:
		struct FPlayerHitReactionSetAnimRefs                       Light;                                                   // 0x0000(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Light : 1;                                     // 0x01C0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH1G[0x7];                                   // 0x01C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHitReactionSetAnimRefs                       Medium;                                                  // 0x01C8(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Medium : 1;                                    // 0x0388(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLTR[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHitReactionSetAnimRefs                       Heavy;                                                   // 0x0390(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Heavy : 1;                                     // 0x0550(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_88GS[0x7];                                   // 0x0551(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHitReactionSetAnimRefs                       KnockedDown;                                             // 0x0558(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_KnockedDown : 1;                               // 0x0718(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRNE[0x7];                                   // 0x0719(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerHitReactionSetAnimRefs                       Dead;                                                    // 0x0720(0x01C0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Dead : 1;                                      // 0x08E0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J2D0[0x7];                                   // 0x08E1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NightVisionAnimRefs
	 * Size -> 0x0150
	 */
	struct FNightVisionAnimRefs
	{
	public:
		struct FRBAnimRef                                          GoggleTurnOn;                                            // 0x0000(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GoggleTurnOn : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DC5M[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          GoggleTurnOff;                                           // 0x0038(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_GoggleTurnOff : 1;                             // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VP83[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ArmTurnOn;                                               // 0x0070(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ArmTurnOn : 1;                                 // 0x00A0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1FFB[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ArmTurnOff;                                              // 0x00A8(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ArmTurnOff : 1;                                // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUHS[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ArmTurnOnCrouched;                                       // 0x00E0(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ArmTurnOnCrouched : 1;                         // 0x0110(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H43M[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAnimRef                                          ArmTurnOffCrouched;                                      // 0x0118(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ArmTurnOffCrouched : 1;                        // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F7XZ[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBAnimReferencesData
	 * Size -> 0x3448
	 */
	struct FRBAnimReferencesData
	{
	public:
		struct FLocomotionAnimRefs                                 Locomotion;                                              // 0x0000(0x08F8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCombatAnimRefs                                     Combat;                                                  // 0x08F8(0x01D0) Edit, NativeAccessSpecifierPublic
		struct FInteractionsAnimRefs                               Interactions;                                            // 0x0AC8(0x01A8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDoorInteractionsAnimRefs                           DoorInteractions;                                        // 0x0C70(0x02E0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCAttackAnimRefs                                  NPCAttacks;                                              // 0x0F50(0x00A0) Edit, NativeAccessSpecifierPublic
		struct FNPCActionsAnimRefs                                 NPCActions;                                              // 0x0FF0(0x02E0) Edit, NativeAccessSpecifierPublic
		struct FPouncerGnPAnimRefs                                 PouncerGnP;                                              // 0x12D0(0x02A0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCoopTrapAnimRefs                                   CoopTrap;                                                // 0x1570(0x01F8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCoopMoveAnimRefs                                   CoopMove;                                                // 0x1768(0x12A8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerHitReactionsAnimRefs                         PlayerHitReaction;                                       // 0x2A10(0x08E8) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FNightVisionAnimRefs                                NightVision;                                             // 0x32F8(0x0150) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ArmWreslingPlayerRoundData
	 * Size -> 0x0038
	 */
	struct FArmWreslingPlayerRoundData
	{
	public:
		float                                                      multiplier;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumConsecutiveHits;                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            HitList;                                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NumRevolution;                                           // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EArmWreslingPanelInputFailType                             failType;                                                // 0x001C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQFF[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBArmWreslingPanelComponent*                        panel;                                                   // 0x0020(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           Player;                                                  // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1N1L[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SoundTriggerEvent
	 * Size -> 0x0010
	 */
	struct FSoundTriggerEvent
	{
	public:
		class UAkAudioEvent*                                       EnterEvent;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ExitEvent;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MultiPositionGroup
	 * Size -> 0x0018
	 */
	struct FMultiPositionGroup
	{
	public:
		unsigned char                                              UnknownData_WHJI[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBSoundComponent*>                           members;                                                 // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.AudioPathNode
	 * Size -> 0x0030
	 */
	struct FAudioPathNode
	{
	public:
		class URBSoundConnectorComponent*                          Connector;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTJ9[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NarrativeSoundEventsInfo
	 * Size -> 0x0020
	 */
	struct FNarrativeSoundEventsInfo
	{
	public:
		TArray<class UAkAudioEvent*>                               StartEvents;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAkAudioEvent*>                               StopEvents;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MusicEventInfo
	 * Size -> 0x0020
	 */
	struct FMusicEventInfo
	{
	public:
		EMusicEventType                                            EventType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AA8X[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventDesc;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EventRealTime;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8P2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SoundEmitterTransaction
	 * Size -> 0x0020
	 */
	struct FSoundEmitterTransaction
	{
	public:
		class URBSoundComponent*                                   SoundEmitter;                                            // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQCU[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DualSidedEmitterTransaction
	 * Size -> 0x0010
	 */
	struct FDualSidedEmitterTransaction
	{
	public:
		class URBSoundComponent*                                   SoundEmitter;                                            // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBSoundConnectorComponent*                          SoundConnector;                                          // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBMurkoffAnnouncentAudioData
	 * Size -> 0x0010
	 */
	struct FRBMurkoffAnnouncentAudioData
	{
	public:
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FixedAudioLength;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7LGP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InteractionData
	 * Size -> 0x0050
	 */
	struct FInteractionData
	{
	public:
		TArray<class UAnimSequenceBase*>                           AnimSequenceBucket;                                      // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UAnimSequenceBase*>                           ThirdPersonSpecificAnimSequenceBucket;                   // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bAnimSequenceUpperBody;                                  // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnimSequenceUpperBodyAllowsRotation;                    // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TNQ3[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimSequencePlayRate;                                    // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AnimSequenceLoopCount;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAdjustmentType                                            AdjustmentType;                                          // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KL08[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AnimLocation;                                            // 0x0030(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnimForward;                                             // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlignToGround;                                          // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockIntoOperatingLocomotion;                            // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               StartSpecialMove;                                        // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               FinishSpecialMove;                                       // 0x004B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInterruptible;                                        // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayAnimAfterAdjustPosition;                            // 0x004D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8IZU[0x2];                                   // 0x004E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InteractionSoundEvent
	 * Size -> 0x0020
	 */
	struct FInteractionSoundEvent
	{
	public:
		class UAkAudioEvent*                                       SoundEvent;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SwitchGroup;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SwitchState;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayOnInteractor;                                       // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETriggeringStimulusType                                    AIStimulusType;                                          // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bContinuousNoise;                                        // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7S8L[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BlockableLink
	 * Size -> 0x0048
	 */
	struct FBlockableLink
	{
	public:
		int32_t                                                    BlockableLinkId;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBlockableLinkType                                         LinkType;                                                // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AE4S[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SoftLinkedBlockables[0x10];                              // 0x0008(0x0010) UNKNOWN PROPERTY: ArrayProperty
		int32_t                                                    Count;                                                   // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OYUU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LinkingActor[0x28];                                      // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.ScheduledFloat
	 * Size -> 0x0010 (FullSize[0x0078] - InheritedSize[0x0068])
	 */
	struct FScheduledFloat : public FScheduledProperty
	{
	public:
		float                                                      InitialValue;                                            // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastValue;                                               // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentValue;                                            // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DesiredValue;                                            // 0x0074(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DoorInvestigationData
	 * Size -> 0x0004
	 */
	struct FDoorInvestigationData
	{
	public:
		bool                                                       bFrontValid;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFrontValid_Wide;                                        // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBackValid;                                              // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBackValid_Wide;                                         // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DoorInteractionAudioEvent
	 * Size -> 0x0010
	 */
	struct FDoorInteractionAudioEvent
	{
	public:
		unsigned char                                              UnknownData_7XT1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Event;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContainerForcedContentItemSettings
	 * Size -> 0x00D0
	 */
	struct FContainerForcedContentItemSettings
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  SpawnChancePercent;                                      // 0x0008(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContainerForcedContentSettings
	 * Size -> 0x0010
	 */
	struct FContainerForcedContentSettings
	{
	public:
		TArray<struct FContainerForcedContentItemSettings>         ForcedItemPossibilities;                                 // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContainerSpawnedItemInfo
	 * Size -> 0x0010
	 */
	struct FContainerSpawnedItemInfo
	{
	public:
		class ARBPickup*                                           Item;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelectedSpawnLocationIndex;                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3EV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BackgroundCharacterStopData
	 * Size -> 0x0018
	 */
	struct FBackgroundCharacterStopData
	{
	public:
		class UAnimationAsset*                                     StopAnim;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoBlendOutDuration;                                    // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CustomBlendOutDuration;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BackgroundCharacterLocomotionSet
	 * Size -> 0x00A8
	 */
	struct FBackgroundCharacterLocomotionSet
	{
	public:
		class UAnimationAsset*                                     ForwardLoop;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     StartForward;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     StartLeft90;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     StartRight90;                                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     StartLeft180;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     StartRight180;                                           // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBackgroundCharacterStopData                        StopForward;                                             // 0x0030(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBackgroundCharacterStopData                        StopLeft90;                                              // 0x0048(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBackgroundCharacterStopData                        StopRight90;                                             // 0x0060(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBackgroundCharacterStopData                        StopLeft180;                                             // 0x0078(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBackgroundCharacterStopData                        StopRight180;                                            // 0x0090(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomMovementParams
	 * Size -> 0x0018
	 */
	struct FRandomMovementParams
	{
	public:
		float                                                      MinStayDuration;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStayDuration;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartLocomotionRandomMax;                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8W5F[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBRandomPathMarker*                                 RandomPath;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomStationData
	 * Size -> 0x0010
	 */
	struct FRandomStationData
	{
	public:
		class ARBRandomPathMarker*                                 PathMarker;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4KUH[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BCAnimatedStartData
	 * Size -> 0x0030
	 */
	struct FBCAnimatedStartData
	{
	public:
		class UAnimSequence*                                       RefStartAnim;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OPXP[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BCAnimatedStopData
	 * Size -> 0x0050
	 */
	struct FBCAnimatedStopData
	{
	public:
		class UAnimSequence*                                       RefStopAnim;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZM41[0x48];                                  // 0x0008(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RailSlider
	 * Size -> 0x0040
	 */
	struct FRailSlider
	{
	public:
		class ARBSplineActor*                                      InitialMarker;                                           // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBSplineActor*                                      DestinationMarker;                                       // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KK21[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBSplineActor*>                              MarkerList;                                              // 0x0018(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XPB[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.FootstepData
	 * Size -> 0x0028
	 */
	struct FFootstepData
	{
	public:
		EFootStepModifierType                                      FootstepModifier;                                        // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWN9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FootstepModifierAlpha;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   FootstepBaseMaterial;                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLeftFoot;                                             // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BU4B[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StepTime;                                                // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FootLocation;                                            // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsObvious;                                              // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRunning;                                              // 0x0025(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQU1[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomLoopingAnimParams
	 * Size -> 0x0020
	 */
	struct FRandomLoopingAnimParams
	{
	public:
		class UAnimationAsset*                                     LoopingIdle;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTransitionOnCycleBoundary;                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4JH[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RelativeOdds;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPlayDuration;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPlayDuration;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPlayerDistance;                                       // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OC84[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LookingIdlesAnimParams
	 * Size -> 0x0030
	 */
	struct FLookingIdlesAnimParams
	{
	public:
		class UAnimSequence*                                       RelaxIdle;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         RelaxLook;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       AlertIdle;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                         AlertLook;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     AlertToRelax;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     RelaxToAlert;                                            // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomOneOffAnimParams
	 * Size -> 0x0018
	 */
	struct FRandomOneOffAnimParams
	{
	public:
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeOdds;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinReplayInterval;                                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPlayerDistance;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMR8[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BCReactionAnimParams
	 * Size -> 0x0020
	 */
	struct FBCReactionAnimParams
	{
	public:
		bool                                                       bEnableOnPlayerAttacked;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableOnWorldDisturbance;                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B5YG[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDisturbanceDistance;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisturbanceHeightThreshold;                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L5MZ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeOdds;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinReplayInterval;                                       // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBBackgroundCharacterStationParams
	 * Size -> 0x0060
	 */
	struct FRBBackgroundCharacterStationParams
	{
	public:
		TArray<struct FRandomLoopingAnimParams>                    LoopingIdles;                                            // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FLookingIdlesAnimParams                             LookingIdles;                                            // 0x0010(0x0030) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FRandomOneOffAnimParams>                     OneOffBreakers;                                          // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBCReactionAnimParams>                       ReactionAnims;                                           // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBMissionID
	 * Size -> 0x0028
	 */
	struct FRBMissionID
	{
	public:
		unsigned char                                              MissionInfo[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.NarrativeScreenAnimationData
	 * Size -> 0x0018
	 */
	struct FNarrativeScreenAnimationData
	{
	public:
		struct FDataTableRowHandle                                 AnimationRow;                                            // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bLoop;                                                   // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENarrativeScreenDataTableLogic                             DataTableLogic;                                          // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0DM6[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayBetweenRows;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomSettings
	 * Size -> 0x0320
	 */
	struct FRandomSettings
	{
	public:
		struct FConfigurableFloat                                  MinRatio;                                                // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MaxRatio;                                                // 0x00C8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MinCount;                                                // 0x0190(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MaxCount;                                                // 0x0258(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObjectiveRandomizationSetupData
	 * Size -> 0x04E8
	 */
	struct FObjectiveRandomizationSetupData
	{
	public:
		ERandomStateSetup                                          BaseState;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERandomStateSetup                                          DesiredState;                                            // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OAGF[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DesiredStateCount;                                       // 0x0008(0x0320) Edit, NativeAccessSpecifierPublic
		bool                                                       bSplitByObjectiveType;                                   // 0x0328(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRoomGroupsAsObjectiveType;                           // 0x0329(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseOtherCoordoActorsForDistance;                        // 0x032A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLimitOneObjectivePerRoom;                               // 0x032B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDistanceBetweenSameObjectives;                  // 0x032C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DFYF[0x3];                                   // 0x032D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  DistanceBetweenSameObjectives;                           // 0x0330(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDistanceBetweenDifferentObjectives;             // 0x03F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YF5V[0x7];                                   // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  DistanceBetweenDifferentObjectives;                      // 0x0400(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceBetweenSameObjectivesOverride;                   // 0x04C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceBetweenDifferentObjectivesOverride;              // 0x04CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOPA[0x8];                                   // 0x04D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     DesiredStateSetObjects;                                  // 0x04D8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.HidespotCameraParams
	 * Size -> 0x0010
	 */
	struct FHidespotCameraParams
	{
	public:
		struct FVector2D                                           CameraYawLimit;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CameraPitchLimit;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBComponentSelector
	 * Size -> 0x0040
	 */
	struct FRBComponentSelector
	{
	public:
		class UClass*                                              SpecificComponentClass;                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetActor[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                ComponentName;                                           // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActorComponent*                                     ActorComponent;                                          // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.TriggerableSetting
	 * Size -> 0x0088
	 */
	struct FTriggerableSetting
	{
	public:
		class ARBOperatable*                                       operatable;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RBOperatable[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FRBComponentSelector                                LinkedOperatable;                                        // 0x0030(0x0040) Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      TriggerActivationRatio;                                  // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOverrideOperatorAction                                    OverrideOperationAction;                                 // 0x0074(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NKY8[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                OrGroup;                                                 // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NUM7[0x8];                                   // 0x0080(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TriggerableSettingGroup
	 * Size -> 0x0010
	 */
	struct FTriggerableSettingGroup
	{
	public:
		TArray<struct FTriggerableSetting>                         TriggerableSettingGroup;                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ConditionalAIConfigData
	 * Size -> 0x1250
	 */
	struct FConditionalAIConfigData
	{
	public:
		unsigned char                                              UnknownData_ZK25[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBAICondition*>                              Conditions;                                              // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FAIConfigData                                       ConfigOverrides;                                         // 0x0018(0x1230) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O0AJ[0x8];                                   // 0x1248(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MoveFailedInfo
	 * Size -> 0x0010
	 */
	struct FMoveFailedInfo
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ACPL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              DestActor;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BotMemory
	 * Size -> 0x02D8
	 */
	struct FBotMemory
	{
	public:
		class AActor*                                              SpawnPointActor;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IEGE[0x158];                                 // 0x0008(0x0158) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           LastReceivedDamageFrom;                                  // 0x0160(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           LastDealtDamageTo;                                       // 0x0168(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              LastProjectileHitBy;                                     // 0x0170(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastTimeHitByAProjectile;                                // 0x0178(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JBZI[0x4];                                   // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBDoor*                                             LastUsedDoor;                                            // 0x0180(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              LastImperativeDistractor;                                // 0x0188(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAmbientStationComponent*                          LastAmbientStation;                                      // 0x0190(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMoveFailedInfo>                             FailedMovesToActor;                                      // 0x0198(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6YQ[0x130];                                 // 0x01A8(0x0130) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BotDirectorData
	 * Size -> 0x0018
	 */
	struct FBotDirectorData
	{
	public:
		unsigned char                                              UnknownData_J0N8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           InitialTargetPlayer;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PatrolConfig
	 * Size -> 0x0060
	 */
	struct FPatrolConfig
	{
	public:
		unsigned char                                              UnknownData_J6HI[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBWaypoint*>                                 WaypointList;                                            // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MROZ[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBWaypoint*                                         DestinationWaypoint;                                     // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G96M[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBAmbientStationComponent*                          DestinationAmbientStation;                               // 0x0050(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOUO[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WaypointSelectionDebugData
	 * Size -> 0x0040
	 */
	struct FWaypointSelectionDebugData
	{
	public:
		class ARBWaypoint*                                         Waypoint;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUNB[0x38];                                  // 0x0008(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PatrolData
	 * Size -> 0x0050
	 */
	struct FPatrolData
	{
	public:
		unsigned char                                              UnknownData_C7I7[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWaypointSelectionDebugData>                 WaypointSelectionData;                                   // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIAmbushVisibilityData
	 * Size -> 0x0010
	 */
	struct FAIAmbushVisibilityData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NAL0[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAmbushData
	 * Size -> 0x0048
	 */
	struct FAIAmbushData
	{
	public:
		class URBHidespotComponent*                                hidespot;                                                // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       AmbushIdle;                                              // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAIAmbushVisibilityData>                     PlayerVisibilityCheckList;                               // 0x0010(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VNNW[0x28];                                  // 0x0020(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIImperativeActionData
	 * Size -> 0x0030
	 */
	struct FAIImperativeActionData
	{
	public:
		unsigned char                                              UnknownData_31Y3[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8Z1[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIGroundAndPoundData
	 * Size -> 0x0018
	 */
	struct FAIGroundAndPoundData
	{
	public:
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CFH0[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAmbientData
	 * Size -> 0x0028
	 */
	struct FAIAmbientData
	{
	public:
		class URBAmbientStationComponent*                          CurrentAmbientStation;                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbientStartedTime;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStayDuration;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_URVV[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBAIConditionSet
	 * Size -> 0x0010
	 */
	struct FRBAIConditionSet
	{
	public:
		TArray<class URBAICondition*>                              Conditions;                                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIScriptedConfig
	 * Size -> 0x0080
	 */
	struct FAIScriptedConfig
	{
	public:
		unsigned char                                              UnknownData_XGJJ[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBAIConditionSet                                   ExitConditions;                                          // 0x0018(0x0010) ContainsInstancedReference, NativeAccessSpecifierPublic
		class UAnimSequence*                                       IdleAnim;                                                // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ExitAnim;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MXIQ[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       SingleShotAnim;                                          // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBScriptedAnimStation*                              ScriptedAnimStation;                                     // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U05D[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TargetActor;                                             // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VM9P[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIScriptedData
	 * Size -> 0x0020
	 */
	struct FAIScriptedData
	{
	public:
		EAIScriptedState                                           ScriptedState;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XH9[0x1F];                                  // 0x0001(0x001F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BotRetirementConfig
	 * Size -> 0x0018
	 */
	struct FBotRetirementConfig
	{
	public:
		unsigned char                                              UnknownData_EGAK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBMonsterCloset*                                    SpecificCloset;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIRetirementData
	 * Size -> 0x0038
	 */
	struct FAIRetirementData
	{
	public:
		unsigned char                                              UnknownData_GKVV[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBMonsterCloset*                                    MonsterClosetDestination;                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2W0C[0x28];                                  // 0x0010(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISeekingHidingSpotData
	 * Size -> 0x0028
	 */
	struct FAISeekingHidingSpotData
	{
	public:
		class URBHidespotComponent*                                TargetSpot;                                              // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBHidespotComponent*>                        FailedDestinations;                                      // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ANO[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPlayerAvoidanceData
	 * Size -> 0x0058
	 */
	struct FAIPlayerAvoidanceData
	{
	public:
		class ARBPlayer*                                           PlayerBeingAvoided;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PU3E[0x50];                                  // 0x0008(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISneakData
	 * Size -> 0x0040
	 */
	struct FAISneakData
	{
	public:
		unsigned char                                              UnknownData_IJ2L[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VIYK[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InvestigationConfig
	 * Size -> 0x0060
	 */
	struct FInvestigationConfig
	{
	public:
		unsigned char                                              UnknownData_E9I4[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      SpecifiedInvestigationPoints;                            // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMGG[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           InitialPlayerTargetLocation;                             // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J23T[0x28];                                  // 0x0038(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIMonsterClosetData
	 * Size -> 0x0018
	 */
	struct FAIMonsterClosetData
	{
	public:
		class ARBMonsterCloset*                                    ClosetActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQUL[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAttackTarget
	 * Size -> 0x0028
	 */
	struct FAIAttackTarget
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPawn*                                             TargetPawn;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetPosition;                                          // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RUDT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIAttackData
	 * Size -> 0x0070
	 */
	struct FAIAttackData
	{
	public:
		struct FAIAttackTarget                                     Target;                                                  // 0x0000(0x0028) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25OX[0x48];                                  // 0x0028(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIIdleFocusData
	 * Size -> 0x000C
	 */
	struct FAIIdleFocusData
	{
	public:
		unsigned char                                              UnknownData_HVWL[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIMolotovData
	 * Size -> 0x0010
	 */
	struct FAIMolotovData
	{
	public:
		unsigned char                                              UnknownData_48BA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIStunGrenadeData
	 * Size -> 0x0001
	 */
	struct FAIStunGrenadeData
	{
	public:
		unsigned char                                              UnknownData_Q9WB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIBlindPaintData
	 * Size -> 0x001C
	 */
	struct FAIBlindPaintData
	{
	public:
		unsigned char                                              UnknownData_NS5E[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LeashData
	 * Size -> 0x0028
	 */
	struct FLeashData
	{
	public:
		TArray<class AVolume*>                                     LeashVolumes;                                            // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsBotOutsideLeash;                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsConsideredOutsideLeash;                               // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNCZ[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OutsideLeashStartTime;                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsideredOutsideLeashStartTime;                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastInsideLeashPosition;                                 // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIReceivedDamageData
	 * Size -> 0x0018
	 */
	struct FAIReceivedDamageData
	{
	public:
		unsigned char                                              UnknownData_A7KY[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPawn*                                             Attacker;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TGJ9[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AICycleBreakerData
	 * Size -> 0x0004
	 */
	struct FAICycleBreakerData
	{
	public:
		unsigned char                                              UnknownData_KKUK[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MovementData
	 * Size -> 0x0048
	 */
	struct FMovementData
	{
	public:
		unsigned char                                              UnknownData_UYAD[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIRequestID                                        requestID;                                               // 0x0004(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DestinationActor;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5H7C[0x38];                                  // 0x0010(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIEventLogItem
	 * Size -> 0x0020
	 */
	struct FAIEventLogItem
	{
	public:
		EAILogVerbosity                                            Verbosity;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZQK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LogLine;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepeatCount;                                             // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContinuousAttackDamage
	 * Size -> 0x0028
	 */
	struct FContinuousAttackDamage
	{
	public:
		unsigned char                                              UnknownData_MVN6[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPawn*                                             Target;                                                  // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContinuousAttackDrug
	 * Size -> 0x0020
	 */
	struct FContinuousAttackDrug
	{
	public:
		unsigned char                                              UnknownData_8TIS[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBPawn*>                                     Targets;                                                 // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CameraDestructionSoundState
	 * Size -> 0x0028
	 */
	struct FCameraDestructionSoundState
	{
	public:
		class UAkAudioEvent*                                       StartEvent;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopEvent;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SuccessEvent;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StartInteractionEvent;                                   // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopInteractionEvent;                                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GameEvent
	 * Size -> 0x0050
	 */
	struct FGameEvent
	{
	public:
		EGameEvent                                                 GameEvent;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHXM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EventTime;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameEventImportanceLevel                                  Importance;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFKS[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ReferenceActor;                                          // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventDesc;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EventLocation;                                           // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9LP[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventStageName;                                          // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ActorInViewDebugData
	 * Size -> 0x0010
	 */
	struct FActorInViewDebugData
	{
	public:
		unsigned char                                              UnknownData_VGCH[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              DebugActor;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBBugItDataRequest_Server
	 * Size -> 0x0020
	 */
	struct FRBBugItDataRequest_Server
	{
	public:
		unsigned char                                              UnknownData_9Z8K[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBNPC*>                                      NPCsToProcess;                                           // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XN0H[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBBugItDataRequest_Client
	 * Size -> 0x0018
	 */
	struct FRBBugItDataRequest_Client
	{
	public:
		unsigned char                                              UnknownData_UU9E[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.QuickGraphEntry
	 * Size -> 0x000C
	 */
	struct FQuickGraphEntry
	{
	public:
		unsigned char                                              UnknownData_CJ19[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.QuickGraph
	 * Size -> 0x0028
	 */
	struct FQuickGraph
	{
	public:
		unsigned char                                              UnknownData_SIHQ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FQuickGraphEntry>                            Entries;                                                 // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7IH[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ChessClockData
	 * Size -> 0x0014
	 */
	struct FChessClockData
	{
	public:
		float                                                      MatchTotalTime;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WhiteTime;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WhiteLastUpdateTimestamp;                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlackTime;                                               // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlackLastUpdateTimestamp;                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ChessPieceData
	 * Size -> 0x0018
	 */
	struct FChessPieceData
	{
	public:
		EChessPieceType                                            PieceType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChessTeam                                                 Team;                                                    // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasMoved;                                               // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnPassant;                                              // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOutOfGame;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KXIM[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OutOfGameIndex;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChecked;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OG4Q[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIntPoint                                           Coordinates;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BoardPosition
	 * Size -> 0x0010
	 */
	struct FBoardPosition
	{
	public:
		TArray<struct FChessPieceData>                             ChessPiecesData;                                         // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HiddenActorInfo
	 * Size -> 0x0028
	 */
	struct FHiddenActorInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      HiddenAttachedActors;                                    // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         HideShadowComponents;                                    // 0x0018(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ProfileId
	 * Size -> 0x0010
	 */
	struct FProfileId
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    B;                                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    C;                                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    D;                                                       // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.RBPlayerCollectibleDocumentInfo
	 * Size -> 0x0018
	 */
	struct FRBPlayerCollectibleDocumentInfo
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProfileId                                          ProfileId;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomDoorReplacement
	 * Size -> 0x0018
	 */
	struct FRandomDoorReplacement
	{
	public:
		float                                                      Chance;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveDoorFrame;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3GZ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ReplaceActorClass;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DoubleDoorReplaceActorClass;                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomDoorLot
	 * Size -> 0x1628
	 */
	struct FRandomDoorLot
	{
	public:
		class FName                                                LotName;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBlock : 1;                                              // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bReplace : 1;                                            // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTrap : 1;                                               // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Block : 1;                                               // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOpen : 1;                                               // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4T5N[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     RewardRoomCount;                                         // 0x0010(0x0320) Edit, NativeAccessSpecifierPublic
		struct FRandomSettings                                     TrapRoomCount;                                           // 0x0330(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              Blockables[0x10];                                        // 0x0650(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FRandomSettings                                     BlockableCount;                                          // 0x0660(0x0320) Edit, NativeAccessSpecifierPublic
		struct FRandomSettings                                     ReplaceableCount;                                        // 0x0980(0x0320) Edit, NativeAccessSpecifierPublic
		TArray<struct FRandomDoorReplacement>                      ReplacementsActors;                                      // 0x0CA0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FRandomSettings                                     TrappedCount;                                            // 0x0CB0(0x0320) Edit, NativeAccessSpecifierPublic
		class UClass*                                              OverrideTrapLeftActorClass;                              // 0x0FD0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              OverrideTrapRightActorClass;                             // 0x0FD8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRandomSettings                                     LockedCount;                                             // 0x0FE0(0x0320) Edit, NativeAccessSpecifierPublic
		struct FRandomSettings                                     OpenedCount;                                             // 0x1300(0x0320) Edit, NativeAccessSpecifierPublic
		int32_t                                                    RandomizerId;                                            // 0x1620(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N9K3[0x4];                                   // 0x1624(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomScenarioSetup
	 * Size -> 0x0030
	 */
	struct FRandomScenarioSetup
	{
	public:
		class FName                                                ScenarioName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTestInGame;                                             // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEditorActive;                                           // 0x000A(0x0001) Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZFU[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ERandomStateSetup>                                  RandomActorsSetup;                                       // 0x0010(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<ERandomStateSetup>                                  RandomActorsStates_Server;                               // 0x0020(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomizationGroup
	 * Size -> 0x0050
	 */
	struct FRandomizationGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ConditionalScenariosName;                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              RandomActors[0x10];                                      // 0x0018(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FRandomScenarioSetup>                        Scenarios;                                               // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ActiveScenarioIdx_Server;                                // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActiveScenarioIdx_Client;                                // 0x003C(0x0004) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Debug_ShowActor;                                         // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Debug_ShowActorTimestamp;                                // 0x0048(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomizerId;                                            // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomizationLot
	 * Size -> 0x03C0
	 */
	struct FRandomizationLot
	{
	public:
		class FName                                                LotName;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ConditionalActors[0x28];                                 // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		ERandomStateSetup                                          ConditionalActorSetup;                                   // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F1S[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RandomActors[0x10];                                      // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              RandomActorClasses[0x10];                                // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              RestrictedSections[0x10];                                // 0x0058(0x0010) UNKNOWN PROPERTY: ArrayProperty
		bool                                                       bDontChangeIgnoredActors;                                // 0x0068(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERandomStateSetup                                          BaseState;                                               // 0x0069(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERandomStateSetup                                          DesiredState;                                            // 0x006A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FH0K[0x5];                                   // 0x006B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MinActivationRatio;                                      // 0x0070(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MaxActivationRatio;                                      // 0x0138(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MinActivationCount;                                      // 0x0200(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MaxActivationCount;                                      // 0x02C8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistanceBetweenActors;                                // 0x0390(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistanceFromSAS;                                      // 0x0394(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomizerId;                                            // 0x0398(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTH2[0x4];                                   // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ERandomStateSetup>                                  RandomActorsStates_Server;                               // 0x03A0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      RandomizedActors;                                        // 0x03B0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ConditionalScenarioSetup
	 * Size -> 0x0070
	 */
	struct FConditionalScenarioSetup
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ME3S[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ConditionActor[0x28];                                    // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIfStateA;                                               // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13QI[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RandomActors[0x10];                                      // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<ERandomStateSetup>                                  RandomActorsSetup;                                       // 0x0048(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<ERandomStateSetup>                                  RandomActorsStates_Server;                               // 0x0058(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    RandomizerId;                                            // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CBE[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomAIConfigOption
	 * Size -> 0x00E8
	 */
	struct FRandomAIConfigOption
	{
	public:
		class URBAIConfig*                                         configAsset;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBPartialAIConfig*>                          PartialConfigs;                                          // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ratio;                                                   // 0x0018(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLastOption;                                             // 0x00E0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XW66[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomAIScenario
	 * Size -> 0x0278
	 */
	struct FRandomAIScenario
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MinimumCount;                                            // 0x0010(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MaximumCount;                                            // 0x00D8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRandomAIConfigOption>                       ConfigOptions;                                           // 0x01A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  RelativeProbability;                                     // 0x01B0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomAISetup
	 * Size -> 0x0050
	 */
	struct FRandomAISetup
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_847Z[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AISpawners[0x10];                                        // 0x0018(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FRandomAIScenario>                           Scenarios;                                               // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    RandomizerId;                                            // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SC7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            NPCsToActivate;                                          // 0x0040(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SoloPlayLot
	 * Size -> 0x0010
	 */
	struct FSoloPlayLot
	{
	public:
		unsigned char                                              SoloOnlyActors[0x10];                                    // 0x0000(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct OPP.PendingRandomState
	 * Size -> 0x0010
	 */
	struct FPendingRandomState
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERandomStateSetup                                          State;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDKM[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CustomContainerPickupAnimationSettings
	 * Size -> 0x0038
	 */
	struct FCustomContainerPickupAnimationSettings
	{
	public:
		class UAnimSequenceBase*                                   Pickup1PAnimSequence;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   CrouchedPickup1PAnimSequence;                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   Pickup3PAnimSequence;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   CrouchedPickup3PAnimSequence;                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              GhostAnimInstance;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceCrouch;                                            // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedBothHandsForAnim;                                   // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2BU[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CustomAttachItemBone;                                    // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAnimAnchorForPosition;                               // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseParentActorForAnchorReference;                       // 0x0035(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnimationFacingActorRef;                                // 0x0036(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnimationXForward;                                      // 0x0037(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SoundVolumeData
	 * Size -> 0x0020
	 */
	struct FSoundVolumeData
	{
	public:
		class ARBSoundVolume*                                      SoundVolume;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RZTI[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.VirtualizationNode
	 * Size -> 0x0018
	 */
	struct FVirtualizationNode
	{
	public:
		class URBSoundConnectorComponent*                          Connector;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FVYZ[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AuxBusInfo
	 * Size -> 0x0010
	 */
	struct FAuxBusInfo
	{
	public:
		class UAkAuxBus*                                           Bus;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWUR[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SpectatorData
	 * Size -> 0x0018
	 */
	struct FSpectatorData
	{
	public:
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           TargetPlayer_Local;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetPlayerTimestamp_Local;                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpectatorMode                                             SpectatorMode;                                           // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OMZE[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ThreatLevelInfo
	 * Size -> 0x0018
	 */
	struct FThreatLevelInfo
	{
	public:
		class ARBNPC*                                              ThreateningNPC;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThreatLevelRTPC;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOQW[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MusicStateChangeEvent
	 * Size -> 0x0028
	 */
	struct FMusicStateChangeEvent
	{
	public:
		float                                                      ChangedTime;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIMusicState                                              newState;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLUO[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BotName;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TargetPlayerName;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerBreathData
	 * Size -> 0x0020
	 */
	struct FPlayerBreathData
	{
	public:
		unsigned char                                              UnknownData_68Z5[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerBreathStopFastEvent;                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PawnInsideCameraInfo
	 * Size -> 0x0010
	 */
	struct FPawnInsideCameraInfo
	{
	public:
		class ARBPawn*                                             Pawn;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JPL8[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ObjectiveUISettings
	 * Size -> 0x0AC0
	 */
	struct FObjectiveUISettings
	{
	public:
		class UTexture2D*                                          Icon;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bShouldForceHideIcon;                                    // 0x0008(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bNeedsToBeDiscovered;                                    // 0x0068(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bIsIntermediateObjective;                                // 0x00C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  DiscoveryRange;                                          // 0x0128(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ZLimitDiscoveryRange;                                    // 0x01F0(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  DiscoveryLOSRange;                                       // 0x02B8(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  DiscoveryLOSDuration;                                    // 0x0380(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ScaleDownDistanceStart;                                  // 0x0448(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ScaleDownDistanceEnd;                                    // 0x0510(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  NearFadeOutDistanceStart;                                // 0x05D8(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  NearFadeOutDistanceEnd;                                  // 0x06A0(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  FarFadeOutDistanceStart;                                 // 0x0768(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  FarFadeOutDistanceEnd;                                   // 0x0830(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  FarFadeOutLOSDistanceStart;                              // 0x08F8(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  FarFadeOutLOSDistanceEnd;                                // 0x09C0(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PingText;                                                // 0x0A88(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0AA0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       HighlightIcon;                                           // 0x0AB8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T8H7[0x7];                                   // 0x0AB9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.QuestItemRuntimeInfo
	 * Size -> 0x0020
	 */
	struct FQuestItemRuntimeInfo
	{
	public:
		class AActor*                                              ItemSpawner;                                             // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPickup*                                           SpawnedObjectiveItem;                                    // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              QuestItemClass;                                          // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPickedUp;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInSpawner;                                              // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsed;                                                   // 0x001A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEmptyContainer;                                       // 0x001B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CE6M[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ClueData
	 * Size -> 0x0008
	 */
	struct FClueData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerDamagedData
	 * Size -> 0x0018
	 */
	struct FPlayerDamagedData
	{
	public:
		class ARBPawn*                                             Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialHealth;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialTimestamp;                                        // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastDamageTimestamp;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJ5A[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DeadBodyConfigPart
	 * Size -> 0x0018
	 */
	struct FDeadBodyConfigPart
	{
	public:
		class USkeletalMesh*                                       Mesh;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          Materials;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DeadBodyJumpScareSetting
	 * Size -> 0x0040
	 */
	struct FDeadBodyJumpScareSetting
	{
	public:
		struct FCustomContainerPickupAnimationSettings             PlayerAnimationSettings;                                 // 0x0000(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   DeadBodyAnimSequence;                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerCustomizationInfo
	 * Size -> 0x0038
	 */
	struct FRBPlayerCustomizationInfo
	{
	public:
		class URBCustomizationOutfit*                              LegendaryOutfit;                                         // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBPlayerCustomizationOption*>                Options;                                                 // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class URBVoiceCustomizationOption*                         VoiceOption;                                             // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBPlayerIconCustomizationOption*                    PlayerIconOption;                                        // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_826W[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HairColor;                                               // 0x002C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JN19[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBDestructibleAction
	 * Size -> 0x0028
	 */
	struct FRBDestructibleAction
	{
	public:
		EDestructibleActionType                                    actionType;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EX59[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Origin;                                                  // 0x0004(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0010(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      strength;                                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Falloff;                                                 // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessIdleDriftConfig
	 * Size -> 0x0044
	 */
	struct FDizzinessIdleDriftConfig
	{
	public:
		float                                                      YawDriftAmpl;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchDriftAmpl;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollDriftAmpl;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DriftPeriod;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSpeedMultiplierDuration;                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeedMultiplierDuration;                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSpeedMultiplier;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeedMultiplier;                                      // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedMultiplierApproach;                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAmpMultiplier;                                        // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAmpMultiplier;                                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAutoRoll;                                             // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTotalRoll;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoRollForFullWeight;                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoRollApproach;                                        // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerRotSpdThresh;                                      // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerRotSpdForMaxAutoRoll;                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessInertialDriftConfig
	 * Size -> 0x0040
	 */
	struct FDizzinessInertialDriftConfig
	{
	public:
		float                                                      YawDriftInertialFactor;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawDriftInertialFactorLimit;                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawNonLinearSpringAngleStart;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawMaxInertialDrift;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawInertialDamping;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawInertialFriction;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bYawDampingOnVelocity;                                   // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LYJ9[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PitchDriftInertialFactor;                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchDriftInertialFactorLimit;                           // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchNonLinearSpringAngleStart;                          // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMaxInertialDrift;                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchInertialDamping;                                    // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchInertialFriction;                                   // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPitchDampingOnVelocity;                                 // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0Q2V[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IdleDriftWeightApproachDown;                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleDriftWeightApproachUp;                               // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessMovementConfig
	 * Size -> 0x0018
	 */
	struct FDizzinessMovementConfig
	{
	public:
		float                                                      MinDelayForAngleChange;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDelayForAngleChange;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngleOffset;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinApproachCoeff;                                        // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxApproachCoeff;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomMotion;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessThrobbingConfig
	 * Size -> 0x0014
	 */
	struct FDizzinessThrobbingConfig
	{
	public:
		float                                                      Freq;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SineExp;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnvelopeExp;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Phase;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstantRatio;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessConfig
	 * Size -> 0x00D4
	 */
	struct FDizzinessConfig
	{
	public:
		float                                                      Intensity;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      duration;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      blendInTime;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      blendOutTime;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlur;                                                   // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInertialCameraDrift;                                    // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIdleCameraDrift;                                        // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectMovementHeading;                                  // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableJump;                                            // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCapPlayerSpeed;                                         // 0x0015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bThrobbing;                                              // 0x0016(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5S9C[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlurAmount;                                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPlayerSpeed;                                          // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxCameraRotationSpeed;                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDizzinessIdleDriftConfig                           IdleDrift;                                               // 0x0024(0x0044) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDizzinessInertialDriftConfig                       InertialDrift;                                           // 0x0068(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDizzinessMovementConfig                            Movement;                                                // 0x00A8(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDizzinessThrobbingConfig                           Throbbing;                                               // 0x00C0(0x0014) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScheduledInt8
	 * Size -> 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
	 */
	struct FScheduledInt8 : public FScheduledProperty
	{
	public:
		unsigned char                                              InitialValue;                                            // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LastValue;                                               // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CurrentValue;                                            // 0x006A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DesiredValue;                                            // 0x006B(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OXP[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CustomDamageInfoData
	 * Size -> 0x00D8
	 */
	struct FCustomDamageInfoData
	{
	public:
		EDamageType                                                Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7U4O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  DmgAmount;                                               // 0x0008(0x00C8) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanKnockdown;                                           // 0x00D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanKill;                                                // 0x00D1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHGF[0x6];                                   // 0x00D2(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.EndStageBadgeInfo
	 * Size -> 0x0008
	 */
	struct FEndStageBadgeInfo
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RewardUIData
	 * Size -> 0x0020
	 */
	struct FRewardUIData
	{
	public:
		ERewardType                                                RewardType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OL0X[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBCustomizationOption*                              CustomizationOption;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECurrencyType                                              currencyType;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerCustomizationRarity                                 Rarity;                                                  // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R23H[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RandomRewardPoolId;                                      // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YC0J[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBRewardUIDataList
	 * Size -> 0x0010
	 */
	struct FRBRewardUIDataList
	{
	public:
		TArray<struct FRewardUIData>                               Rewards;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBUIXPGainInfo
	 * Size -> 0x0048
	 */
	struct FRBUIXPGainInfo
	{
	public:
		EXPGainType                                                XPGainType;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5179[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NewLevel;                                                // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartLevel;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartXp;                                                 // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartRatio;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewRatio;                                                // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Xp;                                                      // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRWJ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRewardUIData>                               AssociatedRewards;                                       // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRBRewardUIDataList>                         LevelUpRewards;                                          // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBUITaskProgressionInfo
	 * Size -> 0x0020
	 */
	struct FRBUITaskProgressionInfo
	{
	public:
		TArray<struct FRewardUIData>                               UIRewards;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        CompletedTasksIds;                                       // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBUIProgressionInfo
	 * Size -> 0x0038
	 */
	struct FRBUIProgressionInfo
	{
	public:
		TArray<struct FRBUIXPGainInfo>                             XPGainInfos;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FRBUITaskProgressionInfo                            TaskProgressionInfo;                                     // 0x0010(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                OnlineID;                                                // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RecordedScoringEvent
	 * Size -> 0x0018
	 */
	struct FRecordedScoringEvent
	{
	public:
		class FName                                                RuleId;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Score;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Xp;                                                      // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumEvents;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastEventTime;                                           // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.EndStagePlayerInfo
	 * Size -> 0x00F0
	 */
	struct FEndStagePlayerInfo
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerId;                                                // 0x0000(0x0028) BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerName;                                              // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Icon[0x28];                                              // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    ReleaseCount;                                            // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProfilePlatform                                           Platform;                                                // 0x0064(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9YQ[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PlayerSlotIndex;                                         // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_265K[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEndStageBadgeInfo>                          Badges;                                                  // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FRBUIProgressionInfo                                PlayerProgressionInfo;                                   // 0x0080(0x0038) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x00B8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDead;                                                   // 0x00BC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0B0[0x3];                                   // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DeathCount;                                              // 0x00C0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B8YN[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRecordedScoringEvent>                       RecordedScoringEvents;                                   // 0x00C8(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bHasLeveledUp;                                           // 0x00D8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7BE[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CompletedProgramId;                                      // 0x00DC(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedProgramId;                                       // 0x00E4(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_93IM[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.EndStageInfo
	 * Size -> 0x0030
	 */
	struct FEndStageInfo
	{
	public:
		class FName                                                TrialId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelSeed;                                               // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSucceeded;                                              // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_91SQ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEndStagePlayerInfo>                         PlayerInfos;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      TimeToComplete;                                          // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeathCount;                                              // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y8N4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AdditiveFOVData
	 * Size -> 0x0018
	 */
	struct FAdditiveFOVData
	{
	public:
		unsigned char                                              UnknownData_WTEQ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         FOVCurve;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FXPostProcessData
	 * Size -> 0x0010
	 */
	struct FFXPostProcessData
	{
	public:
		unsigned char                                              UnknownData_LU06[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                            Material;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FXPostProcessSettings
	 * Size -> 0x0028
	 */
	struct FFXPostProcessSettings
	{
	public:
		unsigned char                                              UnknownData_YCHU[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Owner;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59DL[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PostProcessParamData
	 * Size -> 0x0010
	 */
	struct FPostProcessParamData
	{
	public:
		unsigned char                                              UnknownData_5X5K[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CachedRuntimeCustomizationResources
	 * Size -> 0x0020
	 */
	struct FCachedRuntimeCustomizationResources
	{
	public:
		struct FProfileId                                          ProfileId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     Resources;                                               // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBStageID
	 * Size -> 0x0028
	 */
	struct FRBStageID
	{
	public:
		unsigned char                                              StageInfo[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.RBGameStageInfo
	 * Size -> 0x0060
	 */
	struct FRBGameStageInfo
	{
	public:
		class FName                                                TrialId;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRBStageID                                          StageID;                                                 // 0x0008(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FRBMissionID                                        MissionID;                                               // 0x0030(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESecondaryObjectiveVariatorType                            SecondaryObjectiveVariatorType;                          // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObstacleVariatorType                                      ObstacleVariatorType;                                    // 0x0059(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESASVariatorType                                           SASVariatorType;                                         // 0x005A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6D2L[0x5];                                   // 0x005B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RuntimeStageInfo
	 * Size -> 0x0080
	 */
	struct FRuntimeStageInfo
	{
	public:
		struct FRBGameStageInfo                                    gameStageInfo;                                           // 0x0000(0x0060) NativeAccessSpecifierPublic
		float                                                      StartedTime;                                             // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTime;                                                 // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attempts;                                                // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSucceeded;                                              // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKUV[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FUniqueNetIdRepl>                            Survivors;                                               // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CoopMoveEntry
	 * Size -> 0x0078
	 */
	struct FCoopMoveEntry
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerANetId;                                            // 0x0000(0x0028) HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUniqueNetIdRepl                                    PlayerBNetId;                                            // 0x0028(0x0028) HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CoopMoveActor[0x28];                                     // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.PendingMatchDetails
	 * Size -> 0x00A8
	 */
	struct FPendingMatchDetails
	{
	public:
		unsigned char                                              UnknownData_5FQJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBLobbyPlayerState*                                 Owner;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBLobbyPlayerState*>                         members;                                                 // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNT5[0x80];                                  // 0x0028(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PendingFindPartyRequestDetails
	 * Size -> 0x0060
	 */
	struct FPendingFindPartyRequestDetails
	{
	public:
		unsigned char                                              UnknownData_V8OF[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBLobbyPlayerState*                                 Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBLobbyPlayerState*>                         members;                                                 // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYKJ[0x40];                                  // 0x0020(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBAttributeOwnerRuntimeInfo
	 * Size -> 0x0038
	 */
	struct FRBAttributeOwnerRuntimeInfo
	{
	public:
		class UObject*                                             Owner;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1UYH[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBGameplayAttributeManager*                         ManagerOwner;                                            // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6SJ[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBFeatureSwitchOverride
	 * Size -> 0x0018
	 */
	struct FRBFeatureSwitchOverride
	{
	public:
		class FString                                              FeatureSwitch;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AO22[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StageAudioEvents
	 * Size -> 0x0020
	 */
	struct FStageAudioEvents
	{
	public:
		TArray<class UAkAudioEvent*>                               StartEvents;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAkAudioEvent*>                               StopEvents;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.StageMusicSystem
	 * Size -> 0x0050
	 */
	struct FStageMusicSystem
	{
	public:
		unsigned char                                              MusicStart[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MusicStop[0x28];                                         // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.RBMurkoffAnnouncentLineData
	 * Size -> 0x0020
	 */
	struct FRBMurkoffAnnouncentLineData
	{
	public:
		class FString                                              AnnouncementLinesName;                                   // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBMurkoffAnnouncentAudioData>               LineChoices;                                             // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBMurkoffAnnouncentData
	 * Size -> 0x0020
	 */
	struct FRBMurkoffAnnouncentData
	{
	public:
		class FString                                              AnnouncementName;                                        // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBMurkoffAnnouncentLineData>                AnnouncementList;                                        // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerReleaseState
	 * Size -> 0x0018
	 */
	struct FPlayerReleaseState
	{
	public:
		class ARBLobbyPlayerState*                                 PlayerState;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerReleasePending;                                   // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NLRB[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerReleaseExpirationServerTime;                       // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerReleasing;                                        // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZ94[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBMainObjectiveInfo
	 * Size -> 0x0058
	 */
	struct FRBMainObjectiveInfo
	{
	public:
		class FName                                                ObjectiveID;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                LoreObjectiveName;                                       // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                LoreObjectiveDescription;                                // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FName>                                        ObjectiveSpecificLevels;                                 // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EMainObjectiveType                                         Type;                                                    // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BPAE[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LevelName;                                               // 0x004C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W3DL[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBObjectiveGroupInfo
	 * Size -> 0x0028
	 */
	struct FRBObjectiveGroupInfo
	{
	public:
		class FName                                                GroupID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        GroupSpecificLevels;                                     // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FRBMainObjectiveInfo>                        MainObjectiveInfos;                                      // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBSecondaryObjectiveInfo
	 * Size -> 0x0018
	 */
	struct FRBSecondaryObjectiveInfo
	{
	public:
		TArray<class FName>                                        LevelNames;                                              // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESecondaryObjectiveVariatorType                            Type;                                                    // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3W1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBObstacleVariatorInfo
	 * Size -> 0x0018
	 */
	struct FRBObstacleVariatorInfo
	{
	public:
		TArray<class FName>                                        LevelNames;                                              // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EObstacleVariatorType                                      Type;                                                    // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9ZE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBReleaseTrialSelectionDetails
	 * Size -> 0x0014
	 */
	struct FRBReleaseTrialSelectionDetails
	{
	public:
		class FName                                                TrialId;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumReleaseCount;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumReleaseCount;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RecentlySeenPlayer
	 * Size -> 0x0018
	 */
	struct FRecentlySeenPlayer
	{
	public:
		struct FProfileId                                          ProfileId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Timestamp;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.VoiceChatVolumeMapping
	 * Size -> 0x0014
	 */
	struct FVoiceChatVolumeMapping
	{
	public:
		struct FProfileId                                          ProfileId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Volume;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerGarageDoorInfo
	 * Size -> 0x0010
	 */
	struct FPlayerGarageDoorInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHZX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBGameConditionSet
	 * Size -> 0x0010
	 */
	struct FRBGameConditionSet
	{
	public:
		TArray<class URBGameCondition*>                            Conditions;                                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCSpawnWaveParams
	 * Size -> 0x0218
	 */
	struct FNPCSpawnWaveParams
	{
	public:
		struct FConfigurableBool                                   bEnabled;                                                // 0x0000(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioAnnouncement;                                       // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBNPCRandomizationConfig*                           RandomizationConfig;                                     // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinStageTimeInMinutes;                                   // 0x0070(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRandomDelay;                                          // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XWGD[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBGameConditionSet                                 WaveTriggerConditions;                                   // 0x0140(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ChangeDurationInSeconds;                                 // 0x0150(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PressureFromAdversityParams
	 * Size -> 0x01B8
	 */
	struct FPressureFromAdversityParams
	{
	public:
		bool                                                       bEnableAddingPressureFromLowAdversity;                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0T0J[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    PressurePointsToAddForSustainedLowAdversity;             // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTotalTimeAccumulationInLowAdversity;                  // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinConsecutiveTimeAccumulationInLowAdversity;            // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdversityMeterLowAdversityThreshold;                     // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRemovingPressureFromAdversity;                    // 0x00DC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7G1Q[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    PressurePointsToRemoveForSustainedHighAdversity;         // 0x00E0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTotalTimeAccumulationInHighAdversity;                 // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinConsecutiveTimeAccumulationInHighAdversity;           // 0x01AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdversityMeterHighAdversityThreshold;                    // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ3Q[0x4];                                   // 0x01B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PressureBeatParams
	 * Size -> 0x03F0
	 */
	struct FPressureBeatParams
	{
	public:
		bool                                                       bEnablePressureBeats;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21ZD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MinStageTimeBeforeFirstBeatInMinutes;                    // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MaxStageTimeBeforeFirstBeatInMinutes;                    // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinBeatIntervalInMinutes;                                // 0x0198(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MaxBeatIntervalInMinutes;                                // 0x0260(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    PressureVariation;                                       // 0x0328(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerConditionSet
	 * Size -> 0x0010
	 */
	struct FRBPlayerConditionSet
	{
	public:
		TArray<class URBPlayerCondition*>                          Conditions;                                              // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpawnEventConditions
	 * Size -> 0x04D8
	 */
	struct FSpawnEventConditions
	{
	public:
		struct FConfigurableFloat                                  MinStageTimeInMinutes;                                   // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MinNumHealthyPlayers;                                    // 0x00C8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinDelayBetweenSpawns;                                   // 0x0190(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinDelaySinceLastActive;                                 // 0x0258(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    MaxActiveBotsOfSameType;                                 // 0x0320(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRBGameConditionSet                                 GlobalSpawnConditions;                                   // 0x03E8(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bMustTargetSpecificPlayer;                               // 0x03F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VN00[0x7];                                   // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBPlayerConditionSet                               TargetConditions;                                        // 0x0400(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MaxSpawnDistanceToTarget;                                // 0x0410(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpawnRuleParams
	 * Size -> 0x07C0
	 */
	struct FSpawnRuleParams
	{
	public:
		class FString                                              RuleName;                                                // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ENPCType>                                           NPCTypes;                                                // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bEnabled;                                                // 0x0020(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RulePriorityLevel;                                       // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UI68[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  RelativeOdds;                                            // 0x0088(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSpawnEventConditions                               SpawnConditions;                                         // 0x0150(0x04D8) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    PressurePointsSpawnConsumption;                          // 0x0628(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialBotInitialBehavior                                 InitialBotBehavior;                                      // 0x06F0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKIH[0x7];                                   // 0x06F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MinBotLifetime;                                          // 0x06F8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PressureEventParams
	 * Size -> 0x06A0
	 */
	struct FPressureEventParams
	{
	public:
		class FString                                              EventName;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePressureEvent;                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetPressureBeatTimer;                                 // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearPressurePoints;                                    // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CFFJ[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    PressureVariation;                                       // 0x0018(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyPressurePointsOnlyIfExplicitSpawnUnavailable;      // 0x00E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableExplicitSpawn;                                    // 0x00E1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P0QZ[0x6];                                   // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ENPCType>                                           NPCTypes;                                                // 0x00E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSpawnEventConditions                               SpawnConditions;                                         // 0x00F8(0x04D8) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		ESpecialBotInitialBehavior                                 InitialBotBehavior;                                      // 0x05D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UY8T[0x7];                                   // 0x05D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MinBotLifetime;                                          // 0x05D8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DynamicPressureConfig
	 * Size -> 0x1490
	 */
	struct FDynamicPressureConfig
	{
	public:
		struct FPressureFromAdversityParams                        AdversityContribToPressure;                              // 0x0000(0x01B8) Edit, NativeAccessSpecifierPublic
		struct FPressureBeatParams                                 PressureBeats;                                           // 0x01B8(0x03F0) Edit, NativeAccessSpecifierPublic
		TArray<struct FSpawnRuleParams>                            SpawnEventRules;                                         // 0x05A8(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FPressureEventParams                                MainObjectiveCompletedPressureEvent;                     // 0x05B8(0x06A0) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FPressureEventParams                                LastObjectiveCompletedPressureEvent;                     // 0x0C58(0x06A0) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinSpawnInterval;                                        // 0x12F8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinimumStandardBotTimeInLimbo;                           // 0x13C0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReliefConversionRatePressurePointsPerDifficultyPoints;   // 0x1488(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OD7[0x4];                                   // 0x148C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RandomSpawnParams
	 * Size -> 0x0678
	 */
	struct FRandomSpawnParams
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnable;                                                 // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0U0[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  AverageSpawnWaitInMinutes;                               // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSpawnEventConditions                               SpawnConditions;                                         // 0x00D0(0x04D8) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		ESpecialBotInitialBehavior                                 InitialBotBehavior;                                      // 0x05A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M59E[0x7];                                   // 0x05A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  MinBotLifetime;                                          // 0x05B0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GlobalConditionalRetirementParams
	 * Size -> 0x0050
	 */
	struct FGlobalConditionalRetirementParams
	{
	public:
		struct FGameplayTagContainer                               AllowRetirementOnlyFor;                                  // 0x0000(0x0020) Edit, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               DenyRetirementFor;                                       // 0x0020(0x0020) Edit, NativeAccessSpecifierPublic
		struct FRBAIConditionSet                                   RetirementConditions;                                    // 0x0040(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.EventConditionalRetirementParams
	 * Size -> 0x0058
	 */
	struct FEventConditionalRetirementParams
	{
	public:
		EConditionalRetirementEvent                                Event;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FF9F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumBotTravel;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               AllowRetirementOnlyFor;                                  // 0x0008(0x0020) Edit, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               DenyRetirementFor;                                       // 0x0028(0x0020) Edit, NativeAccessSpecifierPublic
		struct FRBAIConditionSet                                   RetirementConditions;                                    // 0x0048(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DesignatedRetirementParams
	 * Size -> 0x0068
	 */
	struct FDesignatedRetirementParams
	{
	public:
		struct FGameplayTagContainer                               AllowRetirementOnlyFor;                                  // 0x0000(0x0020) Edit, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               DenyRetirementFor;                                       // 0x0020(0x0020) Edit, NativeAccessSpecifierPublic
		struct FRBAIConditionSet                                   DesignatedRetirementConditions;                          // 0x0040(0x0010) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      ScoreContribForCloseToPlayer;                            // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloseToPlayerDist;                                       // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreContribForChase;                                    // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreContribForLKPInvestigate;                           // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreContribForNormalInvestigate;                        // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EOQJ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCConfigRedirector
	 * Size -> 0x0028
	 */
	struct FNPCConfigRedirector
	{
	public:
		class URBAIConfig*                                         ConfigToRedirect;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         EasyConfig;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         NormalConfig;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         HardConfig;                                              // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         InsaneConfig;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GameSyncValues
	 * Size -> 0x0010
	 */
	struct FGameSyncValues
	{
	public:
		TArray<class FName>                                        GameSyncValues;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObjectiveProgressionAudioEvents
	 * Size -> 0x0010
	 */
	struct FObjectiveProgressionAudioEvents
	{
	public:
		class UAkAudioEvent*                                       StartEvent;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopEvent;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TalkWheelSpliceData
	 * Size -> 0x0028
	 */
	struct FTalkWheelSpliceData
	{
	public:
		ETalkWheelAction                                           SpliceAction;                                            // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5S9I[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                SpliceText;                                              // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          SpliceIcon;                                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerPingData
	 * Size -> 0x0028
	 */
	struct FPlayerPingData
	{
	public:
		class FText                                                TextChatMessage;                                         // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       VoiceAKEvent;                                            // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.UIColors
	 * Size -> 0x0040
	 */
	struct FUIColors
	{
	public:
		struct FLinearColor                                        PrimaryColor;                                            // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SecondaryColor;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TertiaryColor;                                           // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        RibbonColor;                                             // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MetaNPCSettings
	 * Size -> 0x0090
	 */
	struct FMetaNPCSettings
	{
	public:
		class FText                                                JobTitle;                                                // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FUIColors                                           Colors;                                                  // 0x0048(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBUIEffectDisplayData
	 * Size -> 0x0030
	 */
	struct FRBUIEffectDisplayData
	{
	public:
		class FText                                                Description;                                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Color;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomRewardPoolDisplayDetails
	 * Size -> 0x0030
	 */
	struct FRandomRewardPoolDisplayDetails
	{
	public:
		class FName                                                RewardPoolId;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          BackgroundImage;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconTint;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRarityColor;                                         // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KB5V[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LoadoutBrushes
	 * Size -> 0x0220
	 */
	struct FLoadoutBrushes
	{
	public:
		struct FSlateBrush                                         BaseBrush;                                               // 0x0000(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateBrush                                         SelectedBrush;                                           // 0x0088(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateBrush                                         AvailableBrush;                                          // 0x0110(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateBrush                                         LockedBrush;                                             // 0x0198(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PsychosisFXData
	 * Size -> 0x0014
	 */
	struct FPsychosisFXData
	{
	public:
		float                                                      Veins;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Colors;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deform;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Shake;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DarkTexture;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HallucinationEffectData
	 * Size -> 0x01A8
	 */
	struct FHallucinationEffectData
	{
	public:
		EHallucinationType                                         HallucinationType;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6F1H[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  ActivationDelay;                                         // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  ActivationDelayMax;                                      // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayOnlyOnce;                                           // 0x0198(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipActivationDelayOnIncrease;                          // 0x0199(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9P4R[0x6];                                   // 0x019A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBHallucinationConfig*                              HallucinationConfig;                                     // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PsychosisLevelData
	 * Size -> 0x0010
	 */
	struct FPsychosisLevelData
	{
	public:
		TArray<struct FHallucinationEffectData>                    HallucinationEffectList;                                 // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HallucinationData
	 * Size -> 0x0050
	 */
	struct FHallucinationData
	{
	public:
		EHallucinationType                                         Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CZUA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBHallucinationConfig*                              Config;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      duration;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetIntensity;                                         // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestartingActiveHallu;                                  // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K2I1[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBNPC*                                              SpectreNPC;                                              // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvertedAngle;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AJ2G[0x1F];                                  // 0x0031(0x001F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PsychosisSpookData
	 * Size -> 0x0018
	 */
	struct FPsychosisSpookData
	{
	public:
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBNPC*                                              SpectreNPC;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CO2U[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.HallucinationBracketEffectRuntimeData
	 * Size -> 0x01B8
	 */
	struct FHallucinationBracketEffectRuntimeData
	{
	public:
		struct FHallucinationEffectData                            EffectDataCache;                                         // 0x0000(0x01A8) NativeAccessSpecifierPublic
		EHallucinationType                                         HallucinationType;                                       // 0x01A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8IXL[0x3];                                   // 0x01A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NextActivationTime;                                      // 0x01AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastActivationTime;                                      // 0x01B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberActivated;                                         // 0x01B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HallucinationPlayerRuntimeData
	 * Size -> 0x0030
	 */
	struct FHallucinationPlayerRuntimeData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastIncreasedPsychosisTime;                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastEnteredStateTime;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentBracket;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_28S6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHallucinationBracketEffectRuntimeData>      EffectRuntimeData;                                       // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bHasExitedStartSAS;                                      // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T1NX[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.HitNPCTargetTypeSettings
	 * Size -> 0x0270
	 */
	struct FHitNPCTargetTypeSettings
	{
	public:
		class UClass*                                              PawnClass;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  BodyHitMeterIncrease;                                    // 0x0010(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  HeadshotMeterIncrease;                                   // 0x00D8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DifficultyCost;                                          // 0x01A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFWX[0x4];                                   // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinNumberToSpawn;                                        // 0x01A8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HitNPCTargetInfo
	 * Size -> 0x0008
	 */
	struct FHitNPCTargetInfo
	{
	public:
		class ARBNPC*                                              NPC;                                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HotPotatoEnemyConfig
	 * Size -> 0x0268
	 */
	struct FHotPotatoEnemyConfig
	{
	public:
		class UClass*                                              EnemyClass;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         EnemyConfig;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    NumHotPotatoEnemies;                                     // 0x0010(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  HeldPotatoDurationForSpawn;                              // 0x00D8(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  IdealSpawnDistanceFromPotato;                            // 0x01A0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.WorldIconData
	 * Size -> 0x00F0
	 */
	struct FWorldIconData
	{
	public:
		unsigned char                                              UnknownData_Y42I[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               Actor;                                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0058(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocationRelativeToActor;                                // 0x0064(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C000[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Color;                                                   // 0x0068(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            Icon;                                                    // 0x0078(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CloseSize;                                               // 0x0080(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           FarSize;                                                 // 0x0088(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActionName;                                              // 0x0090(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowDistance;                                           // 0x0098(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_45H3[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ArrowOffset;                                             // 0x009C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInSpectatorMode;                                    // 0x00A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1MWP[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBHUDWorldIconWidget*                               WorldIconWidget;                                         // 0x00A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector4                                            DistanceLimit;                                           // 0x00B0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRoompathSearchDistance;                               // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GRR6[0x2C];                                  // 0x00C4(0x002C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerPingIconMapping
	 * Size -> 0x0020
	 */
	struct FPlayerPingIconMapping
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              TargetActor;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WF7[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBWorldIconUpdateContext
	 * Size -> 0x0060
	 */
	struct FRBWorldIconUpdateContext
	{
	public:
		class URBGlobalUIConfig*                                   GlobalUIConfig;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBSpatialReasoning*                                 SpatialReasoning;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           LocalPawn;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerState*                                      LocalPlayerState;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSoloMode;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLF5[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ViewLocation;                                            // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ViewRotation;                                            // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BV88[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBHUDOverheadInfo*                                  CurrentClosestPlayerIcon;                                // 0x0040(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBHUDOverheadInfo*                                  CurrentClosestIncapacitatedPlayerIcon;                   // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBHUDObjectiveInWorld*                              CurrentClosestObjectiveIcon;                             // 0x0050(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastClosestsObjectivesUpdateTimestamp;                   // 0x0058(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInLobby;                                              // 0x005C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPlayingMinigame;                                      // 0x005D(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDO4[0x2];                                   // 0x005E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.UILinearInventoryItem
	 * Size -> 0x0080
	 */
	struct FUILinearInventoryItem
	{
	public:
		class ARBPickup*                                           Item;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemDefinition                                     ItemDefinition;                                          // 0x0028(0x0048) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    SlotIndex;                                               // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAvailable;                                             // 0x0074(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UN3C[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CooldownRatio;                                           // 0x0078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6V7[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MessageData
	 * Size -> 0x0030
	 */
	struct FMessageData
	{
	public:
		class FName                                                MessageId;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMessagePriority                                           Priority;                                                // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I99G[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      duration;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Text;                                                    // 0x0010(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EGameMessageCategory                                       GameMessageCategory;                                     // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XHLE[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Timestamp;                                               // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FoleysSoundRefs
	 * Size -> 0x00B0
	 */
	struct FFoleysSoundRefs
	{
	public:
		class UAkAudioEvent*                                       FootStepWalk3P;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FootStepWalk3P : 1;                            // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8DV[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FootStepRun3P;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FootStepRun3P : 1;                             // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0WYJ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FootStepWalk1P;                                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FootStepWalk1P : 1;                            // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4ES[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FootStepRun1P;                                           // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FootStepRun1P : 1;                             // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XRB[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FullBody_Start;                                          // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullBody_Start : 1;                            // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MAC[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FullBody_Stop;                                           // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_FullBody_Stop : 1;                             // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TH8I[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       LegsShort;                                               // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LegsShort : 1;                                 // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMC6[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       LegsLong;                                                // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_LegsLong : 1;                                  // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H2SD[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TorsoShort;                                              // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TorsoShort : 1;                                // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9DY[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TorsoLong;                                               // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TorsoLong : 1;                                 // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HYX[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Damage;                                                  // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Damage : 1;                                    // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67ZN[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LocalSoundRefs
	 * Size -> 0x0090
	 */
	struct FLocalSoundRefs
	{
	public:
		class UAkAudioEvent*                                       RadioStart;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RadioStart : 1;                                // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LBFN[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       RadioStop;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RadioStop : 1;                                 // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKVV[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ObjectiveMessageNotifySound;                             // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ObjectiveMessageNotifySound : 1;               // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_055N[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StartEntityFollowVoiceEvent;                             // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StartEntityFollowVoiceEvent : 1;               // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QN5[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StopEntityFollowVoiceEvent;                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StopEntityFollowVoiceEvent : 1;                // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CCV[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StartEntityFollowSFXEvent;                               // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StartEntityFollowSFXEvent : 1;                 // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUUX[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StopEntityFollowSFXEvent;                                // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StopEntityFollowSFXEvent : 1;                  // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XDM[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       JumpScare;                                               // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_JumpScare : 1;                                 // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JCB3[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       DisturbanceWarning;                                      // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DisturbanceWarning : 1;                        // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5UL[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerStateSoundRefs
	 * Size -> 0x0190
	 */
	struct FPlayerStateSoundRefs
	{
	public:
		class UAkAudioEvent*                                       PlayerHealthLowStart;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerHealthLowStart : 1;                      // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4PVO[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerHealthLowStop;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerHealthLowStop : 1;                       // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TYQ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerLSDEffectStart;                                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerLSDEffectStart : 1;                      // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_62BK[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerLSDEffectStop;                                     // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerLSDEffectStop : 1;                       // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B20I[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerReducedHearingStart;                               // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerReducedHearingStart : 1;                 // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A6RI[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerReducedHearingStop;                                // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerReducedHearingStop : 1;                  // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IN22[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PsychosisBoost;                                          // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PsychosisBoost : 1;                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21Q5[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StaminaBoostStart;                                       // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StaminaBoostStart : 1;                         // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHJA[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StaminaBoostStop;                                        // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StaminaBoostStop : 1;                          // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XDPP[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StunnedByScreamerStart;                                  // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StunnedByScreamerStart : 1;                    // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y4UC[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StunnedByScreamerStopFade;                               // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StunnedByScreamerStopFade : 1;                 // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJD9[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StunnedByScreamerStopKill;                               // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StunnedByScreamerStopKill : 1;                 // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YN1C[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerBreathStart;                                       // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerBreathStart : 1;                         // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZQ9[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerBreathStopNormal;                                  // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerBreathStopNormal : 1;                    // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6VK[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerBreathStopFast;                                    // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerBreathStopFast : 1;                      // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DDNA[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StartPlayerHurtVO;                                       // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StartPlayerHurtVO : 1;                         // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0NV[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       StopPlayerHurtVO;                                        // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_StopPlayerHurtVO : 1;                          // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U95P[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PlayerCough;                                             // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PlayerCough : 1;                               // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6V0K[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderPsychosisAuraEffect;                                // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderPsychosisAuraEffect : 1;                  // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CQ7[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderPsychosisAuraEffectStart;                           // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderPsychosisAuraEffectStart : 1;             // 0x0138(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQ7J[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderPsychosisAuraEffectStop;                            // 0x0140(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderPsychosisAuraEffectStop : 1;              // 0x0148(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZV9[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderStaminaDrainAuraEffect;                             // 0x0150(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderStaminaDrainAuraEffect : 1;               // 0x0158(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_02UM[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderStaminaDrainAuraEffectStart;                        // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderStaminaDrainAuraEffectStart : 1;          // 0x0168(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VINL[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       UnderStaminaDrainAuraEffectStop;                         // 0x0170(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_UnderStaminaDrainAuraEffectStop : 1;           // 0x0178(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RGBN[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       DefaultDeathVO;                                          // 0x0180(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultDeathVO : 1;                            // 0x0188(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXRU[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SystemsSoundRefs
	 * Size -> 0x0050
	 */
	struct FSystemsSoundRefs
	{
	public:
		class UAkAudioEvent*                                       ResetStates;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ResetStates : 1;                               // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T8BC[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PauseOn;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PauseOn : 1;                                   // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_82HF[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PauseOff;                                                // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PauseOff : 1;                                  // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3G3T[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TestIntercomOn;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TestIntercomOn : 1;                            // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHU5[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TestIntercomOff;                                         // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TestIntercomOff : 1;                           // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H26V[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerTalkSoundRefs
	 * Size -> 0x0140
	 */
	struct FPlayerTalkSoundRefs
	{
	public:
		class UAkAudioEvent*                                       Help;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Help : 1;                                      // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P44G[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Acknowledge;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Acknowledge : 1;                               // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HOZ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Regroup;                                                 // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Regroup : 1;                                   // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABPM[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       CoopMoveStatus;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_CoopMoveStatus : 1;                            // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HDW[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ItemNearby;                                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ItemNearby : 1;                                // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXCQ[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Currency;                                                // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Currency : 1;                                  // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZQT[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Wait;                                                    // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Wait : 1;                                      // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73FB[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Crawling;                                                // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Crawling : 1;                                  // 0x0078(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3D2M[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Danger;                                                  // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Danger : 1;                                    // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NXI2[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ActiveSkillCooldown;                                     // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActiveSkillCooldown : 1;                       // 0x0098(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E55F[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ActiveSkillEmpty;                                        // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActiveSkillEmpty : 1;                          // 0x00A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ERN[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ActiveSkillReady;                                        // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActiveSkillReady : 1;                          // 0x00B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNIZ[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ActiveSkillNoneEquipped;                                 // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ActiveSkillNoneEquipped : 1;                   // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEAY[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       ThankYou;                                                // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ThankYou : 1;                                  // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKMM[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       OnMyWay;                                                 // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_OnMyWay : 1;                                   // 0x00E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_213C[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Hello;                                                   // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Hello : 1;                                     // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXUV[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Trade;                                                   // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_Trade : 1;                                     // 0x0108(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BAMU[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       DefaultPingVO;                                           // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DefaultPingVO : 1;                             // 0x0118(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8GT[0x7];                                   // 0x0119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PuzzleRoomStressBreathStart;                             // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PuzzleRoomStressBreathStart : 1;               // 0x0128(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M28X[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PuzzleRoomStressBreathStop;                              // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PuzzleRoomStressBreathStop : 1;                // 0x0138(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XZU4[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCSoundRefs
	 * Size -> 0x0070
	 */
	struct FNPCSoundRefs
	{
	public:
		class UAkAudioEvent*                                       PusherReadyToSpawnFoley;                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PusherReadyToSpawnFoley : 1;                   // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIR0[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PusherReadyToSpawnVO;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PusherReadyToSpawnVO : 1;                      // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_148Y[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PouncerGnPStart;                                         // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPStart : 1;                           // 0x0028(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KQ6I[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       PouncerGnPStop;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PouncerGnPStop : 1;                            // 0x0038(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISQ7[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       SleeperDisturbedStart;                                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SleeperDisturbedStart : 1;                     // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UH5D[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       SleeperDisturbedStop;                                    // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SleeperDisturbedStop : 1;                      // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7WBK[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       VOInterruptOno;                                          // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_VOInterruptOno : 1;                            // 0x0068(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RU86[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MusicSoundRefs
	 * Size -> 0x0020
	 */
	struct FMusicSoundRefs
	{
	public:
		class UAkAudioEvent*                                       TrapRoomStart;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TrapRoomStart : 1;                             // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8AAR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TrapRoomStop;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TrapRoomStop : 1;                              // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZNFK[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBSoundReferencesData
	 * Size -> 0x04F0
	 */
	struct FRBSoundReferencesData
	{
	public:
		struct FFoleysSoundRefs                                    Foleys;                                                  // 0x0000(0x00B0) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FLocalSoundRefs                                     Local;                                                   // 0x00B0(0x0090) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerStateSoundRefs                               PlayerState;                                             // 0x0140(0x0190) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSystemsSoundRefs                                   Systems;                                                 // 0x02D0(0x0050) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerTalkSoundRefs                                Talk;                                                    // 0x0320(0x0140) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCSoundRefs                                       NPC;                                                     // 0x0460(0x0070) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FMusicSoundRefs                                     Music;                                                   // 0x04D0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpecialMoveMulticastData
	 * Size -> 0x0048
	 */
	struct FSpecialMoveMulticastData
	{
	public:
		int32_t                                                    SpecialMoveIndex;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPredicted : 1;                                          // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QBS1[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartedMovementTimestamp;                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               specialMove;                                             // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SpecialMoveSubType;                                      // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JPPD[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             targetPosition;                                          // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetDirection;                                         // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             OriginalPosition;                                        // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OriginalDirectionYaw;                                    // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Interactable;                                            // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MU2F[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledLocomotionData
	 * Size -> 0x000C
	 */
	struct FScheduledLocomotionData
	{
	public:
		unsigned char                                              UnknownData_B6WW[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledCompleteSpecialMoveData
	 * Size -> 0x0010
	 */
	struct FScheduledCompleteSpecialMoveData
	{
	public:
		unsigned char                                              UnknownData_1UA9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledSpecialMoveData
	 * Size -> 0x0068
	 */
	struct FScheduledSpecialMoveData
	{
	public:
		float                                                      PawnTime;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      serverTime;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInteruptable;                                           // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FDN[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSpecialMoveMulticastData                           SpecialMoveData;                                         // 0x0010(0x0048) NoDestructor, NativeAccessSpecifierPublic
		ESpecialMove                                               CancelledSpecialMove;                                    // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LUIG[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CancelledSpecialMoveIndex;                               // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScheduleOnPawnTime;                                     // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VJQ[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScheduledTime;                                           // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScheduledNextSpecialMoveLocomotionModeData
	 * Size -> 0x0008
	 */
	struct FScheduledNextSpecialMoveLocomotionModeData
	{
	public:
		unsigned char                                              UnknownData_JHPJ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StrikeDamageSettings
	 * Size -> 0x0004
	 */
	struct FStrikeDamageSettings
	{
	public:
		EDamageValue                                               DamageValue;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKnockbackValue                                            KnockbackValue;                                          // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageVolumeType                                          StrikeDamageType;                                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsWeaponHit;                                            // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpawnedAnimPropData
	 * Size -> 0x0010
	 */
	struct FSpawnedAnimPropData
	{
	public:
		class URBAnimNotifyState_AttachNewObject*                  AnimNotifyOwner;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             SpawnedProp;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DamageVolume
	 * Size -> 0x0060
	 */
	struct FDamageVolume
	{
	public:
		class UShapeComponent*                                     Comp;                                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     AttachComp;                                              // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5KS[0x50];                                  // 0x0010(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StandardFatalityData
	 * Size -> 0x0040
	 */
	struct FStandardFatalityData
	{
	public:
		class ARBNPC*                                              Attacker;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           Victim;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicDirection                                            Direction;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2WJR[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       AttackerAnim;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AttackerEnterLocation;                                   // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AttackerEnterDirection;                                  // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       VictimAnim;                                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InteractionComponentReparentingData
	 * Size -> 0x0050
	 */
	struct FInteractionComponentReparentingData
	{
	public:
		class USceneComponent*                                     TargetComponent;                                         // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     ParentComponent;                                         // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          OriginalOffset;                                          // 0x0010(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       ReturnTransformToOriginalLocation;                       // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W0OQ[0xF];                                   // 0x0041(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NetworkFloat
	 * Size -> 0x0010
	 */
	struct FNetworkFloat
	{
	public:
		float                                                      ReplicatedValue;                                         // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0409[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PawnRepulsionData
	 * Size -> 0x0014
	 */
	struct FPawnRepulsionData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rotation;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPawnRepulsionType                                         Type;                                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitReactionOnPlayer;                                    // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8FGL[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBBreadcrumbs
	 * Size -> 0x0020
	 */
	struct FRBBreadcrumbs
	{
	public:
		unsigned char                                              UnknownData_BOJ1[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCCapabilities
	 * Size -> 0x0015
	 */
	struct FNPCCapabilities
	{
	public:
		bool                                                       bSupportsCustomization;                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayAnimatedStarts;                                  // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayAnimatedStops;                                   // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanStrafe;                                              // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanClimbUpLedges;                                       // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDropDownLedges;                                      // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanOpenDoors;                                           // 0x0006(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCloseDoors;                                          // 0x0007(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUnlockDoors;                                         // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseKickToBreakDoors;                                    // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBasicWalkThroughOpenDoors;                              // 0x000A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDestroyPathObstacles;                                // 0x000B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDestroyDynamicObstacles;                             // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWillUnhingeDoorWhileBashing;                            // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCrouchUnder;                                         // 0x000E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayAttackSelectors;                                 // 0x000F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanGrabPlayers;                                         // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayHitReactions;                                    // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPlayCycleBreakers;                                   // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPullOutFromHidespots;                                // 0x0013(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanStopActiveTraps;                                     // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCPathfindingCosts
	 * Size -> 0x0034
	 */
	struct FNPCPathfindingCosts
	{
	public:
		float                                                      UnlockedDoorCost;                                        // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockedDoorCost;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OpenInvestigatedDoorCost;                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnlockedInvestigatedDoorCost;                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockedInvestigatedDoorCost;                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestroyableDoorCostAware;                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestroyableDoorCostUnaware;                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UndestroyableDoorCostAware;                              // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UndestroyableDoorCostUnaware;                            // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClimbLedgeCostAware;                                     // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClimbLedgeCostUnaware;                                   // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchUnderCostAware;                                    // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchUnderCostUnaware;                                  // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CameraWaveData
	 * Size -> 0x000C
	 */
	struct FCameraWaveData
	{
	public:
		float                                                      Amplitude;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Frequency;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartPhase;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CameraShakeData
	 * Size -> 0x00A0
	 */
	struct FCameraShakeData
	{
	public:
		float                                                      Intensity;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      duration;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeInTime;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeOutTime;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxShakeDistance;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceExponent;                                        // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPositionless;                                           // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideForceFeedbackIntensity;                         // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BAW9[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OveriddenForceFeedbackIntensity;                         // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDynamicForceFeedbackIntensity;                          // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEXB[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DynamicForceFeedbackMultiplier;                          // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     YawWaveA;                                                // 0x0028(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     YawWaveB;                                                // 0x0034(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     PitchWaveA;                                              // 0x0040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     PitchWaveB;                                              // 0x004C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     RollWaveA;                                               // 0x0058(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraWaveData                                     RollWaveB;                                               // 0x0064(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC3I[0x28];                                  // 0x0070(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Owner;                                                   // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCInterruptAction
	 * Size -> 0x0028
	 */
	struct FNPCInterruptAction
	{
	public:
		class ARBPawn*                                             Interrupter;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Weapon;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XMBY[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCReplicatedConfig
	 * Size -> 0x0020
	 */
	struct FNPCReplicatedConfig
	{
	public:
		ENPCFlavor                                                 NPCFlavor;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCWeapon                                                 Weapon;                                                  // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TN57[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StepHeaviness;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyEffectIntensity;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreathing;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayContinuousSound;                                    // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WAWU[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeAfterDamageForContinuous;                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicLookScanRange;                                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicLookScanFrequency;                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   NPCLifetimeRandomSelector;                               // 0x001C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZOCS[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCAttackParams
	 * Size -> 0x0030
	 */
	struct FNPCAttackParams
	{
	public:
		EAttackType                                                AttackType;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStationary;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_41WZ[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayRate;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       AttackAnim;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              AttackTarget;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L4KO[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DelayedVO
	 * Size -> 0x000C
	 */
	struct FDelayedVO
	{
	public:
		unsigned char                                              UnknownData_R6G3[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCWeaponData
	 * Size -> 0x0018
	 */
	struct FNPCWeaponData
	{
	public:
		ENPCWeapon                                                 WeaponId;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UYO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              WeaponClass;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCAnimSetStyle                                           AnimSetStyle;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8R95[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCWeaponRuntimeData
	 * Size -> 0x0003
	 */
	struct FNPCWeaponRuntimeData
	{
	public:
		ENPCWeapon                                                 EquippedWeapon;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9YI2[0x2];                                   // 0x0001(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCInvestigationData
	 * Size -> 0x0028
	 */
	struct FNPCInvestigationData
	{
	public:
		class UAnimSequence*                                       AnimToPlay;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoopingAnimation;                                       // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMovingTransition;                                       // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQGX[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AlignPos;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AlignDir;                                                // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAnimLength;                                           // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCAmbientData
	 * Size -> 0x0014
	 */
	struct FNPCAmbientData
	{
	public:
		bool                                                       bValidLookAt;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8J2U[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SmoothedRelativeYaw;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothedRelativePitch;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetRelativeYaw;                                       // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetRelativePitch;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCReplicatedAmbientData
	 * Size -> 0x0010
	 */
	struct FNPCReplicatedAmbientData
	{
	public:
		class URBAmbientStationComponent*                          AmbientStation;                                          // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActiveState;                                            // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFJ5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCLookAtConfig
	 * Size -> 0x0020
	 */
	struct FNPCLookAtConfig
	{
	public:
		bool                                                       bValidStateForLookAt;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtEnabled;                                          // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtScanEnabled;                                      // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvestigationLookAt;                                    // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceLookAt;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKOG[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              FocusTarget;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FocusLocation;                                           // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21OW[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCLookAtData
	 * Size -> 0x0048
	 */
	struct FNPCLookAtData
	{
	public:
		bool                                                       bEnableLookAt;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZC2K[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LookAtAlpha;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScanIntensity;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseRelativeYaw;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalRelativeYaw;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativePitch;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvestigationLookAt;                                    // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJ21[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TargetActor;                                             // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FVSL[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCTurnOnSpotData
	 * Size -> 0x0010
	 */
	struct FNPCTurnOnSpotData
	{
	public:
		float                                                      AnimControlValue;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetYawWS;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              TargetActor;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCWaypointData
	 * Size -> 0x0010
	 */
	struct FNPCWaypointData
	{
	public:
		class UAnimSequence*                                       WaypointAnim;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoopAnim;                                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4X2[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCAnimatedStartData
	 * Size -> 0x0048
	 */
	struct FNPCAnimatedStartData
	{
	public:
		float                                                      InitialTargetYaw;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetSpeed;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAggressiveStance;                                       // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AQB[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StartLocation;                                           // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartYaw;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJKY[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           TrackedTargetPlayer;                                     // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTF3[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCAnimatedStopData
	 * Size -> 0x0074
	 */
	struct FNPCAnimatedStopData
	{
	public:
		bool                                                       bImmediateStop;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y4NC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartSpeed;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalStopDistance;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetYaw;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimStartTime;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAggressiveStance;                                       // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_15CT[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StartPosition;                                           // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartYaw;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NaturalYawAtDestination;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E3YV[0x48];                                  // 0x002C(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCStartleData
	 * Size -> 0x0048
	 */
	struct FNPCStartleData
	{
	public:
		struct FVector                                             targetPosition;                                          // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStartleType                                               StartleType;                                             // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStartleSpeed                                              StartleSpeed;                                            // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3B6S[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TargetToTrack;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartPosition;                                           // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartDirection;                                          // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M84Q[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCJumpData
	 * Size -> 0x0044
	 */
	struct FNPCJumpData
	{
	public:
		struct FVector                                             JumpStartPoint;                                          // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             JumpDirection;                                           // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FinalDestination;                                        // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PositionCorrection;                                      // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWallJump;                                               // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GWRU[0x13];                                  // 0x0031(0x0013) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCCeilingData
	 * Size -> 0x0018
	 */
	struct FNPCCeilingData
	{
	public:
		float                                                      LastTraceTime;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastTraceLocation;                                       // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CeilingPercentage;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentCeilingHeight;                                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCDoorInteractionParams
	 * Size -> 0x0018
	 */
	struct FNPCDoorInteractionParams
	{
	public:
		class ARBDoor*                                             door;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorPassType                                              DoorPassType;                                            // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForced;                                                 // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlertedStance;                                        // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTraversalFrontToBack;                                   // 0x000B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoorOpenInFront;                                        // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y5CK[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PathedDistanceToDoor;                                    // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RB10[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCDoorInteractionData
	 * Size -> 0x00A8
	 */
	struct FNPCDoorInteractionData
	{
	public:
		struct FNPCDoorInteractionParams                           Params;                                                  // 0x0000(0x0018) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                       DoorInteractionAnim;                                     // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimStartTime;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimAnchorTime;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialYaw;                                              // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TraversalDir;                                            // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnchorRefLocation;                                       // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AdjustmentEndTargetPos;                                  // 0x0044(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AdjustmentEndTargetDir;                                  // 0x0050(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSI7[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     SteeringPath;                                            // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      AdjustmentsDuration;                                     // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4DB[0x34];                                  // 0x0074(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCDoorInvestigationParams
	 * Size -> 0x0030
	 */
	struct FNPCDoorInvestigationParams
	{
	public:
		class ARBDoor*                                             door;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       AnimSequence;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Position;                                                // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorInvestigationType                                     InvestigationType;                                       // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUFM[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCWeaponVFXControlData
	 * Size -> 0x0018
	 */
	struct FNPCWeaponVFXControlData
	{
	public:
		unsigned char                                              UnknownData_8OP5[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCWeaponVFXState
	 * Size -> 0x0014
	 */
	struct FNPCWeaponVFXState
	{
	public:
		unsigned char                                              UnknownData_UUX6[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCLoopingIdleData
	 * Size -> 0x0018
	 */
	struct FNPCLoopingIdleData
	{
	public:
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SoundStart;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SoundStop;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCScriptedAnimData
	 * Size -> 0x0018
	 */
	struct FNPCScriptedAnimData
	{
	public:
		class ARBScriptedAnimStation*                              Station;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                              MeshTarget;                                              // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AMB0[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCHitReactionParams
	 * Size -> 0x0038
	 */
	struct FNPCHitReactionParams
	{
	public:
		class UAnimSequence*                                       AnimSequence;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCHitReactionType                                        ReactionType;                                            // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0PFJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ImpactYawWS;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayEffects;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EQTT[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ImpactLocation;                                          // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetPos;                                               // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetDir;                                               // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ImposterOverheadDetails
	 * Size -> 0x0028
	 */
	struct FImposterOverheadDetails
	{
	public:
		class FString                                              CopiedPlayerName;                                        // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CopiedPlayerLevel;                                       // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProfileId                                          CopiedProfileId;                                         // 0x0014(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3EB3[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.UIInventoryItem
	 * Size -> 0x0058
	 */
	struct FUIInventoryItem
	{
	public:
		class UTexture2D*                                          Icon;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PositionAngle;                                           // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8FS1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Index;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EU8C[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    ItemCount;                                               // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAvailable;                                             // 0x0034(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TB9V[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CooldownRatio;                                           // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AlwaysShowCount;                                         // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideCategoryColor;                                  // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WK9[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        IconColor;                                               // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVN9[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InvestigationAnimSetup
	 * Size -> 0x0058
	 */
	struct FInvestigationAnimSetup
	{
	public:
		class UAnimSequence*                                       AnimSequence;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeProbability;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoopAnimation;                                          // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabledWhenAware;                                       // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabledWhenUnaware;                                     // 0x000E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_69B6[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               EnableOnlyForNPCTags;                                    // 0x0010(0x0020) Edit, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               DisableForNPCTags;                                       // 0x0030(0x0020) Edit, NativeAccessSpecifierPublic
		float                                                      WaitTime;                                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8H1O[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InvestigationAnalysisSightData
	 * Size -> 0x0038
	 */
	struct FInvestigationAnalysisSightData
	{
	public:
		float                                                      RelAngle;                                                // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightClearance;                                          // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasInterestPoint;                                       // 0x0008(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGIX[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InterestPointComp[0x28];                                 // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.InvestigationAnalysisProjectedData
	 * Size -> 0x0018
	 */
	struct FInvestigationAnalysisProjectedData
	{
	public:
		float                                                      DistForward;                                             // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeHeight;                                          // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FInvestigationAnalysisSightData>             SightData;                                               // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigationAnalysisAngleData
	 * Size -> 0x0018
	 */
	struct FInvestigationAnalysisAngleData
	{
	public:
		float                                                      AngleWS;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavmeshClearance;                                        // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FInvestigationAnalysisProjectedData>         ProjectedData;                                           // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigationAnalysis
	 * Size -> 0x0018
	 */
	struct FInvestigationAnalysis
	{
	public:
		bool                                                       bValidAnalysis;                                          // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CYHG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FInvestigationAnalysisAngleData>             AngleData;                                               // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ItemSpawningInfo
	 * Size -> 0x01F8
	 */
	struct FItemSpawningInfo
	{
	public:
		struct FConfigurableInt                                    MinNumberOfItems;                                        // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x00C8(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemLockType                                              LockType;                                                // 0x00C9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RN0X[0x6];                                   // 0x00CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   CanSpawnInOpenSpace;                                     // 0x00D0(0x0060) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableFloat                                  MinDistanceBetweenItemOfSameType;                        // 0x0130(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBItemsSpawningConfig
	 * Size -> 0x0040
	 */
	struct FRBItemsSpawningConfig
	{
	public:
		TArray<struct FItemSpawningInfo>                           RegularItemSpawningInfos;                                // 0x0000(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemSpawningInfo>                           CurrencyItemSpawningInfos;                               // 0x0010(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemSpawningInfo>                           SuperItemSpawningInfos;                                  // 0x0020(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemSpawningInfo>                           CollectibleItemsSpawningInfos;                           // 0x0030(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContainerLimitationInfo
	 * Size -> 0x00F8
	 */
	struct FContainerLimitationInfo
	{
	public:
		struct FConfigurableInt                                    MaxNumber;                                               // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      ContainerClassPath;                                      // 0x00C8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBContainer*>                                UsedContainers;                                          // 0x00E0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		class UClass*                                              ContainerClass;                                          // 0x00F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LockedContainerToFillInfo
	 * Size -> 0x0018
	 */
	struct FLockedContainerToFillInfo
	{
	public:
		class ARBContainer*                                        container;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6U73[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ItemSpawningManagerRewardVolumeInfo
	 * Size -> 0x0018
	 */
	struct FItemSpawningManagerRewardVolumeInfo
	{
	public:
		int32_t                                                    NumberOfItemsRemaining;                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSpawnedMandatoryCurrency;                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADGL[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ContainerRatio;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSpawnLocationCount;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBRewardRoomComponent*                              RewardRoomComponent;                                     // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SectionSpawningOverrideRuntimeInfo
	 * Size -> 0x0038
	 */
	struct FSectionSpawningOverrideRuntimeInfo
	{
	public:
		class ARBRoomGroup*                                        Section;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsRemaining;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsSpawned;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBContainer*>                                Containers;                                              // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ARBContainer*>                                AllSectionContainers;                                    // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bHasInitContainers;                                      // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G52Z[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ItemSpawningManagerTypeStats
	 * Size -> 0x0060
	 */
	struct FItemSpawningManagerTypeStats
	{
	public:
		int32_t                                                    NumberOfItemsRandomized;                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsSpawnedInStage;                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsFromRewardRoomsConfig;                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsLocked;                                     // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            NumberOfItemsSpawnedInVolumes;                           // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ARBRoomGroup*>                                UsedSectionOverrides;                                    // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            NumberOfItemsSpawnedInSectionOverride;                   // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      UsedRewardRooms;                                         // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            NumberOfItemsSpawnedInRewardRooms;                       // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ItemSpawningManagerRuntimeInfo
	 * Size -> 0x02A0
	 */
	struct FItemSpawningManagerRuntimeInfo
	{
	public:
		TArray<class ARBContainer*>                                ContainersUsed;                                          // 0x0000(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<class ARBContainer*>                                ContainersAvailableForStage;                             // 0x0010(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfItemsRemainingInStage;                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRewardRoomItemsRemaining;                        // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberToLock;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q42P[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSectionSpawningOverrideRuntimeInfo>         SectionOverrideInfos;                                    // 0x0030(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		struct FItemSpawningInfo                                   SpawningInfoCache;                                       // 0x0040(0x01F8) RepSkip, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0238(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHWU[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FItemSpawningManagerTypeStats                       stats;                                                   // 0x0240(0x0060) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ItemClassCacheEntry
	 * Size -> 0x0010
	 */
	struct FItemClassCacheEntry
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F64J[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AssociatedClass;                                         // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.JumpScareDetectionEntry
	 * Size -> 0x0010
	 */
	struct FJumpScareDetectionEntry
	{
	public:
		class AActor*                                              DetectedActor;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetectionTimestamp;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9P7K[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LightAnimationData
	 * Size -> 0x0020
	 */
	struct FLightAnimationData
	{
	public:
		class UCurveFloat*                                         OldAnimCurve;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         AnimationCurve;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AnimationCurveLooping;                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PBAS[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimationCurveStartTime;                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationCurveIntensity;                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4KGH[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DirectorVOs
	 * Size -> 0x0108
	 */
	struct FDirectorVOs
	{
	public:
		TMap<EMetaNPCType, class UAkAudioEvent*>                   NPCUnlockedVOs;                                          // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<EMetaNPCType, struct FHUDTutorialTextData>            NPCUnlockedTutorialData;                                 // 0x0050(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<EPlayerTrialRating, class UAkAudioEvent*>             TrialOutcomeVOs;                                         // 0x00A0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       LevelUpVO;                                               // 0x00F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       TutorialCompletedVO;                                     // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       NewReagentExplanation;                                   // 0x0100(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OfficerVOs
	 * Size -> 0x0020
	 */
	struct FOfficerVOs
	{
	public:
		class UAkAudioEvent*                                       ApproachLocked;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       InteractWhenReleaseAvailable;                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AcceptRelease;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Exit;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCLobbyInteractionData
	 * Size -> 0x0038
	 */
	struct FNPCLobbyInteractionData
	{
	public:
		class UAkAudioEvent*                                       Approach;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ApproachLocked;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       InteractFirstTime;                                       // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Interact;                                                // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       InteractNewStuff;                                        // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       PurchasedItem;                                           // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Exit;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.EvaluationCorridorTVAnimations
	 * Size -> 0x0080
	 */
	struct FEvaluationCorridorTVAnimations
	{
	public:
		TMap<EPlayerTrialRating, struct FNarrativeScreenAnimationData> TrialOutcomeTVAnimations;                                // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FNarrativeScreenAnimationData                       TutorialCompletedTVAnimation;                            // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FNarrativeScreenAnimationData                       FallbackTVAnimations;                                    // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ServerTravelInfo
	 * Size -> 0x0028
	 */
	struct FServerTravelInfo
	{
	public:
		EClientTravelSource                                        TravelSource;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8N0G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastStageName;                                           // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastTrialName;                                           // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerId
	 * Size -> 0x0010
	 */
	struct FRBPlayerId
	{
	public:
		class FString                                              IdStr;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.RBPlayerLoadout
	 * Size -> 0x0018
	 */
	struct FRBPlayerLoadout
	{
	public:
		TArray<class FName>                                        Perks;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HT7K[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrialProgressionEntry
	 * Size -> 0x000C
	 */
	struct FTrialProgressionEntry
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPerfect;                                                // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_43F1[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrialProgression
	 * Size -> 0x0010
	 */
	struct FTrialProgression
	{
	public:
		TArray<struct FTrialProgressionEntry>                      Entries;                                                 // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CurrencyEntry
	 * Size -> 0x0008
	 */
	struct FCurrencyEntry
	{
	public:
		ECurrencyType                                              currencyType;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3UZ7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Count;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBGameplayAttributeModifier
	 * Size -> 0x000C
	 */
	struct FRBGameplayAttributeModifier
	{
	public:
		EGameplayAttributeType                                     AttributeType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameplayAttributeModifierType                             ModifierType;                                            // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SI1Z[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplay;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5F06[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBGameplayAttributeModifierInfo
	 * Size -> 0x0014
	 */
	struct FRBGameplayAttributeModifierInfo
	{
	public:
		struct FRBGameplayAttributeModifier                        Modifier;                                                // 0x0000(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerRejoinInfo
	 * Size -> 0x0020
	 */
	struct FPlayerRejoinInfo
	{
	public:
		float                                                      HealthF;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NVBatteryLevel;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PsychosisBracket;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RigCooldownTimeRemaining;                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBGameplayAttributeModifierInfo>            PlayerSpecificUpgrades;                                  // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerCellCustomizationEntry
	 * Size -> 0x000C
	 */
	struct FRBPlayerCellCustomizationEntry
	{
	public:
		ECustomizationMenuCategory                                 Slot;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_986V[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                OnlineUnlockId;                                          // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MatchSettings
	 * Size -> 0x0020
	 */
	struct FMatchSettings
	{
	public:
		class FName                                                TrialId;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StageName;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MissionName;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameDifficulty                                            GameDifficulty;                                          // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4U5C[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Seed;                                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MatchState
	 * Size -> 0x0020
	 */
	struct FMatchState
	{
	public:
		class ARBLobbyPlayerState*                                 Owner;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MatchCancelationGracePeriodServerTime;                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MatchStartServerTime;                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReadyToTravelToMatch;                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllReadyToTravelToMatch;                                // 0x0011(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeavingForMatch;                                        // 0x0012(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeCanceled;                                          // 0x0013(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MemberCount;                                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRelease;                                              // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMBI[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.FindPartyState
	 * Size -> 0x0028
	 */
	struct FFindPartyState
	{
	public:
		bool                                                       bActive;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I421[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBLobbyPlayerState*                                 Owner;                                                   // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeCanceled;                                          // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTMB[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MemberCount;                                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ProgramId;                                               // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TrialId;                                                 // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBLobbyStatBoardStatConfigEntry
	 * Size -> 0x000C
	 */
	struct FRBLobbyStatBoardStatConfigEntry
	{
	public:
		class FName                                                StatId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerStatContextType                                     ContextType;                                             // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7E6F[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBLobbyStatBoardEntry
	 * Size -> 0x0018
	 */
	struct FRBLobbyStatBoardEntry
	{
	public:
		class FString                                              DisplayName;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stat;                                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UJ9Y[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TutorialProfileData
	 * Size -> 0x0018
	 */
	struct FTutorialProfileData
	{
	public:
		class FName                                                TutorialId;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfTimeDisplayed;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORNQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           LastDisplayedTime;                                       // 0x0010(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TutorialManagerProfileData
	 * Size -> 0x0058
	 */
	struct FTutorialManagerProfileData
	{
	public:
		struct FDateTime                                           FirstTimePlayingGameTutorialDisplayedTime;               // 0x0000(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FirstTimePickedUpAnyItemTutorialDisplayedTime;           // 0x0008(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FirstTimeEquippedAnyItemTutorialDisplayedTime;           // 0x0010(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FirstTimeStartingAnyStageTutorialDisplayedTime;          // 0x0018(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FirstTimePickedUpAnyLargeObjectTutorialDisplayedTime;    // 0x0020(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTutorialProfileData>                        DisplayedTutorialsData;                                  // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTutorialProfileData>                        DisplayedHUDTutorialsData;                               // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        DisplayedMenuTutorialsData;                              // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.UILevelInfo
	 * Size -> 0x0010
	 */
	struct FUILevelInfo
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoicelinePlayed;                                        // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BDZ9[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPlayerCachedInfo
	 * Size -> 0x0058
	 */
	struct FRBPlayerCachedInfo
	{
	public:
		struct FProfileId                                          ProfileId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOYA[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PlayerLevel;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReleaseCount;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_56OZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        CustomizationOptions;                                    // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RB07[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Outfit;                                                  // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                VoiceOption;                                             // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PlayerIcon;                                              // 0x0044(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HairColor;                                               // 0x004C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50TL[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrialEvaluationInfo
	 * Size -> 0x001C
	 */
	struct FTrialEvaluationInfo
	{
	public:
		float                                                      PlayerScore;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasLeveledUp;                                           // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1S6[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CompletedProgramId;                                      // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedProgramId;                                       // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasTutorialExperiment;                                  // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasReagentReleaseTrial;                                 // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XN08[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SubtitleData
	 * Size -> 0x0058
	 */
	struct FSubtitleData
	{
	public:
		unsigned char                                              UnknownData_R3EI[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Speaker;                                                 // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBSoundComponent*                                   SoundComponent;                                          // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SoundEvent;                                              // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3D6K[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.OptionData
	 * Size -> 0x00E0
	 */
	struct FOptionData
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateBrush                                         DescriptionImage;                                        // 0x0018(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DescriptionText;                                         // 0x00A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ErrorText;                                               // 0x00B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		EOptionsMenuOption                                         EntryType;                                               // 0x00D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGamepadOption;                                        // 0x00D1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E99M[0x2];                                   // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TrackingId;                                              // 0x00D4(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CO2X[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBOptionCategoryData
	 * Size -> 0x0028
	 */
	struct FRBOptionCategoryData
	{
	public:
		class FText                                                CategoryName;                                            // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FOptionData>                                 OptionsData;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBOptionTabData
	 * Size -> 0x0030
	 */
	struct FRBOptionTabData
	{
	public:
		class FText                                                TabName;                                                 // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		EOptionsTabType                                            TabType;                                                 // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N5KF[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRBOptionCategoryData>                       CategoriesData;                                          // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MinigameSectionConfig
	 * Size -> 0x00D8
	 */
	struct FMinigameSectionConfig
	{
	public:
		struct FConfigurableInt                                    MinimumRoomInSection;                                    // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Rooms[0x10];                                             // 0x00C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct OPP.ProjectileSettings
	 * Size -> 0x000C
	 */
	struct FProjectileSettings
	{
	public:
		float                                                      HorizontalSpeed;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchRotationSpeed;                                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      damageAmount;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AdjustPositionData
	 * Size -> 0x00A4
	 */
	struct FAdjustPositionData
	{
	public:
		unsigned char                                              UnknownData_B43W[0xA4];                                  // 0x0000(0x00A4) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MovieSubtitlePart
	 * Size -> 0x0018
	 */
	struct FMovieSubtitlePart
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTime;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextId;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NarrativeScreenPlayingData
	 * Size -> 0x0020
	 */
	struct FNarrativeScreenPlayingData
	{
	public:
		struct FNarrativeScreenAnimationData                       AnimationData;                                           // 0x0000(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      StartTimeStamp;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1P5X[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBNavLinkObstacle
	 * Size -> 0x0020
	 */
	struct FRBNavLinkObstacle
	{
	public:
		class UClass*                                              ObstacleAreaClass;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ObstacleExtent;                                          // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ObstacleOffset;                                          // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NetworkSoundActorRTPCData
	 * Size -> 0x000C
	 */
	struct FNetworkSoundActorRTPCData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NetworkSoundActorSwitchStateData
	 * Size -> 0x0010
	 */
	struct FNetworkSoundActorSwitchStateData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                State;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomNPCArchetype
	 * Size -> 0x0038
	 */
	struct FRandomNPCArchetype
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCFlavor                                                 Flavor;                                                  // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BSYF[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PawnClassPtr[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class URBAIConfig*                                         PawnConfig;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AISpawningCheatInfo
	 * Size -> 0x0070
	 */
	struct FAISpawningCheatInfo
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCType                                                   NPCType;                                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BAOE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PawnClass[0x28];                                         // 0x0018(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              AIConfig[0x28];                                          // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    ExtraCheatOption;                                        // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2DBS[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCRandomizationClassLimits
	 * Size -> 0x0F70
	 */
	struct FNPCRandomizationClassLimits
	{
	public:
		struct FConfigurableInt                                    MaximumTotalSpawnCount;                                  // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumTotalSpawnCount : 1;                    // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6R8B[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumSmallGrunts;                                      // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumSmallGrunts : 1;                        // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YFG4[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumSmallGrunts;                                      // 0x01A0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumSmallGrunts : 1;                        // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75TN[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumAmbientGrunts;                                    // 0x0270(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumAmbientGrunts : 1;                      // 0x0338(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MF6F[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumAmbientGrunts;                                    // 0x0340(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumAmbientGrunts : 1;                      // 0x0408(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HL83[0x7];                                   // 0x0409(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumBigGrunts;                                        // 0x0410(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumBigGrunts : 1;                          // 0x04D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O2EG[0x7];                                   // 0x04D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumBigGrunts;                                        // 0x04E0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumBigGrunts : 1;                          // 0x05A8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5LAA[0x7];                                   // 0x05A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumSleeperScreamers;                                 // 0x05B0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumSleeperScreamers : 1;                   // 0x0678(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THMY[0x7];                                   // 0x0679(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumSleeperScreamers;                                 // 0x0680(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumSleeperScreamers : 1;                   // 0x0748(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JE40[0x7];                                   // 0x0749(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumPitcherSnipers;                                   // 0x0750(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumPitcherSnipers : 1;                     // 0x0818(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UJSB[0x7];                                   // 0x0819(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumPitcherSnipers;                                   // 0x0820(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumPitcherSnipers : 1;                     // 0x08E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DAKO[0x7];                                   // 0x08E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumGroundPitchers;                                   // 0x08F0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumGroundPitchers : 1;                     // 0x09B8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EVCO[0x7];                                   // 0x09B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumGroundPitchers;                                   // 0x09C0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumGroundPitchers : 1;                     // 0x0A88(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CXEN[0x7];                                   // 0x0A89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumNightHunters;                                     // 0x0A90(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumNightHunters : 1;                       // 0x0B58(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MOU[0x7];                                   // 0x0B59(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumNightHunters;                                     // 0x0B60(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumNightHunters : 1;                       // 0x0C28(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YW2T[0x7];                                   // 0x0C29(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumPushers;                                          // 0x0C30(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumPushers : 1;                            // 0x0CF8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YP9U[0x7];                                   // 0x0CF9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumPushers;                                          // 0x0D00(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumPushers : 1;                            // 0x0DC8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z4V7[0x7];                                   // 0x0DC9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MinimumPouncers;                                         // 0x0DD0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MinimumPouncers : 1;                           // 0x0E98(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JPAS[0x7];                                   // 0x0E99(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    MaximumPouncers;                                         // 0x0EA0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_MaximumPouncers : 1;                           // 0x0F68(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7J3Y[0x7];                                   // 0x0F69(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCRandomizationSpreadingRules
	 * Size -> 0x00E0
	 */
	struct FNPCRandomizationSpreadingRules
	{
	public:
		struct FConfigurableFloat                                  SpreadRatio;                                             // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SpreadRatio : 1;                               // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AFOO[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProximityMinDistance;                                    // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProximityMinDistance : 1;                      // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4PLF[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProximityMaxDistance;                                    // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ProximityMaxDistance : 1;                      // 0x00D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_624U[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCRandomizationConfigData
	 * Size -> 0x1128
	 */
	struct FNPCRandomizationConfigData
	{
	public:
		struct FConfigurableFloat                                  TargetDifficultyScore;                                   // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TargetDifficultyScore : 1;                     // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MR4J[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DifficultyTolerance;                                     // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DifficultyTolerance : 1;                       // 0x00D0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AFP9[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNPCRandomizationClassLimits                        SpawnLimitsPerClass;                                     // 0x00D8(0x0F70) Edit, NativeAccessSpecifierPublic
		struct FNPCRandomizationSpreadingRules                     SpreadingRules;                                          // 0x1048(0x00E0) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBInterfacePresetData
	 * Size -> 0x0068
	 */
	struct FRBInterfacePresetData
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EOptionsMenuOption, int32_t>                          PresetValues;                                            // 0x0018(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBControlSchemeEntry
	 * Size -> 0x0038
	 */
	struct FRBControlSchemeEntry
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018) HasGetValueTypeHash, NativeAccessSpecifierPublic
		EControlSchemeActionType                                   actionType;                                              // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5W41[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBControlScheme
	 * Size -> 0x0418
	 */
	struct FRBControlScheme
	{
	public:
		class FText                                                ControlSchemeTitle;                                      // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               LeftTrigger;                                             // 0x0018(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               RightTrigger;                                            // 0x0050(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               LeftBumper;                                              // 0x0088(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               RightBumper;                                             // 0x00C0(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               LeftStickClick;                                          // 0x00F8(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               LeftStick;                                               // 0x0130(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               RightStick;                                              // 0x0168(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               RightStickClick;                                         // 0x01A0(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               DpadUp;                                                  // 0x01D8(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               DpadRight;                                               // 0x0210(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               DpadLeft;                                                // 0x0248(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               DpadDown;                                                // 0x0280(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               FaceButtonUp;                                            // 0x02B8(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               FaceButtonLeft;                                          // 0x02F0(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               FaceButtonRight;                                         // 0x0328(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               FaceButtonDown;                                          // 0x0360(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               SpecialRight;                                            // 0x0398(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRBControlSchemeEntry                               SpecialLeft;                                             // 0x03D0(0x0038) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DR52[0x10];                                  // 0x0408(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBActionNames
	 * Size -> 0x0010
	 */
	struct FRBActionNames
	{
	public:
		TArray<class FName>                                        ActionNames;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ShimmerDisplaySettings
	 * Size -> 0x0034
	 */
	struct FShimmerDisplaySettings
	{
	public:
		float                                                      MinViewAngle;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxViewAngle;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CutOffDistance2D;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CutOffStartDistance2D;                                   // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance2D;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance2D;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownMinDistanceZ;                                        // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownMaxDistanceZ;                                        // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpMinDistanceZ;                                          // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpMaxDistanceZ;                                          // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaApproachCoef;                                       // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NotInFocusMultiplier;                                    // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CannotInteractMultiplier;                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPasscodeNumberDecals
	 * Size -> 0x0010
	 */
	struct FRBPasscodeNumberDecals
	{
	public:
		TArray<class UMaterialInterface*>                          Materials;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PasscodeDecalData
	 * Size -> 0x0010
	 */
	struct FPasscodeDecalData
	{
	public:
		bool                                                       bActive;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CM18[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Digit;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OrderSetIndex;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPawnCustomizationRequestInfo
	 * Size -> 0x0048
	 */
	struct FRBPawnCustomizationRequestInfo
	{
	public:
		class AActor*                                              Owner;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             ResourcesToLoad;                                         // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		EPawnCustomizationRequestType                              requestType;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFU1[0x2F];                                  // 0x0019(0x002F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPharmaSkillRuntimeInfo
	 * Size -> 0x0010
	 */
	struct FRBPharmaSkillRuntimeInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLingeringActive;                                        // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8W7L[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LingeringTimeRemaining;                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PickupObjectiveRuntimeData
	 * Size -> 0x0030
	 */
	struct FPickupObjectiveRuntimeData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EVHG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           Subject;                                                 // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerState*                                      SubjectPlayerState;                                      // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           Instigator;                                              // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerState*                                      InstigatorPlayerState;                                   // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPickup*                                           ObjectivePickup;                                         // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PickupObjectiveConfig
	 * Size -> 0x000C
	 */
	struct FPickupObjectiveConfig
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CheckIfReachable;                                        // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseSpacialReasoningForDistance;                          // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SDY[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxSearchDistance;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSearchDistance;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CoopMoveData
	 * Size -> 0x0098
	 */
	struct FCoopMoveData
	{
	public:
		ESpecialMove                                               MoveType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipGenericCoopMoveNotify;                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XYYI[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           Leader;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           Follower;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InitiatorLocation;                                       // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InitiatorDirection;                                      // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ReceiverLocation;                                        // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ReceiverDirection;                                       // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicDirection                                            BasicDirection;                                          // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C0K9[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBLedgeMarker*                                      LedgeMarker;                                             // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PivotPointOnLedge;                                       // 0x0058(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TraversalDir;                                            // 0x0064(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LedgeHeight;                                             // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DropHeight;                                              // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasCrouchBeforeMove;                                    // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMustCrouchAfterMove;                                    // 0x0079(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SPW[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             targetLocation;                                          // 0x007C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoopMoveType                                              OfferMoveType;                                           // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoopMoveOfferState                                        OfferState;                                              // 0x0089(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_99I9[0x6];                                   // 0x008A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              CoopMoveActor;                                           // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.PlayerSpeedModifierData
	 * Size -> 0x001C
	 */
	struct FPlayerSpeedModifierData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartPawnTime;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      duration;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      fadeOutDuration;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Modifier;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NetworkVector2D
	 * Size -> 0x001C
	 */
	struct FNetworkVector2D
	{
	public:
		struct FVector2D                                           ReplicatedValue;                                         // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTM4[0x14];                                  // 0x0008(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.OwnedItemSettings
	 * Size -> 0x0058
	 */
	struct FOwnedItemSettings
	{
	public:
		struct FItemDefinition                                     ItemDefinition;                                          // 0x0000(0x0048) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class ARBPickup*                                           SpawnedItem;                                             // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EquippableInventorySlot;                                 // 0x0050(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PF60[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerShoveData
	 * Size -> 0x0010
	 */
	struct FPlayerShoveData
	{
	public:
		class ARBNPC*                                              TargetNPC;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ShoveAnimation;                                          // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerHitReactionParams
	 * Size -> 0x0048
	 */
	struct FPlayerHitReactionParams
	{
	public:
		float                                                      PawnTime;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      serverTime;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerHitReactionType                                     ReactionType;                                            // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_POU9[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WorldYaw;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeYaw;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayEffects;                                            // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_20SW[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             TargetPos;                                               // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetDir;                                               // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageLocation;                                          // 0x0034(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             HitReactionTriggerer;                                    // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScheduledSpecialAnimData
	 * Size -> 0x0048
	 */
	struct FScheduledSpecialAnimData
	{
	public:
		float                                                      PawnTime;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      serverTime;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInterruptInteraction;                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCollisionEnabled;                                       // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnchor;                                                 // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VEUE[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AnchorLocation;                                          // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnchorForward;                                           // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JP21[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Animation;                                               // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      blendInTime;                                             // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ScriptedAnimationYawLimit;                               // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ScriptedAnimationPitchLimit;                             // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B5VR[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DamageResult
	 * Size -> 0x0018
	 */
	struct FDamageResult
	{
	public:
		unsigned char                                              UnknownData_7V2C[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              DamageInstigator;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DizzinessData
	 * Size -> 0x0158
	 */
	struct FDizzinessData
	{
	public:
		unsigned char                                              UnknownData_KSKY[0x158];                                 // 0x0000(0x0158) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StaminaRestoreData
	 * Size -> 0x000C
	 */
	struct FStaminaRestoreData
	{
	public:
		float                                                      PawnTime;                                                // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      amount;                                                  // 0x0004(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoStaminaRegenTime;                                      // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ActiveEffectTrackingData
	 * Size -> 0x0010
	 */
	struct FActiveEffectTrackingData
	{
	public:
		class FName                                                EffectId;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UntilServerTime;                                         // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayValue;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerMemory
	 * Size -> 0x005C
	 */
	struct FPlayerMemory
	{
	public:
		unsigned char                                              UnknownData_B76R[0x5C];                                  // 0x0000(0x005C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPlayerCellSlotDefinition
	 * Size -> 0x0028
	 */
	struct FRBPlayerCellSlotDefinition
	{
	public:
		ECustomizationMenuCategory                                 Slot;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LM5J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Category;                                                // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LW6Y[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerCustomizationMaterialOverride
	 * Size -> 0x0038
	 */
	struct FRBPlayerCustomizationMaterialOverride
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Material[0x28];                                          // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.RBDefaultCustomizationSlotInfo
	 * Size -> 0x0010
	 */
	struct FRBDefaultCustomizationSlotInfo
	{
	public:
		class URBPlayerCustomizationOption*                        MaleDefaultOption;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBPlayerCustomizationOption*                        FemaleDefaultOption;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBDefaultCustomizationSlotInfoList
	 * Size -> 0x0010
	 */
	struct FRBDefaultCustomizationSlotInfoList
	{
	public:
		TArray<struct FRBDefaultCustomizationSlotInfo>             CustomizationSlotInfos;                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBHairColorOption
	 * Size -> 0x0028
	 */
	struct FRBHairColorOption
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        InGameColor;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        UIColor;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CustomizationSlotUIInfo
	 * Size -> 0x00A0
	 */
	struct FCustomizationSlotUIInfo
	{
	public:
		struct FSlateBrush                                         RewardBrush;                                             // 0x0000(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0088(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CustomizationRarityUIInfo
	 * Size -> 0x0068
	 */
	struct FCustomizationRarityUIInfo
	{
	public:
		struct FSlateColor                                         PrimaryColor;                                            // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSlateColor                                         SecondaryColor;                                          // 0x0028(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AlertedStateActions
	 * Size -> 0x0020
	 */
	struct FAlertedStateActions
	{
	public:
		unsigned char                                              ToTriggerOnAlerted[0x10];                                // 0x0000(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              ToUntriggerOnAlerted[0x10];                              // 0x0010(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct OPP.ActiveSkillCommonParams
	 * Size -> 0x0078
	 */
	struct FActiveSkillCommonParams
	{
	public:
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K1J2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                OnlineUnlockId;                                          // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VNFW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          HUDIconTexture;                                          // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateColor                                         PrimaryColor;                                            // 0x0048(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UClass*                                              ActiveSkillActorClass;                                   // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.StartAction
	 * Size -> 0x0030
	 */
	struct FStartAction
	{
	public:
		unsigned char                                              ActionActor[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_45YQ[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerStatTrackingConfig
	 * Size -> 0x0003
	 */
	struct FPlayerStatTrackingConfig
	{
	public:
		bool                                                       bGlobal;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCharacter;                                              // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTrial;                                                  // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerStatConfig
	 * Size -> 0x0060
	 */
	struct FRBPlayerStatConfig
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerStat                                                PlayerStat;                                              // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerStatAggregationType                                 AggregationType;                                         // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LGR[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultValue;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              InWorldDisplayName;                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Icon;                                                    // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayMultiplier;                                       // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DisplayDigits;                                           // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSortAscending;                                          // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerStatTrackingConfig                           TrackingConfig;                                          // 0x0059(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PG1I[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPosedDeadBodyCustomizationProxy
	 * Size -> 0x0008
	 */
	struct FRBPosedDeadBodyCustomizationProxy
	{
	public:
		class ARBPosedDeadBody*                                    Owner;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DetectionClearancePoint
	 * Size -> 0x001C
	 */
	struct FDetectionClearancePoint
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeLocation;                                        // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PushCartInfo
	 * Size -> 0x0020
	 */
	struct FPushCartInfo
	{
	public:
		class ARBPushCartSpawner*                                  spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPushCartSpawner*                                  Goal;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBBasePushable*                                     SpawnedPushable;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PathIdx;                                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRailCart;                                             // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3OTH[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PushCartRollingGateReplacementInfo
	 * Size -> 0x0038
	 */
	struct FPushCartRollingGateReplacementInfo
	{
	public:
		class ARBPushCartSpawner*                                  PathOwner;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PathSplineIndex;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLDI[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBSplineMeshActor*                                  SplineActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SplineActorOrderedDistanceOnRail;                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8E4O[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Actor;                                                   // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBTriggerableGate*                                  RollingGate;                                             // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPushCartRailBlocker*                              SpawnedCartRailBlocker;                                  // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PushCartPath
	 * Size -> 0x0078
	 */
	struct FPushCartPath
	{
	public:
		class UClass*                                              PushableClass;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPushCartSpawner*                                  PathGoal;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBSplineMeshActor*>                          OrderedSplines;                                          // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic
		TArray<class ARBSplineMeshActor*>                          OverlappingSplines;                                      // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic
		unsigned char                                              ActorToIgnoreCollision[0x10];                            // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty
		float                                                      DistanceAlongSpline;                                     // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceUseSinglePath;                                     // 0x0044(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MB1G[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ActorsToToggleWhenEnabled[0x10];                         // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              ActorsToUnToggleWhenEnabled[0x10];                       // 0x0058(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class ARBPushCartSpawner*                                  PathOwner;                                               // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PathIndex;                                               // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB3J[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PuzzleRoomSection
	 * Size -> 0x00E0
	 */
	struct FPuzzleRoomSection
	{
	public:
		struct FConfigurableInt                                    MinimumPuzzleRoomsInSection;                             // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RoomsInSection[0x10];                                    // 0x00C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		int32_t                                                    scheduledRoomsCount;                                     // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    randomID;                                                // 0x00DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PasscodeOrderSet
	 * Size -> 0x00E0
	 */
	struct FPasscodeOrderSet
	{
	public:
		class FName                                                OrderSetName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bAvailable;                                              // 0x0008(0x0060) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartAtFirst;                                           // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TD8Z[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableBool                                   bKeepSequential;                                         // 0x0070(0x0060) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          Materials;                                               // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.QuestGiverAnimations
	 * Size -> 0x0050
	 */
	struct FQuestGiverAnimations
	{
	public:
		class UAnimSequenceBase*                                   DefaultIdle;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   InMenuIdle;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   FirstTimeEnterMenu;                                      // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   EnterMenu;                                               // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   AccessTaskTab;                                           // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   AcceptTask;                                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   AccessUpgradeTab;                                        // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   AccessShopTab;                                           // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   BuyUpgrade;                                              // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                   ExitMenu;                                                // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RemoteDebuggingState
	 * Size -> 0x0020
	 */
	struct FRemoteDebuggingState
	{
	public:
		bool                                                       bDebugAI;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugPlayer;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugAIConfig;                                          // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugStreaming;                                         // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugScoring;                                           // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugMusic;                                             // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugDoorRandomization;                                 // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverseer;                                               // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugNPCRandomization;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugPlayerStats;                                       // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugAnalytics;                                         // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_87AE[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBNPC*                                              NPCToDebug;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayer*                                           PlayerToDebug;                                           // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerDebugInfo
	 * Size -> 0x0028
	 */
	struct FPlayerDebugInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasHotPotato;                                           // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WI1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHitResult>                                  ServerPhysHitResults;                                    // 0x0010(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      LastUpdatedTime;                                         // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1BF[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InvestigationDebugData
	 * Size -> 0x0038
	 */
	struct FInvestigationDebugData
	{
	public:
		unsigned char                                              NbPointsToCheck;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NbPointsChecked;                                         // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   NumInvestigationPoints;                                  // 0x0002(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M648[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBPlayer*                                           TargetPlayer;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDynamicLookActive;                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDynamicLookExplicit;                                    // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvestigatingDisturbance;                               // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAtInvestigationPoint;                                   // 0x0013(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvestigatingSource;                                    // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVIT[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBNPCInterestPointComponent*                        CurrentInterestPointComp;                                // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ExplicitInterestLocation;                                // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterestLookDuration;                                    // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NumInterestPoints;                                       // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2DF[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PatrolDebugData
	 * Size -> 0x0020
	 */
	struct FPatrolDebugData
	{
	public:
		bool                                                       bAtWaypoint;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPatrolType                                                Type;                                                    // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPatrolWaypointSelectionMode                               Mode;                                                    // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForced;                                                 // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   NumWaypoints;                                            // 0x0004(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I3TP[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBWaypoint*                                         DestinationWaypoint;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DestinationPoint;                                        // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04IQ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPerPlayerTraceInfo
	 * Size -> 0x0020
	 */
	struct FAIPerPlayerTraceInfo
	{
	public:
		unsigned char                                              UnknownData_O56I[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPerPlayerDebugData
	 * Size -> 0x0078
	 */
	struct FAIPerPlayerDebugData
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerVisibilityType                                      VisibilityType;                                          // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ALU[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VisibilityModifier;                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerVisibilityState                                     CurrentVisibilityState;                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXAG[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIPerPlayerTraceInfo                               LastEyeTraceInfo;                                        // 0x0014(0x0020) NoDestructor, NativeAccessSpecifierPublic
		struct FAIPerPlayerTraceInfo                               LastCapsuleTraceInfo;                                    // 0x0034(0x0020) NoDestructor, NativeAccessSpecifierPublic
		float                                                      LastPlayerVisionUpdatedTime;                             // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AudioOcclusion;                                          // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PathedDistance;                                          // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastKnownLocation;                                       // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerAwarenessState                                      AwarenessState;                                          // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAwareOfSpecialLocation;                                 // 0x006D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvisibleCheat;                                         // 0x006E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerOutsideLeash;                                     // 0x006F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceIgnorePlayerUntilTime;                              // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceAwarenessUntilTime;                                 // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIVisionDebugData
	 * Size -> 0x00C8
	 */
	struct FAIVisionDebugData
	{
	public:
		struct FAIVisionCone                                       PartialVisibilityCone;                                   // 0x0000(0x0030) NoDestructor, NativeAccessSpecifierPublic
		struct FAIVisionCone                                       FullVisibilityCone;                                      // 0x0030(0x0030) NoDestructor, NativeAccessSpecifierPublic
		struct FAIVisionCone                                       DarknessPartialVisibilityCone;                           // 0x0060(0x0030) NoDestructor, NativeAccessSpecifierPublic
		struct FAIVisionCone                                       DarknessFullVisibilityCone;                              // 0x0090(0x0030) NoDestructor, NativeAccessSpecifierPublic
		float                                                      CloseDistance_FullVisibility;                            // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloseDistance_PartialVisibility;                         // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BotDebugInfo
	 * Size -> 0x0308
	 */
	struct FBotDebugInfo
	{
	public:
		class ARBNPC*                                              NPC;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CharLocation;                                            // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckStuckTimer;                                         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBPartialAIConfig*>                          PartialConfigs;                                          // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		EAIDebugConfigFlags                                        ConfigFlags;                                             // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXMO[0x1];                                   // 0x0031(0x0001) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EAIDebugErrorFlags                                         ErrorFlags;                                              // 0x0032(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3AH[0x1];                                   // 0x0033(0x0001) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EAISpawnSource                                             SpawnSource;                                             // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5IY[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnedStageTime;                                        // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIActivity                                                Activity;                                                // 0x003C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2V7C[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AIActivityDebugString;                                   // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoveStatus                                                MoveStatus;                                              // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQAR[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             MoveDest;                                                // 0x0054(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveDestBuffer;                                          // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERotationMode                                              RotationMode;                                            // 0x0064(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SWRU[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIAmbientData                                      Ambient;                                                 // 0x0068(0x0028) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAIScriptedData                                     Scripted;                                                // 0x0090(0x0020) NoDestructor, NativeAccessSpecifierPublic
		struct FAIScriptedConfig                                   ScriptedConfig;                                          // 0x00B0(0x0080) ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAIAmbushData                                       Ambush;                                                  // 0x0130(0x0048) ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FInvestigationDebugData                             Investigation;                                           // 0x0178(0x0038) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FPatrolDebugData                                    Patrol;                                                  // 0x01B0(0x0020) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FAIPerPlayerDebugData>                       PlayerData;                                              // 0x01D0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FAIVisionDebugData                                  VisionData;                                              // 0x01E0(0x00C8) NoDestructor, NativeAccessSpecifierPublic
		EAIAwarenessStateType                                      AwarenessStateType;                                      // 0x02A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EF4A[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AwarenessStateDebugString;                               // 0x02B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasLeash;                                               // 0x02C0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QP8R[0x3];                                   // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConsideredOutsideLeashStartTime;                         // 0x02C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConsideredOutsideLeash;                                 // 0x02C8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLFX[0x3];                                   // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      stamina;                                                 // 0x02CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAIEventLogItem>                             RecentEvents;                                            // 0x02D0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsSeekingRetirement;                                    // 0x02E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OWP7[0x7];                                   // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              LookAtTarget;                                            // 0x02E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtEnabled;                                          // 0x02F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtValidState;                                       // 0x02F1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T41S[0x2];                                   // 0x02F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LookAtTargetPosition;                                    // 0x02F4(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastUpdatedTime;                                         // 0x0300(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A4NZ[0x4];                                   // 0x0304(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TargetStreamingState
	 * Size -> 0x0038
	 */
	struct FTargetStreamingState
	{
	public:
		TArray<class FName>                                        PreloadingLevelNames;                                    // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ForcedLevelNames;                                        // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        CommittedLevelNames;                                     // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bWaitingForCommit;                                       // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitingForMapTransition;                                // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitingForWorldPopulate;                                // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bServerPopulated;                                        // 0x0033(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClientCanPopulate;                                      // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EF5R[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SubLevelStreamingStatus
	 * Size -> 0x0020
	 */
	struct FSubLevelStreamingStatus
	{
	public:
		class FString                                              LevelName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StreamingStatus;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CurrentState;                                            // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetState;                                             // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFakePersistent;                                         // 0x0013(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceUnloaded;                                          // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LoadPercentage;                                          // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ReattachPercentage;                                      // 0x0016(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TANL[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LoadTime;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7N6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LevelStreamingInfo
	 * Size -> 0x0080
	 */
	struct FLevelStreamingInfo
	{
	public:
		struct FTargetStreamingState                               TargetStreamingState;                                    // 0x0000(0x0038) NativeAccessSpecifierPublic
		bool                                                       bWasStreamingStable;                                     // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasStreamingReadyToCommit;                              // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasStreamingTargetStateReached;                         // 0x003A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasWorldPopulatingDone;                                 // 0x003B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KLSM[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PersistentName;                                          // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSubLevelStreamingStatus>                    StreamingStatus;                                         // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      CPUTimePct;                                              // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5PN[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   UsedPhysicalMemory;                                      // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   PeakUsedPhysicalMemory;                                  // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrameTime;                                               // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G3FV[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScoringPlayerDebugInfo
	 * Size -> 0x0028
	 */
	struct FScoringPlayerDebugInfo
	{
	public:
		class ARBPlayerState*                                      RBPlayerState;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerName;                                              // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRecordedScoringEvent>                       RecordedScoringEvents;                                   // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScoringDebugInfo
	 * Size -> 0x0010
	 */
	struct FScoringDebugInfo
	{
	public:
		TArray<struct FScoringPlayerDebugInfo>                     ScoringPlayerDebugInfoList;                              // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MusicPlayerDebugInfo
	 * Size -> 0x0038
	 */
	struct FMusicPlayerDebugInfo
	{
	public:
		class FString                                              LocalPlayerName;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ThreateningNPCName;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThreatLevel;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZP9[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMusicStateChangeEvent>                      StateChanges;                                            // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MusicDebugInfo
	 * Size -> 0x0018
	 */
	struct FMusicDebugInfo
	{
	public:
		TArray<struct FMusicPlayerDebugInfo>                       PlayerInfos;                                             // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      GatheredTime;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JA3V[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledBotSpawnAtMonserClosetData
	 * Size -> 0x0048
	 */
	struct FScheduledBotSpawnAtMonserClosetData
	{
	public:
		class ARBAISpawner*                                        spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              NPCClass;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBPartialAIConfig*>                          PartialConfigs;                                          // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JYRW[0x1];                                   // 0x0028(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EMonsterClosetSelectionMode                                RespawnClosetSelectionMode;                              // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCType                                                   NPCType;                                                 // 0x002A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForRespawn;                                             // 0x002B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRespawnCloseToAPlayer;                                  // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReadyToSpawn;                                           // 0x002D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JCE3[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Debug_TimeAfterScheduled;                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NH2M[0x10];                                  // 0x0034(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRespawnDelay;                                         // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OverseerPerBotInfo
	 * Size -> 0x0030
	 */
	struct FOverseerPerBotInfo
	{
	public:
		class ARBNPC*                                              NPC;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIActivity                                                CurrentActivity;                                         // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMoving;                                                 // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XSH[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     CurrentPath;                                             // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              ConfigName;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIDirectorPerPlayerDebugInfo
	 * Size -> 0x0028
	 */
	struct FAIDirectorPerPlayerDebugInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerProximityStatus                                     PlayerProximityStatus;                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OCJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerProximityStatusDuration;                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothedPlayerProximityValue;                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InstantPlayerProximityValue;                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerRushingStatus                                       PlayerRushingStatus;                                     // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHIP[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerRushingStatusDuration;                             // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentPlayerRushingMeter;                               // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7PT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ActiveBotDebugInfo
	 * Size -> 0x0028
	 */
	struct FActiveBotDebugInfo
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B1LU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BotName;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnedStageTime;                                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAIActivity                                                Activity;                                                // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFNZ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinTimeLeftBeforeRetirement;                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3V0W[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIDirectorDebugInfo
	 * Size -> 0x00C0
	 */
	struct FAIDirectorDebugInfo
	{
	public:
		bool                                                       bSystemicSpawningEnabled;                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A3RO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBAIDirectorConfig*                                 AIDirectorConfig;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAIDirectorPerPlayerDebugInfo>               PlayerInfos;                                             // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FRandomNPCSpawningDebugInfo                         RandomSpawning;                                          // 0x0020(0x0010) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FActiveBotDebugInfo>                         ActiveSummonedBots;                                      // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      RetiringNPCs;                                            // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      RetirementPendingNPCs;                                   // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      NPCsInLimbo;                                             // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FAdversityData                                      Adversity;                                               // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDynamicPressureData                                DynamicPressure;                                         // 0x0078(0x0018) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSummonedBotDebugInfo>                       SummonedBotsLog;                                         // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPressureEventDebugData>                     PressureEventLog;                                        // 0x00A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FFailedBotSummonDebugInfo>                   LastFailedSummons;                                       // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OverseerInfo
	 * Size -> 0x0118
	 */
	struct FOverseerInfo
	{
	public:
		int32_t                                                    NumPlayersAlive;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumPlayersIncapacitated;                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumPlayersDead;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBF7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FScheduledBotSpawnAtMonserClosetData>        ScheduledSpawns;                                         // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOverseerPerBotInfo>                         BotInfos;                                                // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FAIDirectorDebugInfo                                AIDirectorInfo;                                          // 0x0030(0x00C0) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FGameEvent>                                  GameEvents;                                              // 0x00F0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              GameStateDesc;                                           // 0x0100(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GatheringTime;                                           // 0x0110(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StageStartedTime;                                        // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GameplayRandomizationDebugInfo
	 * Size -> 0x0100
	 */
	struct FGameplayRandomizationDebugInfo
	{
	public:
		int32_t                                                    NumberOfRandomizedPuzzleRooms;                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRandomizedActivePuzzleRooms;                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRandomizedRewardRooms;                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRandomizedActiveRewardRooms;                     // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRandomizedTriggerableGates;                      // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfClosedTriggerableGates;                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDoors;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfBlockedDoors;                                    // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfBlockableDoors;                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfUnblockableBlockableDoors;                       // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRemovedDoors;                                    // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfRemovedDoorsByRandomization;                     // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfReplacedDoors;                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfReplaceableDoors;                                // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        DoorReplacementNames;                                    // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            DoorReplacementCountByNames;                             // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfTrappedDoors;                                    // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfLockedDoors;                                     // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        DoorLockNames;                                           // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            DoorLockCountByNames;                                    // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfOpenDoors;                                       // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfClosedDoors;                                     // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDoorCoopBash;                                    // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfMiscBlockables;                                  // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfBlockedMiscBlockables;                           // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfBlockableMiscBlockables;                         // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfUnblockableMiscBlockables;                       // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfHidespots;                                       // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDisableableHidespots;                            // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDisabledHidespots;                               // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBGlassFloorTrap*>                           GlassFloorTraps;                                         // 0x00A8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OH7V[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBSoundTrap*>                                SoundTraps;                                              // 0x00C0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJB5[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBExplosiveTrap*>                            ExplosiveTraps;                                          // 0x00D8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class URBElectricFloorTrapComponent*>               ElectricTrapFloors;                                      // 0x00E8(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSVJ[0x8];                                   // 0x00F8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerStatsChaseDetails
	 * Size -> 0x0070
	 */
	struct FPlayerStatsChaseDetails
	{
	public:
		bool                                                       bActive;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3VG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartTime;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastChaseStopTime;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActiveNPCs;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalNPCs;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XBP6[0x54];                                  // 0x0014(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bTookDamage;                                             // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIncapacitated;                                          // 0x0069(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsedHidingSpot;                                         // 0x006A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QWLZ[0x5];                                   // 0x006B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StatsRuntimeData
	 * Size -> 0x02F8
	 */
	struct FStatsRuntimeData
	{
	public:
		class ARBController*                                       RBController;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerState*                                      RBPlayerState;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProfileId                                          ProfileId;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBPlayerStatsConfig*                                RBPlayerStatsConfig;                                     // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EPlayerStat, float>                                   CurrentMainObjectiveStats;                               // 0x0028(0x0050) NativeAccessSpecifierPublic
		TMap<EPlayerStat, float>                                   StageStats;                                              // 0x0078(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3C31[0x190];                                 // 0x00C8(0x0190) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NVStartTime;                                             // 0x0258(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HidespotStartTime;                                       // 0x025C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastIncapacitatedTime;                                   // 0x0260(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastKilledTime;                                          // 0x0264(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastElectricFloorTrapDamageTime;                         // 0x0268(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PsychosisStartTime;                                      // 0x026C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerStatsChaseDetails                            ChaseDetails;                                            // 0x0270(0x0070) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RAS[0x18];                                  // 0x02E0(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RepulsionRule
	 * Size -> 0x0030
	 */
	struct FRepulsionRule
	{
	public:
		ERepulsionRuleType                                         RuleType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RepulsionDirection;                                      // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZS8[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForwardBlindSpotAngle;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseVelocityOverLocation;                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6QYJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RepulsionCenterRelativeOffset;                           // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERepulsionReactionType                                     ReactionType;                                            // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERepulsionReactionFilter                                   ReactionFilter;                                          // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5DJD[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      TargettedActors;                                         // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RoomDetourPathData
	 * Size -> 0x0010
	 */
	struct FRoomDetourPathData
	{
	public:
		TArray<class URBRoomConnectorComponent*>                   DetourPath;                                              // 0x0000(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RoomAssociationComponentList
	 * Size -> 0x0010
	 */
	struct FRoomAssociationComponentList
	{
	public:
		TArray<class URBRoomAssociationComponent*>                 AssociatedComponents;                                    // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MazeSectionConfigData
	 * Size -> 0x1618
	 */
	struct FMazeSectionConfigData
	{
	public:
		struct FRandomSettings                                     RollingGateRandomizationBlockedCount;                    // 0x0000(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_RollingGateRandomizationBlockedCount : 1;      // 0x0320(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LERI[0x7];                                   // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DoorRandomizationBlockedCount;                           // 0x0328(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorRandomizationBlockedCount : 1;             // 0x0648(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1A2C[0x7];                                   // 0x0649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     BlockableRandomizationBlockedCount;                      // 0x0650(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_BlockableRandomizationBlockedCount : 1;        // 0x0970(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6NI8[0x7];                                   // 0x0971(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DoorRandomizationReplacedCount;                          // 0x0978(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorRandomizationReplacedCount : 1;            // 0x0C98(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1C86[0x7];                                   // 0x0C99(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DoorRandomizationTrappedCount;                           // 0x0CA0(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorRandomizationTrappedCount : 1;             // 0x0FC0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XKY[0x7];                                   // 0x0FC1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DoorRandomizationLockedCount;                            // 0x0FC8(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorRandomizationLockedCount : 1;              // 0x12E8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABP0[0x7];                                   // 0x12E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DoorRandomizationOpenCount;                              // 0x12F0(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_DoorRandomizationOpenCount : 1;                // 0x1610(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OW1J[0x7];                                   // 0x1611(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.HidespotSectionConfigData
	 * Size -> 0x00D0
	 */
	struct FHidespotSectionConfigData
	{
	public:
		struct FConfigurableFloat                                  HidespotRandomization_DisabledRatio;                     // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_HidespotRandomization_DisabledRatio : 1;       // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUEY[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrapSpacingData
	 * Size -> 0x0410
	 */
	struct FTrapSpacingData
	{
	public:
		struct FConfigurableFloat                                  TrapSpacingDistance;                                     // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TrapSpacingDistance : 1;                       // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRH7[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  SoundTrapToSoundTrapSpacingDistance;                     // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SoundTrapToSoundTrapSpacingDistance : 1;       // 0x0198(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C0MQ[0x7];                                   // 0x0199(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  ExplosiveTrapToExplosiveTrapSpacingDistance;             // 0x01A0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplosiveTrapToExplosiveTrapSpacingDistance : 1; // 0x0268(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9C23[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  ElectricFloorTrapToElectricFloorTrapSpacingDistance;     // 0x0270(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ElectricFloorTrapToElectricFloorTrapSpacingDistance : 1; // 0x0338(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1Z4[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PsychosisMineTrapCountToPsychosisMineTrapCountSpacingDistance; // 0x0340(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PsychosisMineTrapCountToPsychosisMineTrapCountSpacingDistance : 1; // 0x0408(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KBB[0x7];                                   // 0x0409(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrapSectionConfigData
	 * Size -> 0x13E0
	 */
	struct FTrapSectionConfigData
	{
	public:
		struct FTrapSpacingData                                    TrapSpacingData;                                         // 0x0000(0x0410) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TrapSpacingData : 1;                           // 0x0410(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N0XW[0x7];                                   // 0x0411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     TrapGroupCount;                                          // 0x0418(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_TrapGroupCount : 1;                            // 0x0738(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JV2D[0x7];                                   // 0x0739(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     SoundTrapCount;                                          // 0x0740(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_SoundTrapCount : 1;                            // 0x0A60(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5VA[0x7];                                   // 0x0A61(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     ExplosiveTrapCount;                                      // 0x0A68(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ExplosiveTrapCount : 1;                        // 0x0D88(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIPT[0x7];                                   // 0x0D89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     ElectricFloorTrapCount;                                  // 0x0D90(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_ElectricFloorTrapCount : 1;                    // 0x10B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESX8[0x7];                                   // 0x10B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     PsychosisMineTrapCount;                                  // 0x10B8(0x0320) Edit, NativeAccessSpecifierPublic
		unsigned char                                              bOverride_PsychosisMineTrapCount : 1;                    // 0x13D8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SBXI[0x7];                                   // 0x13D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTrialSectionConfigData
	 * Size -> 0x2AC8
	 */
	struct FRBTrialSectionConfigData
	{
	public:
		struct FMazeSectionConfigData                              MazeData;                                                // 0x0000(0x1618) Edit, NativeAccessSpecifierPublic
		struct FHidespotSectionConfigData                          HidespotData;                                            // 0x1618(0x00D0) Edit, NativeAccessSpecifierPublic
		struct FTrapSectionConfigData                              TrapData;                                                // 0x16E8(0x13E0) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SectionAIConfigOverride
	 * Size -> 0x0010
	 */
	struct FSectionAIConfigOverride
	{
	public:
		ENPCType                                                   NPCType;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7F1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBAIConfig*                                         Config;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SectionItemSpawningOverride
	 * Size -> 0x00D0
	 */
	struct FSectionItemSpawningOverride
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9B5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  StageCountPercent;                                       // 0x0008(0x00C8) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObstacleVariatorComponentList
	 * Size -> 0x0010
	 */
	struct FObstacleVariatorComponentList
	{
	public:
		TArray<class URBObstacleVariatorComponent*>                List;                                                    // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObstacleRandomizationRuntimeData
	 * Size -> 0x00C0
	 */
	struct FObstacleRandomizationRuntimeData
	{
	public:
		unsigned char                                              UnknownData_OB7B[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FObstacleVariatorComponentList>              Obstacles;                                               // 0x00A0(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class ARBTrapGroup*>                                TrapGroups;                                              // 0x00B0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RoomGroupConnectionInfo
	 * Size -> 0x0018
	 */
	struct FRoomGroupConnectionInfo
	{
	public:
		class ARBRoomGroup*                                        ConnectedRoomGroup;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class URBRoomConnectorComponent*>                   RoomConnectors;                                          // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MissionTransitionDirection
	 * Size -> 0x0030
	 */
	struct FMissionTransitionDirection
	{
	public:
		ESASTransitionDirection                                    TransitionDirection;                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeEntrance;                                          // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeExit;                                              // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQIA[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBMissionID                                        MissionID;                                               // 0x0008(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SaveGameInfo
	 * Size -> 0x0030
	 */
	struct FSaveGameInfo
	{
	public:
		class URBSaveGameBase*                                     SaveGame;                                                // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SaveGameClass;                                           // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJ6K[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ScheduledSpawnerSpawnAIData
	 * Size -> 0x1268
	 */
	struct FScheduledSpawnerSpawnAIData
	{
	public:
		class ARBAISpawner*                                        spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PawnClass;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCType                                                   NPCType;                                                 // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCFlavor                                                 Flavor;                                                  // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKX5[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBPartialAIConfig*>                          AdditionalConfigs;                                       // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FAIConfigData                                       ConfigOverrides;                                         // 0x0030(0x1230) NoDestructor, NativeAccessSpecifierPublic
		class URBVOMapping*                                        VOMappingOverride;                                       // 0x1260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScoringMissionConfig
	 * Size -> 0x00F0
	 */
	struct FScoringMissionConfig
	{
	public:
		struct FRBMissionID                                        MissionID;                                               // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    TimeToCompleteSeconds;                                   // 0x0028(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScoringStageConfig
	 * Size -> 0x0100
	 */
	struct FScoringStageConfig
	{
	public:
		struct FRBStageID                                          StageID;                                                 // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    DefaultTimeToCompleteSeconds;                            // 0x0028(0x00C8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FScoringMissionConfig>                       MissionConfigs;                                          // 0x00F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ScoringTextValueMapping
	 * Size -> 0x0018
	 */
	struct FScoringTextValueMapping
	{
	public:
		float                                                      Score;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTIV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                        DisplayValues;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InvestigationAnalysisSettings
	 * Size -> 0x0028
	 */
	struct FInvestigationAnalysisSettings
	{
	public:
		float                                                      DistanceInterval;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EntryYawAngleInterval;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightClearanceAngleInterval;                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimAnalysisTimeInterval;                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLookRotationSpeed;                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumLookDuration;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxNavClearanceTestDist;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSightClearanceTestDist;                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightTraceZOffset;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDistanceIntervalsCount;                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.VoiceChatPlayerAudioEventNames
	 * Size -> 0x0090
	 */
	struct FVoiceChatPlayerAudioEventNames
	{
	public:
		class FString                                              StartTalking3DEventName;                                 // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StopTalking3DEventName;                                  // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StartTalking2DEventName;                                 // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StopTalking2DEventName;                                  // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StartWatchEventName;                                     // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StopWatchEventName;                                      // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WatchActivationRTPCName;                                 // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WatchDistanceRTPCName;                                   // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VolumeRTPCName;                                          // 0x0080(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FootStepSurfaceData
	 * Size -> 0x0010
	 */
	struct FFootStepSurfaceData
	{
	public:
		class FName                                                SurfaceName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AINoiseLoudness;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              DebugColor;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FootStepSurfaceModiferData
	 * Size -> 0x0018
	 */
	struct FFootStepSurfaceModiferData
	{
	public:
		EFootStepModifierType                                      FootstepModifierType;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJJS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ModifierName;                                            // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AINoiseLoudness;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StepLingeringCount;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              DebugColor;                                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DevDecalData
	 * Size -> 0x0038
	 */
	struct FDevDecalData
	{
	public:
		unsigned char                                              Material[0x28];                                          // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector2D                                           DefaultDecalSize;                                        // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultDecalDepth;                                       // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultRotation;                                         // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FeatureSwitchDefaultValueConfiguration
	 * Size -> 0x0018
	 */
	struct FFeatureSwitchDefaultValueConfiguration
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultValue;                                           // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB42[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PawnSpeedSettings
	 * Size -> 0x0030
	 */
	struct FPawnSpeedSettings
	{
	public:
		float                                                      NormalWalkSpeed;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalRunSpeed;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintSpeed;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchedSpeed;                                           // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KnockedDownSpeed;                                        // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LargePickupWalkSpeed;                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LargePickupRunSpeed;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LargePickupSprintSpeed;                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LargePickupCrouchSpeed;                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterMaxSlowDownRatio;                                   // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterDepthMinSlowDownStart;                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterDepthMaxSlowDownStart;                              // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HelpUpCameraLimit
	 * Size -> 0x001C
	 */
	struct FHelpUpCameraLimit
	{
	public:
		float                                                      MinPitchStart;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPitchEnd;                                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      maxPitch;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinYawStart;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxYawStart;                                             // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinYawEnd;                                               // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxYawEnd;                                               // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DifficultyConfig
	 * Size -> 0x00E0
	 */
	struct FDifficultyConfig
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                DisplayNameCAPS;                                         // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EGameDifficulty                                            Difficulty;                                              // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q18W[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         Icon;                                                    // 0x0050(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    RecommendedPlayerLevel;                                  // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30QA[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.IngameItemConfig
	 * Size -> 0x0028
	 */
	struct FIngameItemConfig
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8FG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftClassPath                                      ItemClassPath;                                           // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemInventoryPriority;                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AG80[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DestructibleMaterialDataSettings
	 * Size -> 0x000C
	 */
	struct FDestructibleMaterialDataSettings
	{
	public:
		int32_t                                                    NumberOfWeakHitForDestruction;                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfStrongHitForDestruction;                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MultiHitCount;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DestructibleMaterialSettings
	 * Size -> 0x0048
	 */
	struct FDestructibleMaterialSettings
	{
	public:
		struct FDestructibleMaterialDataSettings                   PunchSettings;                                           // 0x0000(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialDataSettings                   KickSettings;                                            // 0x000C(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialDataSettings                   SlashSettings;                                           // 0x0018(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialDataSettings                   ChopSettings;                                            // 0x0024(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialDataSettings                   LightBluntSettings;                                      // 0x0030(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialDataSettings                   HeavyBluntSettings;                                      // 0x003C(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DestructiblesSettings
	 * Size -> 0x0120
	 */
	struct FDestructiblesSettings
	{
	public:
		struct FDestructibleMaterialSettings                       WoodMaterialSettings;                                    // 0x0000(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialSettings                       WoodenDoorMaterialSettings;                              // 0x0048(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialSettings                       ConcreteMaterialSettings;                                // 0x0090(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDestructibleMaterialSettings                       MannequinMaterialSettings;                               // 0x00D8(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PuzzleRoomRewardConfig
	 * Size -> 0x00D8
	 */
	struct FPuzzleRoomRewardConfig
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6KCR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableInt                                    Number;                                                  // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       b5Stars;                                                 // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       b4Stars;                                                 // 0x00D1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       b3Stars;                                                 // 0x00D2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       b2Stars;                                                 // 0x00D3(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       b1Stars;                                                 // 0x00D4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4XFU[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CurencySettings
	 * Size -> 0x0030
	 */
	struct FCurencySettings
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Tint;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.UnalterableBinding
	 * Size -> 0x0008
	 */
	struct FUnalterableBinding
	{
	public:
		class FName                                                ActionName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CustomizationMenuCategoryParams
	 * Size -> 0x0020
	 */
	struct FCustomizationMenuCategoryParams
	{
	public:
		class FText                                                CategoryName;                                            // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OnlineErrorTexts
	 * Size -> 0x0AC0
	 */
	struct FOnlineErrorTexts
	{
	public:
		class FText                                                InitialConnectionFlowFailed;                             // 0x0000(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InitialConnectionFlowFailed_AgeRestrictionFailure;       // 0x0018(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InitialConnectionFlowFailed_RequiredPatchAvailable;      // 0x0030(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InitialConnectionFlowFailed_RequiredSystemUpdate;        // 0x0048(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InitialConnectionFlowFailed_OnlinePlayRestricted;        // 0x0060(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToJoinParty;                                       // 0x0078(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToJoinLobby;                                       // 0x0090(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToMigrateToNewLobby;                               // 0x00A8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedGameSessionMigration;                              // 0x00C0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToFindTutorialServer;                              // 0x00D8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToSearchGameSessions;                              // 0x00F0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToJoinGameSession;                                 // 0x0108(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                UnableToJoinGameSessionGameNotFullyDownloaded;           // 0x0120(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                SoloMode_UnableToJoinGroup;                              // 0x0138(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                SoloMode_InviteIgnored;                                  // 0x0150(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                MatchCanceledDueToError;                                 // 0x0168(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FindPartyCanceledDueToError;                             // 0x0180(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToCreateLobbyMatchmakingTicket;                    // 0x0198(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                MatchmakingFailed;                                       // 0x01B0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToRequestContacts;                                 // 0x01C8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToRequestFriendCode;                               // 0x01E0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToRequestPartyInformation;                         // 0x01F8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToUpdatePartyInformation;                          // 0x0210(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToRequestContactProfile;                           // 0x0228(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToPerformRequestedContactAction;                   // 0x0240(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToSendFriendRequest;                               // 0x0258(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                KickedFromServer;                                        // 0x0270(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToGetPlayerData;                                   // 0x0288(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                MissingPlayPrivilege;                                    // 0x02A0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToPurchaseUpgrade;                                 // 0x02B8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToUpdatePlayerProgressionData;                     // 0x02D0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToUpdatePlayerStatsData;                           // 0x02E8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToUpdateTasks;                                     // 0x0300(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToRequestProducts;                                 // 0x0318(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FailedToPurchaseProduct;                                 // 0x0330(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PersistentConnectionLost;                                // 0x0348(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                DefaultErrorText;                                        // 0x0360(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InitialServerConnectionTimeOutText;                      // 0x0378(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionTimeOutText;                             // 0x0390(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionLostText;                                // 0x03A8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionFailedGameSessionFullText;               // 0x03C0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionFailedSoloGameSessionFullText;           // 0x03D8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionFailedPlayerSessionRefusedText;          // 0x03F0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionFailedPlayerSessionNotFoundText;         // 0x0408(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ServerConnectionFailedGameEndingText;                    // 0x0420(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                IdleKickedErrorText;                                     // 0x0438(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ViewLocationErrorKickedText;                             // 0x0450(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PlayerReportReasonsText[0x6];                            // 0x0468(0x0090) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrivilegeValidationError_Until;                          // 0x04F8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrivilegeValidationError_Play_TermsOfServiceViolation;   // 0x0510(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrivilegeValidationError_Play_Unknown;                   // 0x0528(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrivilegeValidationError_VoiceChat_TermsOfServiceViolation; // 0x0540(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrivilegeValidationError_VoiceChat_Unknown;              // 0x0558(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EMatchmakingErrorCodes, class FText>                  MatchmakingErrorCodeTextMapping;                         // 0x0570(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EPlayerProgressionErrorCodes, class FText>            PlayerProgressionErrorCodeTextMapping;                   // 0x05C0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EStoreErrorCodes, class FText>                        StoreErrorCodeTextMapping;                               // 0x0610(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EPartyErrorCodes, class FText>                        PartyErrorCodeTextMapping;                               // 0x0660(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EOnlineCoreErrorCode, class FText>                    CoreErrorCodeTextMapping;                                // 0x06B0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EPlatformErrorCodes, class FText>                     CorePlatformErrorCodeTextMapping;                        // 0x0700(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EConfigurationErrorCodes, class FText>                CoreConfigurationErrorCodeTextMapping;                   // 0x0750(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EAuthErrorCodes, class FText>                         CoreAuthErrorCodeTextMapping;                            // 0x07A0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EEntityErrorCodes, class FText>                       CoreEntityErrorCodeTextMapping;                          // 0x07F0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ECoreMatchmakingErrorCodes, class FText>              CoreMatchmakingErrorCodeTextMapping;                     // 0x0840(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EGameServerErrorCodes, class FText>                   CoreGameServerErrorCodeTextMapping;                      // 0x0890(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ECoreAnalyticsErrorCodes, class FText>                CoreAnalyticsErrorCodeTextMapping;                       // 0x08E0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<EInventoryErrorCodes, class FText>                    CoreInventoryErrorCodeTextMapping;                       // 0x0930(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ERTAErrorCodes, class FText>                          CoreRTAErrorCodeTextMapping;                             // 0x0980(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ERelationshipErrorCodes, class FText>                 CoreRelationshipErrorCodeTextMapping;                    // 0x09D0(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ECorePartyErrorCodes, class FText>                    CorePartyErrorCodeTextMapping;                           // 0x0A20(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TMap<ECorePresenceErrorCodes, class FText>                 CorePresenceErrorCodeTextMapping;                        // 0x0A70(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OPP.PresenceTexts
	 * Size -> 0x0120
	 */
	struct FPresenceTexts
	{
	public:
		class FText                                                OtherGame;                                               // 0x0000(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Unknown;                                                 // 0x0018(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InMainMenu;                                              // 0x0030(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InTutorial;                                              // 0x0048(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InLobby;                                                 // 0x0060(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PreparingExperiment;                                     // 0x0078(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InExperiment;                                            // 0x0090(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InUnknownExperiment;                                     // 0x00A8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ReturningToLobby;                                        // 0x00C0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                FindingParty;                                            // 0x00D8(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InSameLobby;                                             // 0x00F0(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InSameExperiment;                                        // 0x0108(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TalkWheelStatusTexts
	 * Size -> 0x0040
	 */
	struct FTalkWheelStatusTexts
	{
	public:
		TArray<class FText>                                        Crawling;                                                // 0x0000(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Chase;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Danger;                                                  // 0x0020(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        CoopMove;                                                // 0x0030(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TalkWheelActiveSkillTexts
	 * Size -> 0x0040
	 */
	struct FTalkWheelActiveSkillTexts
	{
	public:
		TArray<class FText>                                        NoneEquipped;                                            // 0x0000(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Empty;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        cooldown;                                                // 0x0020(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Ready;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TalkWheelTexts
	 * Size -> 0x0148
	 */
	struct FTalkWheelTexts
	{
	public:
		TArray<class FText>                                        Help;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Acknowledge;                                             // 0x0010(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Regroup;                                                 // 0x0020(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Wait;                                                    // 0x0030(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Danger;                                                  // 0x0040(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Thanks;                                                  // 0x0050(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        OnMyWay;                                                 // 0x0060(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Hello;                                                   // 0x0070(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Trade;                                                   // 0x0080(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        Drop;                                                    // 0x0090(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        PingFallback;                                            // 0x00A0(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTalkWheelStatusTexts                               status;                                                  // 0x00B0(0x0040) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTalkWheelActiveSkillTexts                          ActiveSkill;                                             // 0x00F0(0x0040) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Throttled;                                               // 0x0130(0x0018) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RoomPathingNode
	 * Size -> 0x0030
	 */
	struct FRoomPathingNode
	{
	public:
		class URBRoomConnectorComponent*                           Connector;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DXA[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTaggedVisionActorClientData
	 * Size -> 0x0048
	 */
	struct FRBTaggedVisionActorClientData
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     MainMesh;                                                // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMeshComponent*>                              AllActorMeshes;                                          // 0x0010(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UMeshComponent*>                              OverridenActorMeshes;                                    // 0x0020(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EGO0[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTaggedVisionActorServerData
	 * Size -> 0x0010
	 */
	struct FRBTaggedVisionActorServerData
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveUntilServerTime;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UC6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBAnimLengthStruct
	 * Size -> 0x0004
	 */
	struct FRBAnimLengthStruct
	{
	public:
		float                                                      AnimationLength;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.StalkingPlayerInfo
	 * Size -> 0x0010
	 */
	struct FStalkingPlayerInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastStalkingTimestamp;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EABS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.StalkerTargetInfo
	 * Size -> 0x0028
	 */
	struct FStalkerTargetInfo
	{
	public:
		class ARBNPC*                                              NPC;                                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBAISpawner*                                        spawner;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStalkingPlayerInfo>                         StalkingPlayers;                                         // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      CompletionMeter;                                         // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2689[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SwitchMatchLinkData
	 * Size -> 0x0008
	 */
	struct FSwitchMatchLinkData
	{
	public:
		int32_t                                                    LinkerIndex;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LinkedIndex;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SwitchMatchPuzzleData
	 * Size -> 0x00B0
	 */
	struct FSwitchMatchPuzzleData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bAvailabilityPerDifficulty;                              // 0x0008(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSwitchMatchLinkData>                        Links;                                                   // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            RemovedSwitches;                                         // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LockedSwitches;                                          // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            InteractionOrder;                                        // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumberOfInteraction;                                  // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WT7A[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTaskDataDisplayCondition
	 * Size -> 0x0018
	 */
	struct FRBTaskDataDisplayCondition
	{
	public:
		int32_t                                                    RequiredLevel;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EActiveSkillType>                                   RequiredAcquiredActiveSkillTypes;                        // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerLoadoutValidator
	 * Size -> 0x0018
	 */
	struct FRBPlayerLoadoutValidator
	{
	public:
		bool                                                       bHasRequiredActiveSkill;                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6KS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EActiveSkillType>                                   RequiredActiveSkillTypes;                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AvailableTask
	 * Size -> 0x0010
	 */
	struct FAvailableTask
	{
	public:
		int64_t                                                    TaskUniqueId;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBTaskData*                                         TaskData;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerTasks
	 * Size -> 0x0028
	 */
	struct FPlayerTasks
	{
	public:
		TArray<class ARBTask*>                                     ActiveTasks;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int64_t>                                            CompletedTasks;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F3W0[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTextChatMessage
	 * Size -> 0x0040
	 */
	struct FRBTextChatMessage
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerState*                                      Source;                                                  // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERBTextChatType                                            TextChatType;                                            // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P78B[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Message;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    MessageId;                                               // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JQ64[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerInputState
	 * Size -> 0x000C
	 */
	struct FPlayerInputState
	{
	public:
		unsigned char                                              UnknownData_3S3U[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTrapScenarioSetup
	 * Size -> 0x0028
	 */
	struct FRBTrapScenarioSetup
	{
	public:
		class FName                                                ScenarioName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1J4A[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ETrapScenarioState>                                 TrapsStates;                                             // 0x0010(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bTestInGame;                                             // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HJU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TutorialRuntimeData
	 * Size -> 0x0020
	 */
	struct FTutorialRuntimeData
	{
	public:
		class FName                                                TutorialId;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTutorialTextData>                           TutorialTextSequence;                                    // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		ETutorialType                                              TutorialType;                                            // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMessagePriority                                           TutorialPriority;                                        // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QK1T[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PipeJunction
	 * Size -> 0x0030
	 */
	struct FPipeJunction
	{
	public:
		unsigned char                                              PipeJunction[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		EPipeJunctionType                                          JunctionType;                                            // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeakingFront;                                           // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeakingBack;                                            // 0x002A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4LMR[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PipeArrangement
	 * Size -> 0x0078
	 */
	struct FPipeArrangement
	{
	public:
		struct FConfigurableBool                                   AllowedByDifficulty;                                     // 0x0000(0x0060) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPipeJunction>                               PipeJunctions;                                           // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bWaterLeakFront;                                         // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaterLeakBack;                                          // 0x0071(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZIT[0x6];                                   // 0x0072(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBTrialConfigDataOverrides
	 * Size -> 0x0034
	 */
	struct FRBTrialConfigDataOverrides
	{
	public:
		float                                                      RollingGateRandomizationBlockedCountModifier;            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorRandomizationBlockedCountModifier;                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlockableRandomizationBlockedCountModifier;              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorRandomizationReplacedCountModifier;                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorRandomizationTrappedCountModifier;                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorRandomizationLockedCountModifier;                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorRandomizationOpenCountModifier;                      // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HidespotRandomizationDisabledRatioModifier;              // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrapGroupCountModifier;                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SoundTrapCountModifier;                                  // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosiveTrapCountModifier;                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElectricFloorTrapCountModifier;                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PsychosisMineTrapCountModifier;                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBAIDirectorSpawningModifier
	 * Size -> 0x0008
	 */
	struct FRBAIDirectorSpawningModifier
	{
	public:
		bool                                                       bAllowed;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EBNR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawningFrequencyMultiplier;                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.VOLine
	 * Size -> 0x0018
	 */
	struct FVOLine
	{
	public:
		class UAkAudioEvent*                                       akEvent;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_39LI[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TalkerState
	 * Size -> 0x0028
	 */
	struct FTalkerState
	{
	public:
		class AActor*                                              Talker;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVOLine                                             ActiveLine;                                              // 0x0008(0x0018) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UAJC[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.EndOfEventInfo
	 * Size -> 0x0010
	 */
	struct FEndOfEventInfo
	{
	public:
		class AActor*                                              Talker;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RY1I[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.MarkerInfo
	 * Size -> 0x0020
	 */
	struct FMarkerInfo
	{
	public:
		class AActor*                                              Talker;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKG2[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayedVOInfo
	 * Size -> 0x0018
	 */
	struct FPlayedVOInfo
	{
	public:
		unsigned char                                              UnknownData_ZL4N[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.QueuedLine
	 * Size -> 0x0028
	 */
	struct FQueuedLine
	{
	public:
		class AActor*                                              Talker;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       akEvent;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LXBI[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.VOEventData
	 * Size -> 0x0058
	 */
	struct FVOEventData
	{
	public:
		unsigned char                                              UnknownData_A81D[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Speaker;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EOP4[0x48];                                  // 0x0010(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.VOMapping
	 * Size -> 0x0028
	 */
	struct FVOMapping
	{
	public:
		EVOContext                                                 VOContext;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVOPriority                                                VOPriority;                                              // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNBE[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Line;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayONOIfInterrupting;                                  // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUO4[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayBeforeRepeatOnPawn;                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDelayBeforeRepeatGlobal;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDelayAfterAnySimilarVO;                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDelayAfterAnyVO;                                      // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastTimePlayed;                                          // 0x0024(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ContinuousSoundConfig
	 * Size -> 0x0018
	 */
	struct FContinuousSoundConfig
	{
	public:
		class UAkAudioEvent*                                       SoundStart;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SoundStop;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFoley;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailableUnaware;                                       // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailableInInvestigate;                                 // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailableInChase;                                       // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EContinuousSoundNPCState                                   NPCState;                                                // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6R2[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ContinuousSoundInfo
	 * Size -> 0x0010
	 */
	struct FContinuousSoundInfo
	{
	public:
		class UAkAudioEvent*                                       SoundStart;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SoundStop;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.VORemapEntry
	 * Size -> 0x0010
	 */
	struct FVORemapEntry
	{
	public:
		class UAkAudioEvent*                                       SourceEvent;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ReplacementEvent;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.VORemapTable
	 * Size -> 0x0010
	 */
	struct FVORemapTable
	{
	public:
		TArray<struct FVORemapEntry>                               VORemaps;                                                // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.WaterValveSectionConfig
	 * Size -> 0x00B8
	 */
	struct FWaterValveSectionConfig
	{
	public:
		class FText                                                SectionObjectiveTextLine;                                // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                SectionPumpObjectiveTextLine;                            // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                SectionName;                                             // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  SectionPipeMaterial;                                     // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Pump[0x28];                                              // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              Valves[0x10];                                            // 0x0068(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              WaterTriggerables[0x10];                                 // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              LinkedActorForMaterials[0x10];                           // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              LinkedActorForVisibilityOn[0x10];                        // 0x0098(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              LinkedActorForVisibilityOff[0x10];                       // 0x00A8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct OPP.WaterValveSectionGroupConfig
	 * Size -> 0x00D8
	 */
	struct FWaterValveSectionGroupConfig
	{
	public:
		struct FConfigurableInt                                    MinimumValveInSection;                                   // 0x0000(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWaterValveSectionConfig>                    Sections;                                                // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.WaterValveSectionRuntimeData
	 * Size -> 0x0058
	 */
	struct FWaterValveSectionRuntimeData
	{
	public:
		class FName                                                SectionName;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailableForThisDifficulty;                             // 0x0008(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0009(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaterFlowing;                                           // 0x000A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x000B(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F1WS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              PumpActor;                                               // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      ObjectiveValveActors;                                    // 0x0018(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class URBValvePanelComponent*>                      ObjectiveValvePanels;                                    // 0x0028(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      CompletedObjectiveValveActors;                           // 0x0038(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      DiscoveredObjectiveValveActors;                          // 0x0048(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBWaypointGroupCustomizationProxy
	 * Size -> 0x0008
	 */
	struct FRBWaypointGroupCustomizationProxy
	{
	public:
		class ARBWaypointGroup*                                    OwnerGroup;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.WWWObjectKey
	 * Size -> 0x0008
	 */
	struct FWWWObjectKey
	{
	public:
		unsigned char                                              UnknownData_502N[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WWWBotDebuggingData
	 * Size -> 0x0320
	 */
	struct FWWWBotDebuggingData
	{
	public:
		unsigned char                                              UnknownData_TRVZ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBotDebugInfo                                       BotDebugInfo;                                            // 0x0008(0x0308) ContainsInstancedReference, NativeAccessSpecifierPublic
		class UAnimSequence*                                       MostRelevantAnim;                                        // 0x0310(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F6I[0x8];                                   // 0x0318(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WWWPlayerDebuggingData
	 * Size -> 0x0018
	 */
	struct FWWWPlayerDebuggingData
	{
	public:
		unsigned char                                              UnknownData_MCZJ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       MostRelevantAnim;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVQG[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WWWPawnRecord
	 * Size -> 0x0068
	 */
	struct FWWWPawnRecord
	{
	public:
		unsigned char                                              UnknownData_L8Y2[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWWWBotDebuggingData>                        BotDebuggingData;                                        // 0x0038(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FWWWPlayerDebuggingData>                     PlayerDebuggingData;                                     // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A3KA[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WWWRecordingData
	 * Size -> 0x00D0
	 */
	struct FWWWRecordingData
	{
	public:
		unsigned char                                              UnknownData_U6R4[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<struct FWWWObjectKey, struct FWWWPawnRecord>          PawnRecords;                                             // 0x0010(0x0050) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4SU5[0x70];                                  // 0x0060(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.WWWPlaybackStateData
	 * Size -> 0x0020
	 */
	struct FWWWPlaybackStateData
	{
	public:
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3DB[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LongJumpInfo
	 * Size -> 0x0028
	 */
	struct FLongJumpInfo
	{
	public:
		class ARBLedgeMarker*                                      Marker1;                                                 // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBLedgeMarker*                                      Marker2;                                                 // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CenterPoint1;                                            // 0x0010(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CenterPoint2;                                            // 0x001C(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TemporaryAttachmentInfo
	 * Size -> 0x0060
	 */
	struct FTemporaryAttachmentInfo
	{
	public:
		class AActor*                                              Owner;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     AttachedComponent;                                       // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     InitialAttachedComponentParent;                          // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RIYY[0x48];                                  // 0x0018(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DelayedActionHandle
	 * Size -> 0x0028
	 */
	struct FDelayedActionHandle
	{
	public:
		class UObject*                                             Owner;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0VC[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      Callback;                                                // 0x0018(0x0010) ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerInZoneInfo
	 * Size -> 0x0010
	 */
	struct FPlayerInZoneInfo
	{
	public:
		class ARBPlayer*                                           Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBPlayerTriggerVolume*                              Volume;                                                  // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObjectiveZoneInfo
	 * Size -> 0x0028
	 */
	struct FObjectiveZoneInfo
	{
	public:
		class ARBZoneDefenceLocation*                              ZoneLocation;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentZoneCompletion;                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJWB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerInZoneInfo>                           PlayersInZoneInfos;                                      // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0021(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEF0[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ZoneTimingTargetInfo
	 * Size -> 0x0018
	 */
	struct FZoneTimingTargetInfo
	{
	public:
		TArray<ETimingInputResultType>                             NeedleResults;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      NeedleSpeed;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CV6Z[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DamageParameters
	 * Size -> 0x0014
	 */
	struct FDamageParameters
	{
	public:
		bool                                                       bCanReact;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanKnockdown;                                           // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanKill;                                                // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBloodParticles;                                         // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScreenBloodColumns;                                     // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDamageBoost;                                         // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHurtVOType                                                LowDamageVO;                                             // 0x0006(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHurtVOType                                                MediumDamageVO;                                          // 0x0007(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHurtVOType                                                HighDamageVO;                                            // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWOW[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HurtVOStopDelay;                                         // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageSoundMaterial                                       DamageSoundMaterial;                                     // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LUU[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DamageInfo
	 * Size -> 0x0050
	 */
	struct FDamageInfo
	{
	public:
		EDamageType                                                Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SH8E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDamageParameters                                   Params;                                                  // 0x0004(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		ENPCWeapon                                                 NPCWeaponType;                                           // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AZ07[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialHealth;                                           // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DmgAmount;                                               // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DmgLocation;                                             // 0x0024(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DmgDirection;                                            // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_43YE[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              SrcActor;                                                // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceKill;                                              // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0A1H[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PawnTime;                                                // 0x004C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBUIReleasedCharacterDetails
	 * Size -> 0x0010
	 */
	struct FRBUIReleasedCharacterDetails
	{
	public:
		int32_t                                                    InmateId;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Timestamp;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBStatEntry
	 * Size -> 0x0008
	 */
	struct FRBStatEntry
	{
	public:
		EPlayerStat                                                PlayerStat;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OUXW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBStatContext
	 * Size -> 0x0020
	 */
	struct FRBStatContext
	{
	public:
		class FString                                              Context;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBStatEntry>                                Entries;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GameMessageAudioParams
	 * Size -> 0x0010
	 */
	struct FGameMessageAudioParams
	{
	public:
		class UAkAudioEvent*                                       Sound;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Voice;                                                   // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PawnBreadcrumb
	 * Size -> 0x0024
	 */
	struct FPawnBreadcrumb
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      PawnTime;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAnimatedStartAnim;                                    // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAnimatedStopAnim;                                     // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAnimMoving;                                           // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAnimAgressiveStance;                                  // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoTickPose;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VJ7B[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ProceduralTranslationAnimData
	 * Size -> 0x003C
	 */
	struct FProceduralTranslationAnimData
	{
	public:
		struct FVector                                             PositionDelta;                                           // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProceduralAnimInterpType                                  InterpType;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YQ13[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScheduledPawnTime;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScheduledServerTime;                                     // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstantSpeedContrib;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayTimeLeft;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalTime;                                               // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElapsedTime;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitForNotify;                                          // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecomputeDataAfterNotify;                               // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OKF[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RecomputeDesiredPosition;                                // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8XN[0x4];                                   // 0x0038(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AttackStrike
	 * Size -> 0x0014
	 */
	struct FAttackStrike
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttackType                                                AttackType;                                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageType                                                DamageType;                                              // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKnockbackValue                                            KnockbackType;                                           // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AttackLocation;                                          // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PairedTwoPhaseAnimData
	 * Size -> 0x0030
	 */
	struct FPairedTwoPhaseAnimData
	{
	public:
		struct FPairedAnim                                         EnterAnims;                                              // 0x0000(0x0018) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPairedAnim                                         ExitAnims;                                               // 0x0018(0x0018) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TraversalMoveData
	 * Size -> 0x0070
	 */
	struct FTraversalMoveData
	{
	public:
		ESpecialMove                                               TraversalMove;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TraversalMoveSubType;                                    // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TVUT[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TraversalActor;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              EndTraversalActor;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetPosition;                                          // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetDirection;                                         // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ExpectedEndPosition;                                     // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EJumpOverAnimType                                          JumpOverAnimType;                                        // 0x003C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EClimbOntoAnimType                                         ClimbOntoAnimType;                                       // 0x003D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocomotionMode                                            nextLocomotionMode;                                      // 0x003E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8G2[0x1];                                   // 0x003F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObstacleHeight;                                          // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObstacleWidth;                                           // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObstacleDropHeight;                                      // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObstacleAngle;                                           // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRunning;                                                // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasCrouchBeforeMove;                                    // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMustCrouchAfterMove;                                    // 0x0052(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7AV[0x1];                                   // 0x0053(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Velocity;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPawnRepulsionType                                         PawnRepulsion;                                           // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZK8[0x17];                                  // 0x0059(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AxisSettings
	 * Size -> 0x0008
	 */
	struct FAxisSettings
	{
	public:
		EAxis                                                      YawRotationAxis;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYEC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BodyOrientationAlpha;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BoneRef
	 * Size -> 0x0010
	 */
	struct FBoneRef
	{
	public:
		struct FBoneReference                                      Bone;                                                    // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AnimNode_OrientationWarping
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FAnimNode_OrientationWarping : public FAnimNode_Base
	{
	public:
		struct FPoseLink                                           BasePose;                                                // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      LocomotionAngle;                                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAxisSettings                                       Settings;                                                // 0x0024(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EBLG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBoneRef>                                    SpineBones;                                              // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      IKFootRootBone;                                          // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      PelvisBone;                                              // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBAlignFootIKToFeet
	 * Size -> 0x0050 (FullSize[0x0118] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBAlignFootIKToFeet : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      IK_RootBone;                                             // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      LeftFootBone;                                            // 0x00D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      LeftIKBone;                                              // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightFootBone;                                           // 0x00F8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightIKBone;                                             // 0x0108(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBAlignFootIKToStairs
	 * Size -> 0x0090 (FullSize[0x0158] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBAlignFootIKToStairs : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      LeftFootBone;                                            // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      LeftToeBone;                                             // 0x00D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      LeftIKBone;                                              // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightFootBone;                                           // 0x00F8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightToeBone;                                            // 0x0108(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightIKBone;                                             // 0x0118(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      HipsBone;                                                // 0x0128(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AnkleOffset;                                             // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AffectHips;                                              // 0x013C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TSO9[0x1B];                                  // 0x013D(0x001B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBFirstPersonRelative
	 * Size -> 0x0078 (FullSize[0x0140] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBFirstPersonRelative : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      CameraBone;                                              // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FBoneReference>                              LeftArmBonesToModify;                                    // 0x00D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FBoneReference>                              RightArmBonesToModify;                                   // 0x00E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      LeftArmAlpha;                                            // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightArmAlpha;                                           // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          CameraTransformOffset;                                   // 0x0100(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CBJ[0x10];                                  // 0x0130(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBRelativeToCamera
	 * Size -> 0x00A8 (FullSize[0x0170] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBRelativeToCamera : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FComponentSpacePoseLink                             ArmPose;                                                 // 0x00C8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YV8O[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          CameraTransform;                                         // 0x00E0(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      CameraBone;                                              // 0x0110(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      Bone;                                                    // 0x0120(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DB5[0x40];                                  // 0x0130(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBRotateRelative
	 * Size -> 0x0030 (FullSize[0x00F8] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBRotateRelative : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      RotateBone;                                              // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RelativeBone;                                            // 0x00D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x00E8(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TSXE[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimNode_RBScaleStride
	 * Size -> 0x0028 (FullSize[0x00F0] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_RBScaleStride : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      LeftFoot;                                                // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      RightFoot;                                               // 0x00D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinimumZ;                                                // 0x00E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrideScale;                                             // 0x00EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.IKBones
	 * Size -> 0x0024
	 */
	struct FIKBones
	{
	public:
		struct FBoneReference                                      IKFootBone;                                              // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      FKFootBone;                                              // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    NumBonesInLimb;                                          // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PelvisAdjustmentInterp
	 * Size -> 0x0008
	 */
	struct FPelvisAdjustmentInterp
	{
	public:
		float                                                      Stiffness;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Dampen;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AnimNode_SpeedWarping
	 * Size -> 0x0098 (FullSize[0x0160] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_SpeedWarping : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      IKFootRootBone;                                          // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FIKBones>                                    FeetDefinitions;                                         // 0x00D8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      PelvisBone;                                              // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		EIKFootRootLocalAxis                                       SpeedWarpingAxisMode;                                    // 0x00F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VFLY[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedScaling;                                            // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PelvisAdjustmentAlpha;                                   // 0x0100(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxIter;                                                 // 0x0104(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPelvisAdjustmentInterp                             PelvisAdjustmentInterp;                                  // 0x0108(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       ClampIKUsingFKLeg;                                       // 0x0110(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_10YP[0x4F];                                  // 0x0111(0x004F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.IKFootLocation
	 * Size -> 0x0030
	 */
	struct FIKFootLocation
	{
	public:
		struct FVector                                             LimbRootLocation;                                        // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             OriginLocation;                                          // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ActualLocation;                                          // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             NewLocation;                                             // 0x0024(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NewsItem
	 * Size -> 0x00A0
	 */
	struct FNewsItem
	{
	public:
		ENewsItemLocation                                          Location;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L31Q[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Title;                                                   // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImageUrl;                                                // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2DDynamic*                                   ImageTexture;                                            // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENewsItemCTAType                                           CTAType;                                                 // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENewsItemCTAMenuType                                       CTAMenuType;                                             // 0x0041(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AC8[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CTADetails;                                              // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ExternalUrl;                                             // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9QJ[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FeatureSwitch;                                           // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BorderColor;                                             // 0x0080(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HeaderBackgroundColor;                                   // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBActiveSkillSettingsRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FRBActiveSkillSettingsRow : public FTableRowBase
	{
	public:
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WQAT[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    InitialNumberOfCharges;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownBetweenCharges;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerRadius;                                           // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerDelay;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeDuration;                                          // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Effect;                                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectRadius;                                            // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrimeAssetEffectDurationMultiplier;                      // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration2;                                         // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistractionRange;                                        // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PathBlockingCoordinationInfo
	 * Size -> 0x0020
	 */
	struct FPathBlockingCoordinationInfo
	{
	public:
		unsigned char                                              UnknownData_S82T[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBAreaExitPoint*>                            ReservedExitPoints;                                      // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBAICommandRef
	 * Size -> 0x000C
	 */
	struct FRBAICommandRef
	{
	public:
		unsigned char                                              UnknownData_O408[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.HotPotatoEnemyData
	 * Size -> 0x0010
	 */
	struct FHotPotatoEnemyData
	{
	public:
		class ARBNPC*                                              NPC;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBHotPotato*                                        TargetPotato;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.HotPotatoEnemiesData
	 * Size -> 0x0018
	 */
	struct FHotPotatoEnemiesData
	{
	public:
		class ARBHotPotatoObjectiveCoordinator*                    ActiveHotPotatoCoordinator;                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHotPotatoEnemyData>                         Enemies;                                                 // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NavmeshDestination
	 * Size -> 0x001C
	 */
	struct FNavmeshDestination
	{
	public:
		unsigned char                                              UnknownData_D7HO[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPerPlayerReacheabilityInfo
	 * Size -> 0x0028
	 */
	struct FAIPerPlayerReacheabilityInfo
	{
	public:
		unsigned char                                              UnknownData_KXER[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPerPlayerMemory
	 * Size -> 0x0098
	 */
	struct FAIPerPlayerMemory
	{
	public:
		unsigned char                                              UnknownData_P5E3[0x98];                                  // 0x0000(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AIPlayerPerceptionData
	 * Size -> 0x005C
	 */
	struct FAIPlayerPerceptionData
	{
	public:
		unsigned char                                              UnknownData_7GPY[0x5C];                                  // 0x0000(0x005C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AISpawnerData
	 * Size -> 0x0418
	 */
	struct FAISpawnerData
	{
	public:
		class ARBAISpawner*                                        spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NDI2[0x410];                                 // 0x0008(0x0410) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.GlobalAnimData
	 * Size -> 0x0040
	 */
	struct FGlobalAnimData
	{
	public:
		ELocomotionMode                                            AnimLocomotionMode;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_62WN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Health;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealthFactor;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFirstPerson;                                          // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAIControlled;                                         // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLookingBack;                                          // 0x000E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDBP[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LeftArmFirstPersonRelativeAnimAlpha;                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightArmFirstPersonRelativeAnimAlpha;                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeckOffsetRatio;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DarknessAlpha;                                           // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothedEyePitch;                                        // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothedEyeYaw;                                          // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           PeekAmount;                                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            EyeRotation;                                             // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bUseCustomActionBP;                                      // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2W7[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BlendSpaceAnimData
	 * Size -> 0x0020
	 */
	struct FBlendSpaceAnimData
	{
	public:
		bool                                                       bPlayingBlendSpace;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MI2C[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ControlValueX;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ControlValueY;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTimeIn;                                             // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTimeOut;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     BlendSpaceSlot;                                          // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MovementAnimData
	 * Size -> 0x0018
	 */
	struct FMovementAnimData
	{
	public:
		float                                                      FwdAnimSpeed;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideAnimSpeed;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementSpeed;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InstantRotationSpeed;                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothedRotationSpeed;                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELargeObjectType                                           LargeObjectType;                                         // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NG83[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TraversalAnimData
	 * Size -> 0x0020
	 */
	struct FTraversalAnimData
	{
	public:
		bool                                                       bShouldTraversalMoveFinish;                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXB6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClimbHeight;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClimbWidth;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRunning;                                                // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MAKF[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              TraversalActor;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMustCrouchAfterMove;                                    // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCarryingLargeObject;                                  // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9XKO[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.InteractionAnimData
	 * Size -> 0x0008
	 */
	struct FInteractionAnimData
	{
	public:
		EHidespotCategory                                          HidespotType;                                            // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WMWT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorOpenRatio;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.CoopMoveAnimData
	 * Size -> 0x0004
	 */
	struct FCoopMoveAnimData
	{
	public:
		bool                                                       bIsDoingCoopMove;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLeader;                                               // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoopMoveType                                              CoopMoveType;                                            // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMustCrouchAfterMove;                                    // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AttackAnimData
	 * Size -> 0x0014
	 */
	struct FAttackAnimData
	{
	public:
		bool                                                       bIsInAttackStance;                                       // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLM2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackStanceRatio;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChargingAttack;                                         // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XO3P[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargingAttackRatio;                                     // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChargingLeft;                                           // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0DKO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SpecialAttackAnimData
	 * Size -> 0x0003
	 */
	struct FSpecialAttackAnimData
	{
	public:
		bool                                                       bInGrabFromBehindState;                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInGroundAndPoundState;                                  // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAttacker;                                             // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.InventoryAnimData
	 * Size -> 0x000C
	 */
	struct FInventoryAnimData
	{
	public:
		EItemAnimType                                              ItemAnimType;                                            // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsingItem;                                              // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreparingItem;                                          // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WatchUpRatio;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GivingItemHandUpRatio;                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIAmbientAnimData
	 * Size -> 0x0020
	 */
	struct FAIAmbientAnimData
	{
	public:
		bool                                                       bActiveAmbientAnim;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingAmbientBlendspace;                               // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9BQG[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpaceBase*                                     AmbientIdleBlendSpace;                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbientIdleRelativeYaw;                                  // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbientIdleRelativePitch;                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       AmbientIdleSequence;                                     // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LookAtAnimData
	 * Size -> 0x0010
	 */
	struct FLookAtAnimData
	{
	public:
		bool                                                       bEnableLookAt;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6E3G[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LookAtAlpha;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtRelativeYaw;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtPitch;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCAnimData
	 * Size -> 0x0010
	 */
	struct FNPCAnimData
	{
	public:
		ENPCAnimStyle                                              AnimStyle;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9TQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StepHeaviness;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyEffectIntensity;                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreathingIntensity;                                      // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SpecialAnimData
	 * Size -> 0x0010
	 */
	struct FSpecialAnimData
	{
	public:
		bool                                                       bIsInPsychosis;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FTIF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceToSpectre;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBNPC*                                              SpectreNPC;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PawnAnimData
	 * Size -> 0x0118
	 */
	struct FPawnAnimData
	{
	public:
		struct FGlobalAnimData                                     Global;                                                  // 0x0000(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic
		struct FBlendSpaceAnimData                                 BlendSpace;                                              // 0x0040(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FMovementAnimData                                   Movement;                                                // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTraversalAnimData                                  Traversal;                                               // 0x0078(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FInteractionAnimData                                Interaction;                                             // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCoopMoveAnimData                                   CoopMove;                                                // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FAttackAnimData                                     Attack;                                                  // 0x00A4(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSpecialAttackAnimData                              SpecialAttacks;                                          // 0x00B8(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXTD[0x1];                                   // 0x00BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInventoryAnimData                                  inventory;                                               // 0x00BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FAIAmbientAnimData                                  Ambient;                                                 // 0x00C8(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FLookAtAnimData                                     LookAt;                                                  // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FNPCAnimData                                        NPC;                                                     // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSpecialAnimData                                    Special;                                                 // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OperatableAnimationData
	 * Size -> 0x0018
	 */
	struct FOperatableAnimationData
	{
	public:
		class UAnimSequence*                                       Start;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Loop;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       End;                                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCDerivedAnimDataContext
	 * Size -> 0x00B0
	 */
	struct FNPCDerivedAnimDataContext
	{
	public:
		unsigned char                                              UnknownData_CFS7[0xA8];                                  // 0x0000(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ARBNPC*                                              NPC;                                                     // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCInvestigationSelectionParams
	 * Size -> 0x0020
	 */
	struct FNPCInvestigationSelectionParams
	{
	public:
		class ARBInvestigationPoint*                               InvPoint;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S39Y[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AnimLogItem
	 * Size -> 0x0020
	 */
	struct FAnimLogItem
	{
	public:
		class FString                                              PawnName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimLogCategory                                           Category;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               specialMove;                                             // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CJ9U[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCAttackSelectionParams
	 * Size -> 0x001C
	 */
	struct FNPCAttackSelectionParams
	{
	public:
		unsigned char                                              UnknownData_ZK9S[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LocomotionAlternateModeAnimations
	 * Size -> 0x0058
	 */
	struct FLocomotionAlternateModeAnimations
	{
	public:
		class UAnimSequence*                                       Start;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     StartBlendSpace;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Loop;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     LoopBlendSpace;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       Idle;                                                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                     IdleBlendSpace;                                          // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLocomotionStopOptions                              Stop;                                                    // 0x0030(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionStartleAmplitudeOptions
	 * Size -> 0x0050
	 */
	struct FLocomotionStartleAmplitudeOptions
	{
	public:
		TMap<EStartleType, struct FLocomotionStartleSpeedOptions>  Options;                                                 // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AudioPathSearchContext
	 * Size -> 0x0030
	 */
	struct FAudioPathSearchContext
	{
	public:
		unsigned char                                              UnknownData_U78P[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBSoundConnectorComponent*>                  DestinationConnectors;                                   // 0x0020(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AudioPathSearchNode
	 * Size -> 0x0020
	 */
	struct FAudioPathSearchNode
	{
	public:
		unsigned char                                              UnknownData_LEPW[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AudioPathConnection
	 * Size -> 0x0010
	 */
	struct FAudioPathConnection
	{
	public:
		unsigned char                                              UnknownData_JIDT[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RTPCActorDebugInfo
	 * Size -> 0x0050
	 */
	struct FRTPCActorDebugInfo
	{
	public:
		unsigned char                                              RTPCComponentInfo[0x50];                                 // 0x0000(0x0050) UNKNOWN PROPERTY: MapProperty
	};

	/**
	 * ScriptStruct OPP.RTPCComponentDebugInfo
	 * Size -> 0x00F0
	 */
	struct FRTPCComponentDebugInfo
	{
	public:
		TMap<class FString, float>                                 RTPCValue;                                               // 0x0000(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         SwitchValue;                                             // 0x0050(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         StateValue;                                              // 0x00A0(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SoundPathingContextInfo
	 * Size -> 0x0028
	 */
	struct FSoundPathingContextInfo
	{
	public:
		unsigned char                                              UnknownData_LNVZ[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.UINPCTask
	 * Size -> 0x0018
	 */
	struct FUINPCTask
	{
	public:
		struct FAvailableTask                                      AvailableTask;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		EUIAvailableTaskState                                      State;                                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R79P[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.IntermediateObjectiveData
	 * Size -> 0x0020
	 */
	struct FIntermediateObjectiveData
	{
	public:
		class FText                                                objectiveText;                                           // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bIsDone;                                                 // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNSC[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.BotActivityParams
	 * Size -> 0x000B
	 */
	struct FBotActivityParams
	{
	public:
		bool                                                       bAlwaysIgnorePlayers;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowMoving;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowRepulsion;                                         // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowLookAt;                                            // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeDisturbed;                                         // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCycleBreakers;                                     // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowIdleTargetLookAt;                                  // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanReactToImperativeAction;                             // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysAllowRetirement;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowForcedRetirement;                                  // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreathing;                                              // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBBreadcrumb
	 * Size -> 0x0018
	 */
	struct FRBBreadcrumb
	{
	public:
		unsigned char                                              UnknownData_QZ8J[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.UICustomizationItem
	 * Size -> 0x0030
	 */
	struct FUICustomizationItem
	{
	public:
		class URBPlayerCustomizationOption*                        CustomizationOption;                                     // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBCustomizationOutfit*                              Outfit;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBVoiceCustomizationOption*                         VoiceOption;                                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBPlayerIconCustomizationOption*                    PlayerIconOption;                                        // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBPlayerCellItemDefinition*                         CellOption;                                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomizationInteractionType                              InteractionType;                                         // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x002B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDLC;                                                  // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUR7[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.DelayedBugIt
	 * Size -> 0x0018
	 */
	struct FOPP_FDelayedBugIt
	{
	public:
		unsigned char                                              UnknownData_EPW3[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBBugReportInfo
	 * Size -> 0x0068
	 */
	struct FRBBugReportInfo
	{
	public:
		class FString                                              Timestamp;                                               // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShortDesc;                                               // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildId;                                                 // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6IS[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StageName;                                               // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LocationStr;                                             // 0x0038(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ServerLogs;                                              // 0x0048(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      Platforms;                                               // 0x0058(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBChunkRule
	 * Size -> 0x0018
	 */
	struct FRBChunkRule
	{
	public:
		ERBChunkRuleMode                                           Mode;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UKG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Pattern;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBCollectibleDocumentGroupRow
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FRBCollectibleDocumentGroupRow : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              Thumbnail[0x28];                                         // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.RBCollectibleDocumentDefinitionRow
	 * Size -> 0x00E0 (FullSize[0x00E8] - InheritedSize[0x0008])
	 */
	struct FRBCollectibleDocumentDefinitionRow : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Category;                                                // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Date;                                                    // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ECollectibleType                                           Type;                                                    // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FS5N[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Content;                                                 // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              Photo[0x28];                                             // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                DisplayGroupId;                                          // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        TrialGroupIds;                                           // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bAlwaysAvailable;                                        // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DH7Z[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Thumbnail[0x28];                                         // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.CurrencyPackMenuItem
	 * Size -> 0x0060
	 */
	struct FCurrencyPackMenuItem
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RLA2[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Currency;                                                // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J7SB[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DisplayPrice;                                            // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Title;                                                   // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBDestructibleBodyInstState
	 * Size -> 0x0070
	 */
	struct FRBDestructibleBodyInstState
	{
	public:
		unsigned char                                              UnknownData_5WUZ[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBResultScreenMurkoffCommentRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FRBResultScreenMurkoffCommentRow : public FTableRowBase
	{
	public:
		EPlayerTrialRating                                         MinimumRating;                                           // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerTrialRating                                         MaximumRating;                                           // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1K5[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumDeathCount;                                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumDeathCount;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumPlayerCount;                                      // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumPlayerCount;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Text;                                                    // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TextureCachedData
	 * Size -> 0x0010
	 */
	struct FTextureCachedData
	{
	public:
		TArray<struct FColor>                                      ColorData;                                               // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBGameplayModifierRuntimeInfo
	 * Size -> 0x0014
	 */
	struct FRBGameplayModifierRuntimeInfo
	{
	public:
		unsigned char                                              UnknownData_B2GZ[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBSelectableStageInfo
	 * Size -> 0x0040
	 */
	struct FRBSelectableStageInfo
	{
	public:
		class FName                                                StageName;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StageDisplayName;                                        // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FName>                                        MissionOptions;                                          // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                        MissionOptionDisplayNames;                               // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBSelectableExperimentInfo
	 * Size -> 0x0030
	 */
	struct FRBSelectableExperimentInfo
	{
	public:
		class FName                                                ExperimentName;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ExperimentDisplayName;                                   // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FRBSelectableStageInfo>                      AvailableStageInfos;                                     // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBGameplayAttributeModifierEffectTextDetails
	 * Size -> 0x0020
	 */
	struct FRBGameplayAttributeModifierEffectTextDetails
	{
	public:
		EGameplayAttributeType                                     AttributeType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameplayAttributeModifierType                             ModifierType;                                            // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HU7Y[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Description;                                             // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBBadgeHudProgressDisplayDetails
	 * Size -> 0x0008
	 */
	struct FRBBadgeHudProgressDisplayDetails
	{
	public:
		class FName                                                BadgeId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBItemProgressionDataRow
	 * Size -> 0x00D8 (FullSize[0x00E0] - InheritedSize[0x0008])
	 */
	struct FRBItemProgressionDataRow : public FTableRowBase
	{
	public:
		EItemProgressionCategory                                   Category;                                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y7A1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActiveSkillType                                           AssociatedActiveSkillType;                               // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProfileUpgradeCategory                                    ProfileUpgradeCategory;                                  // 0x0059(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailable;                                              // 0x005A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysAcquired;                                         // 0x005B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredLevel_Character;                                 // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresUnlock;                                         // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H63J[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RequiredItems;                                           // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyCost_MurkoffPoint;                               // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyCost_MurkoffDollar;                              // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyCost_EventToken;                                 // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I01H[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Effects;                                                 // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              FeatureSwitch;                                           // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DisplayFeatureSwitch;                                    // 0x00A8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardPoolId;                                            // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardPoolWeight;                                        // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardPoolId2;                                           // 0x00C4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardPoolWeight2;                                       // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardPoolId3;                                           // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardPoolWeight3;                                       // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76O8[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBItemProgressionData
	 * Size -> 0x00E8
	 */
	struct FRBItemProgressionData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemProgressionCategory                                   Category;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08VH[0x17];                                  // 0x0009(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActiveSkillType                                           AssociatedActiveSkillType;                               // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProfileUpgradeCategory                                    ProfileUpgradeCategory;                                  // 0x0049(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailable;                                              // 0x004A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysAcquired;                                         // 0x004B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredLevel;                                           // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresUnlock;                                         // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30HF[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RequiredItems;                                           // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ECurrencyType, int32_t>                               CurrencyCost;                                            // 0x0068(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FName>                                        Effects;                                                 // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              FeatureSwitch;                                           // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DisplayFeatureSwitch;                                    // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ItemSpawningOverrideRule
	 * Size -> 0x0198
	 */
	struct FItemSpawningOverrideRule
	{
	public:
		bool                                                       bAllowUnusedContainersForStage;                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseItemsFromStagePool;                                  // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCZ1[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FConfigurableFloat                                  PercentFromStageCount;                                   // 0x0008(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableInt                                    FixedCount;                                              // 0x00D0(0x00C8) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBLevelRandomizer
	 * Size -> 0x0001
	 */
	struct FRBLevelRandomizer
	{
	public:
		unsigned char                                              UnknownData_Q6ET[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TrackedTaskSaveData
	 * Size -> 0x0010
	 */
	struct FTrackedTaskSaveData
	{
	public:
		TArray<int64_t>                                            TrackedTasks;                                            // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.NPCSpeedModifierData
	 * Size -> 0x0010
	 */
	struct FNPCSpeedModifierData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpirationServerTime;                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Modifier;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SelectedGruntCustomizationMeshesInfo
	 * Size -> 0x0014
	 */
	struct FSelectedGruntCustomizationMeshesInfo
	{
	public:
		int32_t                                                    HeadIndex;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HairIndex;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LowerBodyIndex;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpperBodyIndex;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENPCFlavor                                                 NPCFlavor;                                               // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VMMR[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCCustomizationMesh
	 * Size -> 0x00D0
	 */
	struct FNPCCustomizationMesh
	{
	public:
		unsigned char                                              Mesh[0x28];                                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              BodyMeshes[0x10];                                        // 0x0028(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              MaterialOverrides[0x50];                                 // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty
		int32_t                                                    FoleyPriority;                                           // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FoleySwitch;                                             // 0x008C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KW7B[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VoiceType;                                               // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FacePoseAsset[0x28];                                     // 0x00A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct OPP.GruntCustomizationMeshes
	 * Size -> 0x0030
	 */
	struct FGruntCustomizationMeshes
	{
	public:
		TArray<struct FNPCCustomizationMesh>                       Light;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FNPCCustomizationMesh>                       Normal;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FNPCCustomizationMesh>                       Heavy;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GruntCustomizationMeshesConfig
	 * Size -> 0x0180
	 */
	struct FGruntCustomizationMeshesConfig
	{
	public:
		struct FGruntCustomizationMeshes                           MaleHead;                                                // 0x0000(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           MaleHair;                                                // 0x0030(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           MaleUpperBody;                                           // 0x0060(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           MaleLowerBody;                                           // 0x0090(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           FemaleHead;                                              // 0x00C0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           FemaleHair;                                              // 0x00F0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           FemaleUpperBody;                                         // 0x0120(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGruntCustomizationMeshes                           FemaleLowerBody;                                         // 0x0150(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.OverseerOrbitCamera
	 * Size -> 0x003C
	 */
	struct FOverseerOrbitCamera
	{
	public:
		unsigned char                                              UnknownData_E6ZM[0x3C];                                  // 0x0000(0x003C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PictogramSet
	 * Size -> 0x0088
	 */
	struct FPictogramSet
	{
	public:
		class FName                                                OrderSetName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConfigurableBool                                   bAvailable;                                              // 0x0008(0x0060) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          Materials;                                               // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          MaterialsCopy;                                           // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPathPoint
	 * Size -> 0x0038
	 */
	struct FRBPathPoint
	{
	public:
		unsigned char                                              UnknownData_8B5I[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ProceduralRotationAnimData
	 * Size -> 0x003C
	 */
	struct FProceduralRotationAnimData
	{
	public:
		float                                                      HeadingDelta;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProceduralAnimInterpType                                  InterpType;                                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M6C9[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScheduledPawnTime;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScheduledServerTime;                                     // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConstantSpeedContrib;                                    // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayTimeLeft;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalTime;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElapsedTime;                                             // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitForNotify;                                          // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecomputeDataAfterNotify;                               // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQV0[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            RecomputeDesiredOrientation;                             // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIndependentRotationControl;                             // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3F3Q[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IndependentRotationDuration;                             // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FPFX[0x4];                                   // 0x0038(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPickupSaveData
	 * Size -> 0x0001
	 */
	struct FRBPickupSaveData
	{
	public:
		unsigned char                                              UnknownData_TDXZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PipeConnector
	 * Size -> 0x0040
	 */
	struct FPipeConnector
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UStaticMesh*                                         StaticMesh;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JP9N[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PipeSegment
	 * Size -> 0x0010
	 */
	struct FPipeSegment
	{
	public:
		float                                                      Length;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LUZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         StaticMesh;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DeadClearanceData
	 * Size -> 0x0034
	 */
	struct FDeadClearanceData
	{
	public:
		unsigned char                                              UnknownData_071A[0x34];                                  // 0x0000(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LandingData
	 * Size -> 0x0008
	 */
	struct FLandingData
	{
	public:
		bool                                                       bLandingQueued;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CMFM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      landingHeight;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.DamageColumn
	 * Size -> 0x0008
	 */
	struct FDamageColumn
	{
	public:
		unsigned char                                              UnknownData_H6NH[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerInputs
	 * Size -> 0x0130
	 */
	struct FPlayerInputs
	{
	public:
		unsigned char                                              UnknownData_IIRI[0x130];                                 // 0x0000(0x0130) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PlayerTeleportData
	 * Size -> 0x0024
	 */
	struct FPlayerTeleportData
	{
	public:
		unsigned char                                              UnknownData_O2EI[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.FarLedgeCandidateData
	 * Size -> 0x0030
	 */
	struct FFarLedgeCandidateData
	{
	public:
		class ARBLedgeMarker*                                      LedgeMarker;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T70V[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TraversalPositionData
	 * Size -> 0x0040
	 */
	struct FTraversalPositionData
	{
	public:
		class ARBLedgeMarker*                                      LedgeMarker;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GRRP[0x38];                                  // 0x0008(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CameraLookAtData
	 * Size -> 0x0070
	 */
	struct FCameraLookAtData
	{
	public:
		unsigned char                                              UnknownData_N513[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              LookAtTarget;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A0UO[0x40];                                  // 0x0030(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TargettedSmoothingLocationData
	 * Size -> 0x0028
	 */
	struct FTargettedSmoothingLocationData
	{
	public:
		unsigned char                                              UnknownData_DGTA[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TargettedSmoothingAngleData
	 * Size -> 0x0018
	 */
	struct FTargettedSmoothingAngleData
	{
	public:
		unsigned char                                              UnknownData_4I7P[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CamSmoothingData
	 * Size -> 0x0024
	 */
	struct FCamSmoothingData
	{
	public:
		unsigned char                                              UnknownData_RZKX[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ViewLimits
	 * Size -> 0x0014
	 */
	struct FViewLimits
	{
	public:
		unsigned char                                              UnknownData_A7IL[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CamView
	 * Size -> 0x0018
	 */
	struct FCamView
	{
	public:
		unsigned char                                              UnknownData_3ZS2[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ItemUnlockInfo
	 * Size -> 0x0020
	 */
	struct FItemUnlockInfo
	{
	public:
		class FName                                                UnlockId;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresUnlock;                                         // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QR17[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        RequiredItems;                                           // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.MenuUpgradeItemInfo
	 * Size -> 0x0128
	 */
	struct FMenuUpgradeItemInfo
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuUpgradeItemState                                      State;                                                   // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NGZN[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRBItemProgressionData                              ItemProgressionData;                                     // 0x0010(0x00E8) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FItemUnlockInfo                                     ItemUnlockInfo;                                          // 0x00F8(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ELoadoutElementType                                        UpgradeType;                                             // 0x0118(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActiveSkillType                                           ActiveSkillType;                                         // 0x0119(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0TMM[0x2];                                   // 0x011A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LevelToReach;                                            // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0120(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CPID[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPlayerProgressionReleaseData
	 * Size -> 0x000C
	 */
	struct FRBPlayerProgressionReleaseData
	{
	public:
		int32_t                                                    ReleaseCount;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardDataId;                                            // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerProgressionReleaseDataRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FRBPlayerProgressionReleaseDataRow : public FTableRowBase
	{
	public:
		int32_t                                                    ReleaseCount;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardDataId;                                            // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B2NT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPlayerProgressionLevelDataRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FRBPlayerProgressionLevelDataRow : public FTableRowBase
	{
	public:
		int32_t                                                    Level;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredXp;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardDataId;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerProgressionLevelData
	 * Size -> 0x0060
	 */
	struct FPlayerProgressionLevelData
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredXp;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardDataId;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ERewardType, int32_t>                                 ExtraUnlockedRewards;                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerProgressionLevelingData
	 * Size -> 0x0010
	 */
	struct FPlayerProgressionLevelingData
	{
	public:
		TArray<struct FPlayerProgressionLevelData>                 Levels;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerBadgeRow
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FRBPlayerBadgeRow : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI61[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     Icon;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<EPlayerStat>                                        PlayerStats;                                             // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              PlayerStatsContext;                                      // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Threshold;                                               // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRepeatable;                                             // 0x0084(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerStat                                                AwardedPlayerStat;                                       // 0x0085(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O2S2[0x2];                                   // 0x0086(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RewardItemId;                                            // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardId;                                                // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AchievementId;                                           // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerUpgradeEffectDataRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FRBPlayerUpgradeEffectDataRow : public FTableRowBase
	{
	public:
		class FName                                                EffectId;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                SettingName;                                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameplayAttributeType                                     AttributeType;                                           // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameplayAttributeModifierType                             ModifierType;                                            // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2D6B[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayEffect;                                          // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayModifier;                                        // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0N7[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FeatureSwitch;                                           // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBPlayerUpgradeEffectData
	 * Size -> 0x0098
	 */
	struct FRBPlayerUpgradeEffectData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   SettingValues;                                           // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FRBGameplayAttributeModifier>                Modifiers;                                               // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bDisplay;                                                // 0x0080(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZE8P[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FeatureSwitch;                                           // 0x0088(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBProgramInfoRow
	 * Size -> 0x0100 (FullSize[0x0108] - InheritedSize[0x0008])
	 */
	struct FRBProgramInfoRow : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ML6Q[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Source;                                                  // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Poster;                                                  // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TutorialId;                                              // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TutorialText;                                            // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                AvailableTutorialId;                                     // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                AvailableTutorialTitle;                                  // 0x0078(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                AvailableTutorialText;                                   // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              FeatureSwitch;                                           // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bComingSoon;                                             // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInaccessibleUntilUnlocked;                              // 0x00B9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E3H[0x2];                                   // 0x00BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RequiredPlayerLevelForVisibility;                        // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventTypeText;                                           // 0x00C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FLinearColor                                        EventTypeTextColor;                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EventTypeBackgroundColor;                                // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       EvaluationCorridorCompletionDirectorVO;                  // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ProgramUnlockedDirectorVO;                               // 0x0100(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ValidActorForUnlockableGateInfo
	 * Size -> 0x0010
	 */
	struct FValidActorForUnlockableGateInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceOnRail;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMB0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.GlobalRandomValidationInfo
	 * Size -> 0x0050
	 */
	struct FGlobalRandomValidationInfo
	{
	public:
		TMap<class ARBAISpawner*, class FString>                   AllAISpawners;                                           // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RandomizationLotSetupData
	 * Size -> 0x0328
	 */
	struct FRandomizationLotSetupData
	{
	public:
		ERandomStateSetup                                          BaseState;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERandomStateSetup                                          DesiredState;                                            // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHR0[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomSettings                                     DesiredStateCount;                                       // 0x0008(0x0320) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBRandomRewardEntry
	 * Size -> 0x0010
	 */
	struct FRBRandomRewardEntry
	{
	public:
		int32_t                                                    Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VXF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URBCustomizationOption*                              UnlockedCustomizationOption;                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBRandomRewardPool
	 * Size -> 0x0018
	 */
	struct FRBRandomRewardPool
	{
	public:
		class FName                                                RewardPoolId;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBRandomRewardEntry>                        Entries;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBRewardDataRow
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FRBRewardDataRow : public FTableRowBase
	{
	public:
		class FString                                              Type;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Xp;                                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    currency_murkoffpoint;                                   // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    currency_murkoffdollar;                                  // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    currency_releasetoken;                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Currency_EventToken;                                     // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedItem1;                                           // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedItem2;                                           // 0x0044(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedItem3;                                           // 0x004C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedItem4;                                           // 0x0054(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnlockedItem5;                                           // 0x005C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AcquiredItem1;                                           // 0x0064(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AcquiredItem2;                                           // 0x006C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AcquiredItem3;                                           // 0x0074(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AcquiredItem4;                                           // 0x007C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AcquiredItem5;                                           // 0x0084(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RandomRewardPoolId1;                                     // 0x008C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RandomRewardPoolId2;                                     // 0x0094(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RandomRewardPoolId3;                                     // 0x009C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RandomRewardPoolId4;                                     // 0x00A4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RandomRewardPoolId5;                                     // 0x00AC(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HC4N[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBGeneratedRewardData
	 * Size -> 0x0048
	 */
	struct FRBGeneratedRewardData
	{
	public:
		int32_t                                                    Xp;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6BLR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCurrencyEntry>                              Currencies;                                              // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        Items;                                                   // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class FName>                                        UnlockedItems;                                           // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<class URBCustomizationOption*>                      UnlockedCustomizationOptions;                            // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBRewardData
	 * Size -> 0x0088
	 */
	struct FRBRewardData
	{
	public:
		int32_t                                                    Xp;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A2Z6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ECurrencyType, int32_t>                               Currencies;                                              // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        Items;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class URBCustomizationOption*>                      UnlockedCustomizationOption;                             // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        RandomRewardPoolIds;                                     // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RichInputWidgetRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FRichInputWidgetRow : public FTableRowBase
	{
	public:
		struct FSoftClassPath                                      WidgetClass;                                             // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RoomConnection
	 * Size -> 0x0020
	 */
	struct FRoomConnection
	{
	public:
		class ARBRoom*                                             RoomFrom;                                                // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARBRoom*                                             RoomTo;                                                  // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBRoomConnectorComponent*                           ConnectionComponent;                                     // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_27AV[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBPlayerScoring
	 * Size -> 0x0028
	 */
	struct FRBPlayerScoring
	{
	public:
		unsigned char                                              UnknownData_GCU9[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBScoringRuleRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FRBScoringRuleRow : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                RuleName;                                                // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<EPlayerEvent>                                       PlayerEvents;                                            // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Xp;                                                      // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxCountedEvents;                                        // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxAbsoluteScore;                                        // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxAbsoluteXp;                                           // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseEventValue;                                          // 0x004C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayInReport;                                        // 0x004D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIN4[0x2];                                   // 0x004E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBSocialMenuEntryDetails
	 * Size -> 0x0058
	 */
	struct FRBSocialMenuEntryDetails
	{
	public:
		unsigned char                                              UnknownData_OKXH[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LoopingSoundInfo
	 * Size -> 0x0018
	 */
	struct FLoopingSoundInfo
	{
	public:
		class UAkAudioEvent*                                       StartEvent;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopEvent;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X7EW[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.EmitterDebugInfo
	 * Size -> 0x0080
	 */
	struct FEmitterDebugInfo
	{
	public:
		class UAkAuxBus*                                           ReverbA;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZBT[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAuxBus*                                           ReverbB;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DUL[0x68];                                  // 0x0018(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RoomPathingSearchResults
	 * Size -> 0x0020
	 */
	struct FRoomPathingSearchResults
	{
	public:
		unsigned char                                              UnknownData_8UHM[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URBRoomConnectorComponent*>                   Connectors;                                              // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_STO1[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RoomPathingSearchParams
	 * Size -> 0x0024
	 */
	struct FRoomPathingSearchParams
	{
	public:
		unsigned char                                              UnknownData_32CT[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RoomPathingSearchNode
	 * Size -> 0x0028
	 */
	struct FRoomPathingSearchNode
	{
	public:
		unsigned char                                              UnknownData_0DTJ[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RoomPathingConnection
	 * Size -> 0x0010
	 */
	struct FRoomPathingConnection
	{
	public:
		unsigned char                                              UnknownData_CMVF[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.FindPathParameter
	 * Size -> 0x0020
	 */
	struct FFindPathParameter
	{
	public:
		bool                                                       bAllowedCoopRoom;                                        // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowedClosedConnection;                                // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETX3[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxPathDistance;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowFloorChange;                                       // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AWSF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARBRoomGroup*>                                RestrictedSections;                                      // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.TrackingFootstepInfo
	 * Size -> 0x0020
	 */
	struct FTrackingFootstepInfo
	{
	public:
		unsigned char                                              UnknownData_V26M[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalComponent*                                     DecalComponent;                                          // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.SplinePositionDescriptor
	 * Size -> 0x0010
	 */
	struct FSplinePositionDescriptor
	{
	public:
		class ARBSplineActor*                                      SegmentStartMarker;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SegmentRatio;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutsideOffset;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBObjectiveGroupID
	 * Size -> 0x0030
	 */
	struct FRBObjectiveGroupID
	{
	public:
		class FName                                                GroupID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRBMissionID                                        MissionID;                                               // 0x0008(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBObjectiveID
	 * Size -> 0x0038
	 */
	struct FRBObjectiveID
	{
	public:
		class FName                                                ObjectivelID;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRBObjectiveGroupID                                 GroupID;                                                 // 0x0008(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.StreamingCommand
	 * Size -> 0x0018
	 */
	struct FStreamingCommand
	{
	public:
		unsigned char                                              UnknownData_5RCS[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBThrowableWeaponSaveData
	 * Size -> 0x0007 (FullSize[0x0008] - InheritedSize[0x0001])
	 */
	struct FRBThrowableWeaponSaveData : public FRBPickupSaveData
	{
	public:
		unsigned char                                              UnknownData_8DKY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.TortureRoomLinkedPanelInfo
	 * Size -> 0x0010
	 */
	struct FTortureRoomLinkedPanelInfo
	{
	public:
		class URBTorturePanelComponent*                            panel;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentMeter;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W6Z5[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBScoreRewardMappingEntry
	 * Size -> 0x000C
	 */
	struct FRBScoreRewardMappingEntry
	{
	public:
		EPlayerTrialRating                                         RequiredScore;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MMR1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RewardDataId;                                            // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBTrialInfoRow
	 * Size -> 0x00E0 (FullSize[0x00E8] - InheritedSize[0x0008])
	 */
	struct FRBTrialInfoRow : public FTableRowBase
	{
	public:
		class FName                                                ProgramId;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMajor;                                                  // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJJN[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          Background;                                              // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Banner;                                                  // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameDifficulty                                            Difficulty;                                              // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_20WV[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StageID;                                                 // 0x0064(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MissionID;                                               // 0x006C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinPlayerCount;                                          // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FirstCompletionRewardDataId;                             // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRBScoreRewardMappingEntry>                  RepeatableRewards;                                       // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        RepeatableRewardIds;                                     // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                PerfectScoreExtraRewardDataId;                           // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        VariatorIds;                                             // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bDisplayVariators;                                       // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3GON[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        UnlockedByTrialIds;                                      // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                DocumentsGroupId;                                        // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FeatureSwitch;                                           // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RegionLatency
	 * Size -> 0x0018
	 */
	struct FRegionLatency
	{
	public:
		class FString                                              RegionName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PingInMs;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ARG[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.NPCHitReactionSelectionParams
	 * Size -> 0x0008
	 */
	struct FNPCHitReactionSelectionParams
	{
	public:
		unsigned char                                              UnknownData_VUF1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ProjectileTrajectory
	 * Size -> 0x0080
	 */
	struct FProjectileTrajectory
	{
	public:
		unsigned char                                              UnknownData_S0UN[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AudioPathInfo
	 * Size -> 0x000C
	 */
	struct FAudioPathInfo
	{
	public:
		unsigned char                                              UnknownData_HVC3[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ObjectivePathData
	 * Size -> 0x0120
	 */
	struct FObjectivePathData
	{
	public:
		struct FWorldIconData                                      WorldIconData;                                           // 0x0000(0x00F0) BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x00F0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x00FC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     SplinePoints;                                            // 0x0100(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bHasValidPath;                                           // 0x0110(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XJR[0xF];                                   // 0x0111(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.LobbyScriptedAnimStationData
	 * Size -> 0x0018
	 */
	struct FLobbyScriptedAnimStationData
	{
	public:
		TArray<class ARBScriptedAnimStation*>                      StationList;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class ARBBot*                                              bot;                                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBEvalCorridorHelperCmpDebugInfo
	 * Size -> 0x0038
	 */
	struct FRBEvalCorridorHelperCmpDebugInfo
	{
	public:
		class URBEvalCorridorHelperComponent*                      HelperCmp;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         LinkedCollisions;                                        // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class ARBPlayer*>                                   DisabledCollisionsForPlayers_Server;                     // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ARBPlayer*>                                   DisabledCollisionsForPlayers_Local;                      // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RBEvalCorridorDebugInfo
	 * Size -> 0x0038
	 */
	struct FRBEvalCorridorDebugInfo
	{
	public:
		class ARBPlayer*                                           DebugRequester;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARBPlayer*>                                   PlayersInEvalCorridor;                                   // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         ComponentsToIgnoreOnRequester;                           // 0x0018(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FRBEvalCorridorHelperCmpDebugInfo>           EvalCorridorHelperCmpDebugInfos;                         // 0x0028(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerCustomizationItemSettings
	 * Size -> 0x0020
	 */
	struct FPlayerCustomizationItemSettings
	{
	public:
		int32_t                                                    RequiredXp;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3VE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerCustomizationSkeletalMesh
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FPlayerCustomizationSkeletalMesh : public FTableRowBase
	{
	public:
		class USkeletalMesh*                                       Mesh;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class UMaterialInstanceConstant*>        Materials;                                               // 0x0010(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPlayerCustomizationItemSettings                    ItemSettings;                                            // 0x0060(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.PlayerCustomizationStaticMesh
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FPlayerCustomizationStaticMesh : public FTableRowBase
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class UMaterialInstanceConstant*>        Materials;                                               // 0x0010(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPlayerCustomizationItemSettings                    ItemSettings;                                            // 0x0060(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.FaceAnimRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FFaceAnimRow : public FTableRowBase
	{
	public:
		class UAnimSequence*                                       Sequence;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.RotationRateLimitData
	 * Size -> 0x001C
	 */
	struct FRotationRateLimitData
	{
	public:
		unsigned char                                              UnknownData_XDAR[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RotationRateLimitParams
	 * Size -> 0x0010
	 */
	struct FRotationRateLimitParams
	{
	public:
		unsigned char                                              UnknownData_J8UA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.CameraParameters
	 * Size -> 0x0034
	 */
	struct FCameraParameters
	{
	public:
		float                                                      minYaw;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      maxYaw;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPitchWS;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPitchWS;                                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPitchCS;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPitchCS;                                              // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewLimitsApproachCoeff;                                 // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FOVOverride;                                             // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalSpaceControl;                                      // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TJP[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           MouseLookSensibilityMultiplier;                          // 0x0024(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadLookSensibilityMultiplier;                        // 0x002C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.GameplayParams
	 * Size -> 0x0068
	 */
	struct FGameplayParams
	{
	public:
		bool                                                       bDisableCollisions;                                      // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableMoveInput;                                       // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableLookInput;                                       // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanWalk;                                                // 0x0003(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysEnableRootMotion;                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableWalkingZDisplacement;                             // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableGravity;                                         // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePawnCollisions;                                  // 0x0007(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePawnRepulsion;                                    // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZL4F[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CollisionRadius;                                         // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionHalfHeight;                                     // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeAttacked;                                          // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPeek;                                                // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanLookBack;                                            // 0x0016(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseInteractibleCamParams;                               // 0x0017(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeftArmFirstPersonRelativeAnimation;                    // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRightArmFirstPersonRelativeAnimation;                   // 0x0019(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85Q3[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxStepHeight;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldClearAnyInteraction;                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowStaminaRegen;                                      // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideEquippedItem;                                       // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNKK[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EquippedItemHideDelay;                                   // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EquippedItemUnhideDelay;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderInForeground;                                     // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowNPCWallSeparation;                                 // 0x002D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClothBlendActive;                                       // 0x002E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9BOZ[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCameraParameters                                   CamParams;                                               // 0x0030(0x0034) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQBI[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.AILocoModeParameters
	 * Size -> 0x0068
	 */
	struct FAILocoModeParameters
	{
	public:
		struct FGameplayParams                                     GP;                                                      // 0x0000(0x0068) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.LocomotionModeParameters
	 * Size -> 0x0074
	 */
	struct FLocomotionModeParameters
	{
	public:
		struct FGameplayParams                                     GP;                                                      // 0x0000(0x0068) NoDestructor, NativeAccessSpecifierPublic
		float                                                      NeckOffsetSide;                                          // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeckOffsetFwd;                                           // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockNavmesh;                                           // 0x0070(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCameraRelativeRightHand;                           // 0x0071(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanInteract;                                            // 0x0072(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D3VM[0x1];                                   // 0x0073(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.PairedAdjustmentParameters
	 * Size -> 0x0010
	 */
	struct FPairedAdjustmentParameters
	{
	public:
		unsigned char                                              UnknownData_U2Y9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.SpecialMoveParameters
	 * Size -> 0x00D4
	 */
	struct FSpecialMoveParameters
	{
	public:
		struct FGameplayParams                                     GP;                                                      // 0x0000(0x0068) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ELocomotionMode                                            nextLocomotionMode;                                      // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocomotionMode                                            InterruptLocomotionMode;                                 // 0x0069(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocomotionMode                                            CompletesLocomotionMode;                                 // 0x006A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpperBody;                                              // 0x006B(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELocomotionMode                                            SpecialMoveLocomotionMode;                               // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustPosition;                                         // 0x006D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayAnimAfterAdjustPosition;                            // 0x006E(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9VZ[0x1];                                   // 0x006F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AdjustPositionTimeLeftAnimationTrigger;                  // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupportCrouchStateChange;                               // 0x0074(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExitOnBlendOut;                                         // 0x0075(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysInterruptible;                                    // 0x0076(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInterruptibleByChoice;                                  // 0x0077(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsingProceduralMotion;                                  // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepExitMomentum;                                       // 0x0079(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFixedDuration;                                          // 0x007A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAnimTimeForPositionAdjustment;                       // 0x007B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePawnVelocityForPositionning;                         // 0x007C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepCameraYawWhileAdjusting;                            // 0x007D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepCameraYawWhileRootMotion;                           // 0x007E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4VX[0x1];                                   // 0x007F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PositionningLinearVelocity;                              // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PositionningAngularVelocity;                             // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPositionningTime;                                     // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeForUpwardsCorrections;                            // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETriggeringStimulusType                                    StimulusType;                                            // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDropLargeObject;                                        // 0x0091(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepCrouchedState;                                      // 0x0092(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCradleLargeObject;                                      // 0x0093(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowPathBlocking;                                      // 0x0094(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearInteractionOnCompleted;                            // 0x0095(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpecialMove                                               PairedMove;                                              // 0x0096(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDYQ[0x1];                                   // 0x0097(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPairedAdjustmentParameters                         PairedAdjustParams;                                      // 0x0098(0x0010) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bPairedCollision;                                        // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreFailSafeTimer;                                    // 0x00A9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCrouchDuringSpecialMove;                             // 0x00AA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCrouchAfterSpecialMove;                                 // 0x00AB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FailsafeDuration;                                        // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerZeroRootMotionDisableAnimationDelay;               // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AjustmentDuration;                                       // 0x00B4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetLocation;                                          // 0x00B8(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             targetDirection;                                         // 0x00C4(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCancelOnFailedAdjustment;                               // 0x00D0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSpecialMoveNetCorrection;                            // 0x00D1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bComputeRootMotionFromAnimation;                         // 0x00D2(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BTMQ[0x1];                                   // 0x00D3(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.ObjectiveTargetParams
	 * Size -> 0x0010
	 */
	struct FObjectiveTargetParams
	{
	public:
		class UClass*                                              PawnClass;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URBAIConfig*                                         configAsset;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.ObjectiveTargetsSpawnInfo
	 * Size -> 0x0018
	 */
	struct FObjectiveTargetsSpawnInfo
	{
	public:
		unsigned char                                              UnknownData_DLIB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FObjectiveTargetParams>                      TargetsInfo;                                             // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.AIDataBuildInfo
	 * Size -> 0x0010
	 */
	struct FAIDataBuildInfo
	{
	public:
		TArray<class URBNPCInterestPointComponent*>                InterestPoints;                                          // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OPP.BotRandomVOConfig
	 * Size -> 0x000C
	 */
	struct FBotRandomVOConfig
	{
	public:
		unsigned char                                              UnknownData_36EZ[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OPP.RBVoiceChatInputDevice
	 * Size -> 0x0028
	 */
	struct FRBVoiceChatInputDevice
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ID;                                                      // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LK13[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
